Search.setIndex({"alltitles": {"0. Computer vision libraries in PyTorch": [[177, "computer-vision-libraries-in-pytorch"]], "0. Simple Input/Output Still works": [[134, null]], "05. PyTorch Going Modular": [[186, null]], "1 distplot()": [[196, "distplot"]], "1. Arithmatic Operators": [[97, "arithmatic-operators"]], "1. Bar Plot": [[201, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[54, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[56, "changing-a-tuple"]], "1. Chat Messages": [[134, "chat-messages"]], "1. Dictionary Membership Test": [[57, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[86, "docstrings-for-python-modules"]], "1. Easy to Implement": [[37, "easy-to-implement"]], "1. Getting a GPU": [[174, "getting-a-gpu"]], "1. Identity operators": [[97, "identity-operators"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[158, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[56, "indexing"]], "1. List Membership Test": [[55, "list-membership-test"]], "1. Set Membership Test": [[58, "set-membership-test"]], "1. Simple Sequential Chains": [[121, "simple-sequential-chains"]], "1. Single lined comment:": [[91, "single-lined-comment"]], "1. Strip Plot": [[198, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[1, "supervised-learning"]], "1. Tuple Membership Test": [[56, "tuple-membership-test"]], "1. [] - Square brackets": [[41, "square-brackets"]], "1. break Statement in Nested Loop": [[51, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[51, "continue-statement-in-nested-loop"]], "1. match.group()": [[41, "match-group"]], "1. re.findall()": [[41, "re-findall"]], "10. () - Group": [[41, "group"]], "10. Creating FoodVision Big": [[183, "creating-foodvision-big"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[158, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "10.2 Getting data for FoodVision Big": [[183, "getting-data-for-foodvision-big"]], "10.3 Creating a subset of the Food101 dataset for faster experimenting": [[183, "creating-a-subset-of-the-food101-dataset-for-faster-experimenting"]], "10.4 Turning our Food101 datasets into DataLoaders": [[183, "turning-our-food101-datasets-into-dataloaders"]], "10.5 Training FoodVision Big model": [[183, "training-foodvision-big-model"]], "10.6 Inspecting loss curves of FoodVision Big model": [[183, "inspecting-loss-curves-of-foodvision-big-model"]], "10.7 Saving and loading FoodVision Big": [[183, "saving-and-loading-foodvision-big"]], "10.8 Checking FoodVision Big model size": [[183, "checking-foodvision-big-model-size"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[158, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[158, "create-a-4x4-identity-matrix"]], "11. Turning our FoodVision Big model into a deployable app": [[183, "turning-our-foodvision-big-model-into-a-deployable-app"]], "11. \\ - Backslash": [[41, "backslash"]], "11.1 Downloading an example image and moving it to the examples directory": [[183, "downloading-an-example-image-and-moving-it-to-the-examples-directory"]], "11.2 Saving Food101 class names to file (class_names.txt)": [[183, "saving-food101-class-names-to-file-class-names-txt"]], "11.3 Turning our FoodVision Big model into a Python script (model.py)": [[183, "turning-our-foodvision-big-model-into-a-python-script-model-py"]], "11.4 Turning our FoodVision Big Gradio app into a Python script (app.py)": [[183, "turning-our-foodvision-big-gradio-app-into-a-python-script-app-py"]], "11.5 Creating a requirements file for FoodVision Big (requirements.txt)": [[183, "creating-a-requirements-file-for-foodvision-big-requirements-txt"]], "11.6 Downloading our FoodVision Big app files": [[183, "downloading-our-foodvision-big-app-files"]], "11.7 Deploying our FoodVision Big app to HuggingFace Spaces": [[183, "deploying-our-foodvision-big-app-to-huggingface-spaces"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[158, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[158, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[158, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[158, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[158, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[158, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[158, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[196, "jointplot"]], "2. . - Period": [[41, "period"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[158, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[56, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[86, "docstrings-for-python-functions"]], "2. Getting PyTorch to run on the GPU": [[174, "getting-pytorch-to-run-on-the-gpu"]], "2. Inline comments": [[91, "inline-comments"]], "2. Iterating Through a Dictionary": [[57, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[55, "iterating-through-a-list"]], "2. Iterating Through a Set": [[58, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[56, "iterating-through-a-tuple"]], "2. Membership operators": [[97, "membership-operators"]], "2. Memory Efficient": [[37, "memory-efficient"]], "2. Negative Indexing": [[56, "negative-indexing"]], "2. Point Plot": [[201, "point-plot"]], "2. Python String Membership Operators": [[54, "python-string-membership-operators"]], "2. SERP API": [[130, "serp-api"]], "2. Summarization Chain": [[121, "summarization-chain"]], "2. Unsupervised Learning \ud83e\udde9": [[1, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[51, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[51, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[41, "match-start-match-end-and-match-span"]], "2. re.split()": [[41, "re-split"]], "2.1 Getting PyTorch to run on Apple Silicon": [[174, "getting-pytorch-to-run-on-apple-silicon"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[158, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[158, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[158, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[158, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[158, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[158, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[158, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[158, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[158, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[158, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[196, "pairplot"]], "3. Count Plot": [[201, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[158, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[1, "deep-learning"]], "3. Docstrings for Python Classes": [[86, "docstrings-for-python-classes"]], "3. Multi lined comment:": [[91, "multi-lined-comment"]], "3. Other List Operations in Python": [[55, "id1"]], "3. Putting tensors (and models) on the GPU": [[174, "putting-tensors-and-models-on-the-gpu"]], "3. Python Relational Operators": [[54, "python-relational-operators"]], "3. Represent Infinite Stream": [[37, "represent-infinite-stream"]], "3. Slicing": [[56, "slicing"]], "3. Wolfram Alpha": [[130, "wolfram-alpha"]], "3. ^ - Caret": [[41, "caret"]], "3. match.re and match.string": [[41, "match-re-and-match-string"]], "3. re.sub()": [[41, "re-sub"]], "3.2.2 Exploring the Four Equations": [[182, "exploring-the-four-equations"]], "3.3 Creating a training loop and training a model on batches of data": [[177, "creating-a-training-loop-and-training-a-model-on-batches-of-data"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[158, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[158, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[158, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[158, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[158, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[158, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[158, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[158, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[158, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[158, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 Levels Of Tone Matching Techniques:": [[143, "levels-of-tone-matching-techniques"]], "4 rugplot()": [[196, "rugplot"]], "4. $ - Dollar": [[41, "dollar"]], "4. Docstrings for Python Scripts": [[86, "docstrings-for-python-scripts"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[158, "how-to-find-the-memory-size-of-any-array"]], "4. Moving tensors back to the CPU": [[174, "moving-tensors-back-to-the-cpu"]], "4. Pipelining Generators": [[37, "pipelining-generators"]], "4. Reinforcement Learning \ud83c\udfae": [[1, "reinforcement-learning"]], "4. re.subn()": [[41, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[158, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[158, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[158, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[158, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[158, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[158, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[158, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[158, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[158, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[158, "how-to-print-all-the-values-of-an-array"]], "5 Levels Of Summarization: Novice to Expert": [[135, null]], "5 kdeplot()": [[196, "kdeplot"]], "5. * - Star": [[41, "star"]], "5. Docstrings for Python Packages": [[86, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[158, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. re.search()": [[41, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[158, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[158, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[158, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[158, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[158, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[158, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[158, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[158, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[158, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[158, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[158, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[41, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[158, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[158, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[158, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[158, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[158, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[158, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[158, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[158, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[158, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[158, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[158, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[41, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[158, "create-a-vector-with-values-ranging-from-20-to-59"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[158, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[158, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[158, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[158, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[158, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[158, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[158, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[158, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[158, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[158, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[158, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[41, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[158, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[158, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[158, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[158, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[158, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[158, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[158, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[158, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[158, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[158, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[158, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. | - Alternation": [[41, "alternation"]], "9.1 Create transform with data augmentation": [[178, "create-transform-with-data-augmentation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[158, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[158, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[158, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[158, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[158, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[158, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[158, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[158, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[158, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[158, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[212, null]], "About Python Programming": [[24, "about-python-programming"]], "Accept float input from User": [[96, "accept-float-input-from-user"]], "Accept multiline input from a user": [[96, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[96, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[96, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[56, "access-tuple-elements"]], "Access elements from a list": [[55, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[104, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[57, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[96, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[49, "accessing-the-index-in-for-loop"]], "Ad Hoc Example Financial Forecast Edit": [[142, "ad-hoc-example-financial-forecast-edit"]], "Add/Change List Elements": [[55, "add-change-list-elements"]], "Adding or Removing Elements": [[153, "adding-or-removing-elements"]], "Additional Regression Plots": [[195, null]], "Adjust train() function to track results with SummaryWriter()": [[181, "adjust-train-function-to-track-results-with-summarywriter"]], "Adjusting model_1 to fit a straight line": [[176, "adjusting-model-1-to-fit-a-straight-line"]], "Advanced Level": [[212, "advanced-level"]], "Advanced Retrieval With LangChain": [[136, null]], "Advanced string processing": [[54, "advanced-string-processing"]], "Advantage": [[82, "advantage"]], "Advantages of Recursion": [[80, "advantages-of-recursion"]], "Advantages of Tuple over List": [[56, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[87, "advantages-of-user-defined-functions"]], "Agents": [[121, "id1"], [122, "agents"]], "Agents - Make OpenAI Do Things For you": [[130, null]], "Agents \ud83e\udd16\ud83e\udd16": [[121, "agents"]], "Aggregate Statistics (Groupby)": [[171, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[2, "algorithm-evaluation"]], "An example cell": [[7, "an-example-cell"], [111, "an-example-cell"], [210, "an-example-cell"]], "Analyze Gradient Descent Progress": [[12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"], [18, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[199, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[200, "anatomy-of-violin-plot"]], "Angle between vectors": [[34, "angle-between-vectors"]], "Anomaly Detection Algorithm": [[2, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[2, null], [9, null]], "Apply condition": [[160, "apply-condition"]], "Architecture of a classification neural network": [[176, "architecture-of-a-classification-neural-network"]], "Argument of an Exception": [[73, "argument-of-an-exception"]], "Array": [[153, "array"]], "Array Attributes and Methods": [[154, "array-attributes-and-methods"]], "Array Manipulation": [[153, "array-manipulation"]], "Array datatypes": [[154, "array-datatypes"]], "Array indexing": [[155, null]], "Array math": [[156, null]], "Arrays reorganizing": [[157, null]], "Assigning value to constant in Python": [[92, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[92, "assigning-values-to-variables-in-python"]], "Assignment operators": [[97, "assignment-operators"]], "Backpropagation": [[8, "backpropagation"]], "Backpropagation Algorithm": [[8, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[49, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[150, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[201, null]], "Basic Graph": [[150, "basic-graph"]], "Basic Statistics": [[153, "basic-statistics"]], "Basic operations": [[174, "basic-operations"]], "Batch Gradient Descent": [[5, "batch-gradient-descent"], [6, "batch-gradient-descent"]], "Batch Messages": [[134, "batch-messages"]], "Be careful when copying arrays!!!": [[155, "be-careful-when-copying-arrays"]], "Become one with the data (data preparation)": [[178, "become-one-with-the-data-data-preparation"]], "Beginner": [[3, "beginner"]], "Beginner Level": [[212, "beginner-level"]], "Bitwise operators": [[97, "bitwise-operators"]], "Blogs": [[114, null]], "Bonus: Chapters With Timestamps": [[146, "bonus-chapters-with-timestamps"]], "Boolean Masking and Advanced Indexing": [[157, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[155, "boolean-array-indexing"]], "Boolean literals": [[93, "boolean-literals"]], "Box and Whiskers Chart": [[150, "box-and-whiskers-chart"]], "Box plot #1": [[150, "box-plot-1"]], "Box plot #2": [[150, "box-plot-2"]], "Breaking appart strings": [[54, "breaking-appart-strings"]], "Bringing FoodVision Mini to life by creating a Gradio demo": [[183, "bringing-foodvision-mini-to-life-by-creating-a-gradio-demo"]], "Broadcasting": [[156, "broadcasting"]], "Broadcasting with array reorganizing": [[157, "broadcasting-with-array-reorganizing"]], "Build model": [[175, "build-model"]], "Building Custom Iterators": [[36, "building-custom-iterators"]], "Building a Gradio interface": [[183, "building-a-gradio-interface"]], "Building a PyTorch linear model": [[175, "building-a-pytorch-linear-model"]], "Building a model": [[176, "building-a-model"]], "Building a model with non-linearity": [[176, "building-a-model-with-non-linearity"]], "Building a multi-class classification model in PyTorch": [[176, "building-a-multi-class-classification-model-in-pytorch"]], "Building a training and testing loop": [[176, "building-a-training-and-testing-loop"]], "Building color palettes:": [[192, "building-color-palettes"]], "Built-In Class Attributes": [[104, "built-in-class-attributes"]], "Built-in Functions with Set": [[58, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[39, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[54, "built-in-functions-to-work-with-python"]], "Business idea: Job Data As A Service": [[140, "business-idea-job-data-as-a-service"], [141, "business-idea-job-data-as-a-service"]], "Calculate Model Training Precision": [[15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"], [20, "calculate-model-training-precision"]], "Calculating patch embedding input and output shapes by hand": [[182, "calculating-patch-embedding-input-and-output-shapes-by-hand"]], "Calculus - Fourier Series": [[29, null]], "Canberra Distance": [[32, "canberra-distance"]], "Capital-pi notation": [[30, null]], "Capital-sigma notation": [[31, null]], "Cart ^": [[41, "cart"]], "Catching Exceptions in Python": [[73, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[73, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[51, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[197, "categorical-data-background"]], "Cell mode vs. script mode": [[179, "cell-mode-vs-script-mode"]], "Chaining Decorators in Python": [[39, "chaining-decorators-in-python"]], "Chains \u26d3\ufe0f\u26d3\ufe0f\u26d3\ufe0f": [[121, "chains"]], "Change tensor datatype": [[174, "change-tensor-datatype"]], "Changing Dictionary to JSON": [[70, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[71, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[70, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[57, "changing-and-adding-dictionary-elements"]], "Chat Message History": [[121, "chat-message-history"]], "Chat Messages": [[121, "chat-messages"]], "Chat Model": [[121, "chat-model"]], "Chatbots": [[122, "chatbots"]], "Chebyshev Distance": [[32, "chebyshev-distance"]], "Check python datatypes": [[26, "check-python-datatypes"]], "Checking the contents of a PyTorch model": [[175, "checking-the-contents-of-a-pytorch-model"]], "Checking the size of EffNetB2 feature extractor": [[183, "checking-the-size-of-effnetb2-feature-extractor"]], "Checking the size of ViT feature extractor": [[183, "checking-the-size-of-vit-feature-extractor"]], "Chunk your data up into smaller documents": [[137, "chunk-your-data-up-into-smaller-documents"]], "Class": [[103, "class"]], "Class Constructor": [[103, "class-constructor"]], "Class Without Getters and Setters": [[40, "class-without-getters-and-setters"]], "Closing Files in Python": [[70, "closing-files-in-python"]], "Code Understanding": [[122, "code-understanding"]], "Code blocks and outputs": [[27, "code-blocks-and-outputs"], [113, "code-blocks-and-outputs"]], "Collecting EffNetB2 feature extractor stats": [[183, "collecting-effnetb2-feature-extractor-stats"]], "Collecting ViT feature extractor stats": [[183, "collecting-vit-feature-extractor-stats"]], "Combining Arrays": [[153, "combining-arrays"]], "Common Python String Methods": [[54, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[164, "compare-dataframe-drop-vs-pop-vs-del"]], "Compare model results": [[178, "compare-model-results"]], "Compare model results and training time": [[177, "compare-model-results-and-training-time"]], "Comparing model results, prediction times and size": [[183, "comparing-model-results-prediction-times-and-size"]], "Comparision operators in Python": [[82, "comparision-operators-in-python"]], "Comparison": [[153, "comparison"]], "Comparison/Relational operators": [[97, "comparison-relational-operators"]], "Concepts at glance": [[3, null]], "Conditional Changes": [[171, "conditional-changes"]], "Conditional statements": [[44, "conditional-statements"]], "Conditionals in List Comprehension": [[59, "conditionals-in-list-comprehension"]], "Constants": [[92, "constants"]], "Constants  -": [[82, "constants"]], "Construct and train Model 1": [[178, "construct-and-train-model-1"]], "Constructors in Python": [[104, "constructors-in-python"]], "Content with notebooks": [[27, null], [113, null]], "Contextual Compression": [[136, "contextual-compression"]], "Control Flow Statements": [[44, "control-flow-statements"]], "Control Statements in Python": [[51, null]], "Control Statements in Python FAQs": [[51, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[190, null]], "Convert Pandas DataFrame to Python dictionary": [[168, null]], "Copying/Sorting": [[153, "copying-sorting"]], "Cosine Distance": [[32, "cosine-distance"]], "Cost Function": [[5, "cost-function"], [6, "cost-function"], [8, "cost-function"]], "Cost Function (Distortion)": [[4, "cost-function-distortion"]], "Courses": [[116, null]], "Create DataFrame from Hierarchical lists as columns": [[162, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[161, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[162, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[162, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[161, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[162, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[162, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[162, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[162, "create-dataframe-from-multiple-lists"]], "Create DataLoaders for ViT": [[183, "create-dataloaders-for-vit"]], "Create DataLoaders using automatically created transforms": [[181, "create-dataloaders-using-automatically-created-transforms"]], "Create DataLoaders using manually created transforms": [[181, "create-dataloaders-using-manually-created-transforms"]], "Create Datasets and DataLoaders": [[180, "create-datasets-and-dataloaders"], [181, "create-datasets-and-dataloaders"], [182, "create-datasets-and-dataloaders"], [184, "create-datasets-and-dataloaders"], [185, "create-datasets-and-dataloaders"]], "Create Datasets and DataLoaders (data_setup.py)": [[179, "create-datasets-and-dataloaders-data-setup-py"]], "Create Datasets and DataLoaders (script mode)": [[185, "create-datasets-and-dataloaders-script-mode"]], "Create Generators in Python": [[37, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[161, null]], "Create Pandas DataFrame from Python List": [[162, null]], "Create Test Objects": [[160, "create-test-objects"]], "Create TinyVGG model class": [[178, "create-tinyvgg-model-class"]], "Create a NumPy Array": [[154, "create-a-numpy-array"]], "Create a custom Dataset to replicate ImageFolder": [[178, "create-a-custom-dataset-to-replicate-imagefolder"]], "Create a function to display random images": [[178, "create-a-function-to-display-random-images"]], "Create a helper function to build SummaryWriter() instances": [[181, "create-a-helper-function-to-build-summarywriter-instances"]], "Create a helper function to set seeds": [[181, "create-a-helper-function-to-set-seeds"]], "Create a notebook with MyST Markdown": [[7, "create-a-notebook-with-myst-markdown"], [111, "create-a-notebook-with-myst-markdown"], [210, "create-a-notebook-with-myst-markdown"]], "Create embeddings of your documents to get ready for semantic search": [[137, "create-embeddings-of-your-documents-to-get-ready-for-semantic-search"]], "Create experiments and set up training code": [[181, "create-experiments-and-set-up-training-code"]], "Create feature extractor models": [[181, "create-feature-extractor-models"]], "Create the Transformer Encoder": [[182, "create-the-transformer-encoder"]], "Create train & test loop functions": [[178, "create-train-test-loop-functions"]], "Create train and test Dataset\u2019s and DataLoader\u2019s": [[178, "create-train-and-test-datasets-and-dataloaders"]], "Creating Custom Exceptions": [[74, "creating-custom-exceptions"]], "Creating DataLoaders for EffNetB2": [[183, "creating-dataloaders-for-effnetb2"]], "Creating Instance Objects": [[104, "creating-instance-objects"]], "Creating Python Dictionary": [[57, "creating-python-dictionary"]], "Creating Python List": [[55, "creating-python-list"]], "Creating Python Sets": [[58, "creating-python-sets"]], "Creating Python Tuple": [[56, "creating-python-tuple"]], "Creating a Lambda Function": [[59, "creating-a-lambda-function"]], "Creating a Transformer Encoder by combining our custom made layers": [[182, "creating-a-transformer-encoder-by-combining-our-custom-made-layers"]], "Creating a Transformer Encoder with PyTorch\u2019s Transformer layers": [[182, "creating-a-transformer-encoder-with-pytorchs-transformer-layers"]], "Creating a ViT feature extractor": [[183, "creating-a-vit-feature-extractor"]], "Creating a demos folder to store our FoodVision Mini app files": [[183, "creating-a-demos-folder-to-store-our-foodvision-mini-app-files"]], "Creating a folder for storing Python scripts": [[185, "creating-a-folder-for-storing-python-scripts"]], "Creating a folder of example images to use with our FoodVision Mini demo": [[183, "creating-a-folder-of-example-images-to-use-with-our-foodvision-mini-demo"]], "Creating a function to make an EffNetB2 feature extractor": [[183, "creating-a-function-to-make-an-effnetb2-feature-extractor"]], "Creating a function to make predictions across the test dataset": [[183, "creating-a-function-to-make-predictions-across-the-test-dataset"]], "Creating a function to map our inputs and outputs": [[183, "creating-a-function-to-map-our-inputs-and-outputs"]], "Creating a function to save the model": [[184, "creating-a-function-to-save-the-model"], [185, "creating-a-function-to-save-the-model"]], "Creating a function to save the model (script mode)": [[185, "creating-a-function-to-save-the-model-script-mode"]], "Creating a function to save the model (utils.py)": [[179, "creating-a-function-to-save-the-model-utils-py"]], "Creating a function to time our experiments": [[177, "creating-a-function-to-time-our-experiments"]], "Creating a helper function to get class names": [[178, "creating-a-helper-function-to-get-class-names"]], "Creating a list of example images": [[183, "creating-a-list-of-example-images"]], "Creating a loss function": [[182, "creating-a-loss-function"]], "Creating a loss function and optimizer for a multi-class PyTorch model": [[176, "creating-a-loss-function-and-optimizer-for-a-multi-class-pytorch-model"]], "Creating a loss function and optimizer in PyTorch": [[175, "creating-a-loss-function-and-optimizer-in-pytorch"]], "Creating a model and transforms for FoodVision Big": [[183, "creating-a-model-and-transforms-for-foodvision-big"]], "Creating a module in Python": [[82, "creating-a-module-in-python"]], "Creating a range and tensors like": [[174, "creating-a-range-and-tensors-like"]], "Creating a requirements file for FoodVision Mini (requirements.txt)": [[183, "creating-a-requirements-file-for-foodvision-mini-requirements-txt"]], "Creating a train() function to combine train_step() and test_step()": [[178, "creating-a-train-function-to-combine-train-step-and-test-step"]], "Creating a training and testing loop for a multi-class PyTorch model": [[176, "creating-a-training-and-testing-loop-for-a-multi-class-pytorch-model"]], "Creating a transform for torchvision.models (auto creation)": [[180, "creating-a-transform-for-torchvision-models-auto-creation"]], "Creating a transform for torchvision.models (manual creation)": [[180, "creating-a-transform-for-torchvision-models-manual-creation"]], "Creating an EffNetB2 feature extractor": [[183, "creating-an-effnetb2-feature-extractor"]], "Creating an Object in Python": [[104, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[58, "creating-an-empty-set-is-a-bit-tricky"]], "Creating an optimization loop in PyTorch": [[175, "creating-an-optimization-loop-in-pytorch"]], "Creating an optimizer": [[182, "creating-an-optimizer"]], "Creating image patches with torch.nn.Conv2d()": [[182, "creating-image-patches-with-torch-nn-conv2d"]], "Creating mutli-class classification data": [[176, "creating-mutli-class-classification-data"]], "Creating tensors": [[174, "creating-tensors"]], "Creating the class token embedding": [[182, "creating-the-class-token-embedding"]], "Creating the position embedding": [[182, "creating-the-position-embedding"]], "Creating train_step() and test_step() functions and train() to combine them": [[179, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [184, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [185, "creating-train-step-and-test-step-functions-and-train-to-combine-them"]], "Creating train_step() and test_step() functions and train() to combine them (script mode)": [[185, "creating-train-step-and-test-step-functions-and-train-to-combine-them-script-mode"]], "Creating transforms and loading data for Model 0": [[178, "creating-transforms-and-loading-data-for-model-0"]], "Custom Prompts": [[148, "custom-prompts"]], "Customizing Exception Classes": [[74, "customizing-exception-classes"]], "Data": [[175, "data"], [196, "data"]], "Data (preparing and loading)": [[175, "data-preparing-and-loading"]], "Data Cleaning": [[160, "data-cleaning"]], "Data Hiding": [[104, "data-hiding"]], "Data structures and algorithms": [[99, null]], "DataFrame Attributes": [[160, "dataframe-attributes"]], "DataFrame GroupBy": [[160, "dataframe-groupby"]], "DataFrame Iteration": [[160, "dataframe-iteration"]], "DataFrame Join": [[160, "dataframe-join"]], "DataFrame Options": [[160, "dataframe-options"]], "DataFrame Sorting": [[160, "dataframe-sorting"]], "DataFrame constructor": [[160, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[161, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[160, "dataframe-conversion"]], "DataFrame creation": [[160, "dataframe-creation"]], "DataFrame filter columns": [[160, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[161, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[161, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[161, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[161, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[161, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[161, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[161, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[161, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[160, "dataframe-metadata"]], "DataFrame modification": [[160, "dataframe-modification"]], "DataFrame rename columns": [[160, "dataframe-rename-columns"]], "DataFrame selection": [[160, "dataframe-selection"]], "DataFrame to dict by row": [[168, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[168, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[168, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[168, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[168, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[168, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[168, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[160, "dataframe-from-csv"]], "Dataframe from dict": [[160, "dataframe-from-dict"]], "Datasets": [[10, null]], "Decorating Functions with Parameters": [[39, "decorating-functions-with-parameters"]], "Decorators in Python": [[39, "decorators-in-python"]], "Defining a Class in Python": [[104, "defining-a-class-in-python"]], "Defining a Closure Function": [[38, "defining-a-closure-function"]], "Defining a Function": [[76, "defining-a-function"]], "Defining a function with parameters": [[76, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[76, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[76, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[76, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[4, "definition"], [5, "definition"], [6, "definition"], [8, "definition"]], "Delete Objects": [[104, "delete-objects"]], "Delete object properties": [[104, "delete-object-properties"]], "Delete/Remove List Elements": [[55, "delete-remove-list-elements"]], "Deleting Files": [[70, "deleting-files"]], "Density Estimation": [[2, "density-estimation"]], "Deployed Gradio app structure": [[183, "deployed-gradio-app-structure"]], "Deploying our FoodVision Mini app to HuggingFace Spaces": [[183, "deploying-our-foodvision-mini-app-to-huggingface-spaces"]], "Description": [[4, "description"]], "Determinant": [[156, "determinant"]], "Dictionary Built-in Dictionary Functions": [[57, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[100, null]], "Differences between Generator function and Normal function": [[37, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[1, "different-types-of-ml"]], "Different types of machine learning model deployment": [[183, "different-types-of-machine-learning-model-deployment"]], "Different ways to track machine learning experiments": [[181, "different-ways-to-track-machine-learning-experiments"]], "Disadvantages of Recursion": [[80, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[96, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[96, "display-output-number-in-various-type-format"]], "Dissimilarity Measure": [[32, null]], "Docstring Formats": [[86, "docstring-formats"]], "Docstrings": [[76, "docstrings"]], "Docstrings in Python": [[91, "docstrings-in-python"]], "Document Loaders": [[121, "document-loaders"]], "Documents": [[121, "documents"]], "Dot product": [[21, "dot-product"], [34, "dot-product"]], "Download different datasets": [[181, "download-different-datasets"]], "Downloading our FoodVision Mini app files": [[183, "downloading-our-foodvision-mini-app-files"]], "Draw Decision Boundaries": [[15, "draw-decision-boundaries"], [16, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[204, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[198, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[198, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[198, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[166, "drop-na-from-defined-rows"]], "Drop all duplicates": [[165, "drop-all-duplicates"]], "Drop all the columns using loc": [[164, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[164, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[164, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[164, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[164, "drop-column-in-place"]], "Drop column using a function": [[164, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[164, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[164, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[166, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[166, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[166, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[166, "drop-column-with-the-number-of-na"]], "Drop columns": [[160, "drop-columns"]], "Drop columns in pandas DataFrame": [[164, null]], "Drop columns with NA in pandas DataFrame": [[166, null]], "Drop duplicates and reset the index": [[165, "drop-duplicates-and-reset-the-index"], [166, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[165, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[165, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[165, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[165, null]], "Drop duplicates in place": [[165, "drop-duplicates-in-place"]], "Drop first n columns": [[164, "drop-first-n-columns"]], "Drop multiple columns": [[164, "drop-multiple-columns"]], "Drop range of columns using iloc": [[164, "drop-range-of-columns-using-iloc"]], "Drop single column": [[164, "drop-single-column"]], "Drop the last column": [[164, "drop-the-last-column"]], "E Books": [[115, null]], "Encapsulation": [[103, "encapsulation"]], "Ensemble Retriever": [[136, "ensemble-retriever"]], "Enumerate": [[73, "enumerate"]], "Equation 1 overview": [[182, "equation-1-overview"]], "Equation 1: Split data into patches and creating the class, position and patch embedding": [[182, "equation-1-split-data-into-patches-and-creating-the-class-position-and-patch-embedding"]], "Equation 2 overview": [[182, "equation-2-overview"]], "Equation 2: Multi-Head Attention (MSA)": [[182, "equation-2-multi-head-attention-msa"]], "Equation 3 overview": [[182, "equation-3-overview"]], "Equation 3: Multilayer Perceptron (MLP)": [[182, "equation-3-multilayer-perceptron-mlp"]], "Equation 4 overview": [[182, "equation-4-overview"]], "Escape Sequence": [[54, "escape-sequence"]], "Escape character \\": [[41, "escape-character"]], "Estimating Parameters for a Gaussian": [[2, "estimating-parameters-for-a-gaussian"]], "Euclidian Distance": [[32, "euclidian-distance"]], "Evaluate model by plotting loss curves": [[180, "evaluate-model-by-plotting-loss-curves"]], "Evaluating a model trained with non-linear activation functions": [[176, "evaluating-a-model-trained-with-non-linear-activation-functions"]], "Evaluation": [[122, "evaluation"]], "Example 1. Even function": [[29, "example-1-even-function"]], "Example 10: Print year, month, hour, minute and timestamp": [[61, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[61, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[61, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[61, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[61, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[61, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[61, "example-16-strptime"]], "Example 1:": [[48, "example-1"]], "Example 1: Current time using datetime object": [[65, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[92, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[92, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[61, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[64, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[68, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[66, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[62, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[63, "example-1-string-to-datetime-object"]], "Example 2:": [[48, "example-2"]], "Example 2: Creating string from a timestamp": [[62, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[64, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[65, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[92, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[61, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[68, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[66, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[63, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[92, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[65, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[61, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[64, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[62, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[68, "example-3-python-multithreading"]], "Example 4: Get current date": [[61, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[65, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[68, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[65, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[61, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[65, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[61, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[61, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[61, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[61, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[97, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[97, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[97, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[97, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[97, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[78, "example-share-a-global-variable-across-python-modules"]], "Example Selectors": [[121, "example-selectors"]], "Example Using decimal Module": [[82, "example-using-decimal-module"]], "Example Using math Module": [[82, "example-using-math-module"]], "Example Using operator Module": [[82, "example-using-operator-module"]], "Example Using os Module": [[82, "example-using-os-module"]], "Example Using random Module": [[82, "example-using-random-module"]], "Example Using statistics Module": [[82, "example-using-statistics-module"]], "Example Using string Module": [[82, "example-using-string-module"]], "Example Using sys Module": [[82, "example-using-sys-module"]], "Example of Inheritance in Python": [[105, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[105, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[41, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[168, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[51, "example"], [89, "example"]], "Example: Nested for loop": [[49, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[49, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[50, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[50, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[74, "example-user-defined-exception-in-python"]], "Examples": [[30, "examples"], [31, "examples"]], "Exceptions in Python": [[73, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[172, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[172, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[151, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[172, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[151, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[172, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[151, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[172, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[151, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[172, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[151, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[172, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[151, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[172, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[151, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[151, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[172, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[172, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[151, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[151, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[66, "exercises-level-1"]], "Expert Level": [[212, "expert-level"]], "Explicit Type Conversion": [[95, "explicit-type-conversion"]], "Exploring Figure 1": [[182, "exploring-figure-1"]], "Exploring Table 1": [[182, "exploring-table-1"]], "Exporting Data": [[160, "exporting-data"]], "Extra Credit: Loop this process through many twitter accounts": [[143, "extra-credit-loop-this-process-through-many-twitter-accounts"]], "Extra learning": [[175, "extra-learning"]], "Extra resources": [[176, "extra-resources"], [177, "extra-resources"], [178, "extra-resources"], [179, "extra-resources"], [181, "extra-resources"], [183, "extra-resources"]], "Extra rsources": [[182, "extra-rsources"]], "Extra-curriculum": [[180, "extra-curriculum"]], "Extract Data From Calls & Video Transcripts/Interviews": [[148, null]], "Extract Structured Data From Text: Expert Mode (Using Function Calling)": [[140, null]], "Extract Structured Data From Text: Expert Mode (Using Kor)": [[141, null]], "Extraction": [[122, "extraction"]], "FacetGrid": [[205, null], [205, "id1"]], "Factor Plot": [[202, null]], "Fashion MNIST": [[10, "fashion-mnist"]], "Feature Scaling": [[5, "feature-scaling"]], "Features (variables)": [[5, "features-variables"]], "File Positions": [[70, "file-positions"]], "File Types": [[70, "file-types"]], "File with csv Extension": [[70, "file-with-csv-extension"]], "File with json Extension": [[70, "file-with-json-extension"]], "File with txt Extension": [[70, "file-with-txt-extension"]], "File with xlsx Extension": [[70, "file-with-xlsx-extension"]], "File with xml Extension": [[70, "file-with-xml-extension"]], "Files": [[70, "files"]], "Filter, Sort, and Groupby": [[160, "filter-sort-and-groupby"]], "Filtering Data": [[171, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[9, "find-anomalies-using-gaussian-distribution"]], "Finding the min, max, mean, sum, etc (aggregation)": [[174, "finding-the-min-max-mean-sum-etc-aggregation"]], "Fing Outliers": [[9, "fing-outliers"]], "Flatten Data": [[157, "flatten-data"]], "Flattening the patch embedding with torch.nn.Flatten()": [[182, "flattening-the-patch-embedding-with-torch-nn-flatten"]], "FoodVision Mini model deployment experiment outline": [[183, "foodvision-mini-model-deployment-experiment-outline"]], "For instance if you want to generate a list of numbers": [[59, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[62, "format-code-list"], [63, "format-code-list"]], "Format output strings by its positions": [[96, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[8, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[8, "forward-propagation-example"]], "Freezing the base model and changing the output layer to suit our needs": [[180, "freezing-the-base-model-and-changing-the-output-layer-to-suit-our-needs"]], "Frozenset methods": [[58, "frozenset-methods"]], "Function Argument and Parameter": [[79, null]], "Function Calling Hello World Example": [[140, "function-calling-hello-world-example"]], "Function Calling Models": [[121, "function-calling-models"]], "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial": [[142, null]], "Function as a Parameter": [[38, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[79, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[38, "function-as-a-return-value"]], "Function pass Statement": [[76, "function-pass-statement"]], "Function return Statement": [[76, "function-return-statement"]], "Functionizing training and test loops": [[177, "functionizing-training-and-test-loops"]], "Functions in Python Math Module": [[84, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[2, "gaussian-normal-distribution"]], "General form": [[29, "general-form"]], "Generate Random Numbers": [[157, "generate-random-numbers"]], "Generators in Python": [[37, "generators-in-python"]], "Generic Seaborn Plots:": [[192, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[71, "get-current-directory-getcwd"]], "Get Data": [[182, "get-data"]], "Get a users Tweets": [[143, "get-a-users-tweets"]], "Get data": [[178, "get-data"], [179, "get-data"], [180, "get-data"], [181, "get-data"], [184, "get-data"], [185, "get-data"]], "Get multiple input values from a user in one line": [[96, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[160, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[26, null]], "Getting a dataset": [[177, "getting-a-dataset"]], "Getting a pretrained ViT model and creating a feature extractor": [[182, "getting-a-pretrained-vit-model-and-creating-a-feature-extractor"]], "Getting a pretrained model": [[180, "getting-a-pretrained-model"]], "Getting a pretrained model, freezing the base layers and changing the classifier head": [[181, "getting-a-pretrained-model-freezing-the-base-layers-and-changing-the-classifier-head"]], "Getting a summary of our model with torchinfo.summary()": [[180, "getting-a-summary-of-our-model-with-torchinfo-summary"]], "Getting a visual summary of our ViT model": [[182, "getting-a-visual-summary-of-our-vit-model"]], "Getting back to Decorators": [[39, "getting-back-to-decorators"]], "Getting data": [[183, "getting-data"]], "Getting information from tensors": [[174, "getting-information-from-tensors"]], "Getting prediction probabilities for a multi-class PyTorch model": [[176, "getting-prediction-probabilities-for-a-multi-class-pytorch-model"]], "Getting setup": [[180, "getting-setup"], [181, "getting-setup"], [182, "getting-setup"], [183, "getting-setup"]], "Getting specific: What\u2019s ViT made of?": [[182, "getting-specific-whats-vit-made-of"]], "Global Variables": [[77, "global-variables"]], "Global Variables Across Python Modules": [[78, "global-variables-across-python-modules"]], "Global and local variables": [[77, "global-and-local-variables"]], "Global in Nested Functions": [[78, "global-in-nested-functions"]], "Going Modular Scripts": [[187, null]], "Going Modular: Part 1 (cell mode)": [[184, null]], "Going Modular: Part 2 (script mode)": [[185, null]], "Going from raw model outputs to predicted labels (logits -> prediction probabilities -> prediction labels)": [[176, "going-from-raw-model-outputs-to-predicted-labels-logits-prediction-probabilities-prediction-labels"]], "Gradient Computation": [[8, "gradient-computation"]], "Gradio overview": [[183, "gradio-overview"]], "Group the strips by a categorical variable": [[198, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[100, "high-level-languages"]], "Hamming Distance": [[32, "hamming-distance"]], "Handling timezone in Python": [[61, "handling-timezone-in-python"]], "Help topics": [[91, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[54, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[23, "heres-my-first-section"], [112, "heres-my-first-section"], [209, "heres-my-first-section"]], "Here\u2019s my sample title": [[23, null], [112, null], [209, null]], "Hierarchical Inheritance": [[105, "hierarchical-inheritance"]], "Higher Order Functions": [[38, "higher-order-functions"]], "Histogram": [[150, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[58, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[62, "how-strftime-works"]], "How strptime() works?": [[63, "how-strptime-works"]], "How to Install NumPy?": [[153, "how-to-install-numpy"]], "How to access characters in a string?": [[54, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[76, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[54, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[54, "how-to-create-a-string-in-python"]], "How to deal with overfitting": [[178, "how-to-deal-with-overfitting"]], "How to deal with underfitting": [[178, "how-to-deal-with-underfitting"]], "How to get current date and time in Python?": [[64, null]], "How to import modules in Python?": [[82, "how-to-import-modules-in-python"]], "How to learn Python?": [[24, "how-to-learn-python"]], "How to slice a string in Python?": [[54, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[55, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[163, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[163, "how-to-use-dataframe-tail-function"]], "How\u2019s it going to function?": [[183, "hows-it-going-to-function"]], "Hybrid Inheritance": [[105, "hybrid-inheritance"]], "Hypothesis": [[5, "hypothesis"]], "Hypothesis (the Model)": [[6, "hypothesis-the-model"]], "Identifiers": [[90, "identifiers"]], "Identity matrix": [[33, "identity-matrix"]], "Illustrate Hidden Layers Perceptrons": [[18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"], [20, "illustrate-hidden-layers-perceptrons"]], "Implicit Type Conversion": [[95, "implicit-type-conversion"]], "Import Dependencies": [[9, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"], [20, "import-dependencies"]], "Import NumPy and Check Version": [[153, "import-numpy-and-check-version"]], "Importing Data": [[160, "importing-data"]], "Importing PyTorch": [[174, "importing-pytorch"]], "Importing PyTorch and setting up device-agnostic code": [[178, "importing-pytorch-and-setting-up-device-agnostic-code"]], "Importing module from a package": [[85, "importing-module-from-a-package"]], "Importing the Package": [[123, "importing-the-package"]], "Improving a model (from a model perspective)": [[176, "improving-a-model-from-a-model-perspective"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[26, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[160, "index"]], "Indexes - Structuring documents to LLMs can work with them": [[121, "indexes-structuring-documents-to-llms-can-work-with-them"]], "Indexing": [[160, "indexing"]], "Indexing (selecting data from tensors)": [[174, "indexing-selecting-data-from-tensors"]], "Indexing a 1D array": [[155, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[155, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[26, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[103, "inheritance"]], "Inheritance in Python": [[105, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"], [14, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[11, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"], [18, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[19, "init-and-train-mlp-model"], [20, "init-and-train-mlp-model"]], "Input and output shapes": [[176, "input-and-output-shapes"]], "Input and output shapes of a computer vision model": [[177, "input-and-output-shapes-of-a-computer-vision-model"]], "Inputs and outputs, layers and blocks": [[182, "inputs-and-outputs-layers-and-blocks"]], "Insert columns": [[160, "insert-columns"]], "Inspecting EffNetB2 loss curves": [[183, "inspecting-effnetb2-loss-curves"]], "Inspecting Strings": [[54, "inspecting-strings"]], "Inspecting ViT loss curves": [[183, "inspecting-vit-loss-curves"]], "Installation": [[123, "installation"]], "Instance Variables and Methods": [[103, "instance-variables-and-methods"]], "Instructing LLMs To Match Tone": [[143, null]], "Integer array indexing": [[155, "integer-array-indexing"]], "Interacting with APIs": [[122, "interacting-with-apis"]], "Interactive widget to create a sequential cubehelix palette:": [[192, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Interesting User Feedback (Persona: Investor):": [[140, "interesting-user-feedback-persona-investor"], [141, "interesting-user-feedback-persona-investor"]], "Intermediate Level": [[212, "intermediate-level"]], "Interpreter Vs Compiler": [[100, "interpreter-vs-compiler"]], "Introduction": [[123, "introduction"]], "Introduction to *args and **kwargs in Python": [[42, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[119, null]], "Introduction to Machine Learning! \ud83d\ude80": [[1, null]], "Introduction to tensors": [[174, "introduction-to-tensors"]], "Iris Flowers": [[10, "iris-flowers"]], "Iterate Dictionary using for loop": [[49, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[49, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[50, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[50, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[49, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[49, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[50, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[49, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[54, "iterating-through-a-string"]], "Iterating Through an Iterator": [[36, "iterating-through-an-iterator"]], "Iterative statements": [[44, "iterative-statements"]], "Iterators in Python": [[36, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[100, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[160, "join-combine"]], "Jupyter Demos": [[2, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [6, "jupyter-demos"], [8, "jupyter-demos"]], "K-Means Algorithm": [[4, null]], "K-Means Algorithm Demo": [[11, null]], "KEY DIFFERENCE": [[100, "key-difference"]], "KEY SIMILARITIES": [[100, "key-similarities"]], "Key Points to Remember": [[59, "key-points-to-remember"], [95, "key-points-to-remember"]], "Key Points to Remember:": [[103, "key-points-to-remember"]], "Keywords": [[90, "keywords"]], "Kor Hello World Example": [[141, "kor-hello-world-example"]], "LM Plot and Reg Plot": [[193, null]], "Lambda Function": [[59, "lambda-function"]], "LangChain Components": [[121, "langchain-components"]], "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[122, null]], "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[121, null]], "LangChain Magic": [[144, "langchain-magic"]], "LangChain Support For Functions": [[142, "langchain-support-for-functions"]], "LangChain Use Cases": [[122, "langchain-use-cases"]], "LangGraphs": [[126, null]], "LangServe": [[127, null]], "LangSmith": [[128, null]], "Langchain": [[125, null]], "Langchain expression language": [[129, null]], "Langchain modules": [[124, null]], "Langchain projects gallery": [[125, "langchain-projects-gallery"], [149, null]], "Language Model": [[121, "language-model"]], "Let us see valid variable names": [[92, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[203, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[89, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[196, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[196, "lets-implement-with-dataset"]], "Level 1: Basic Prompt - Summarize a couple sentences": [[135, "level-1-basic-prompt-summarize-a-couple-sentences"]], "Level 2: Prompt Templates - Summarize a couple paragraphs": [[135, "level-2-prompt-templates-summarize-a-couple-paragraphs"]], "Level 3: Map Reduce - Summarize a couple pages multiple pages": [[135, "level-3-map-reduce-summarize-a-couple-pages-multiple-pages"]], "Level 4: Best Representation Vectors - Summarize an entire book": [[135, "level-4-best-representation-vectors-summarize-an-entire-book"]], "Level 5: Agents - Summarize an unknown amount of text": [[135, "level-5-agents-summarize-an-unknown-amount-of-text"]], "Line Graph": [[150, "line-graph"]], "Linear Algebra": [[28, null]], "Linear Algebra - Matrices": [[33, null]], "Linear Algebra - Vectors": [[34, null]], "Linear Regression": [[5, null]], "Linspace": [[157, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[59, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[55, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[59, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[71, "list-directories-and-files-listdir"]], "List Index": [[55, "list-index"]], "List comprehension can be combined with if statement": [[59, "list-comprehension-can-be-combined-with-if-statement"]], "List of Tools": [[130, "list-of-tools"]], "Literal Collections": [[93, "literal-collections"]], "Load Data from File": [[157, "load-data-from-file"]], "Load Documents": [[133, null]], "Load Fifa Data": [[150, "load-fifa-data"]], "Load Necessary Libraries": [[150, "load-necessary-libraries"]], "Load Your LLM": [[133, "load-your-llm"]], "Load in NumPy Library": [[154, "load-in-numpy-library"]], "Load in the best model and make predictions with it": [[181, "load-in-the-best-model-and-make-predictions-with-it"]], "Load the Data": [[9, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"], [20, "load-the-data"]], "Load up our texts and documents": [[136, "load-up-our-texts-and-documents"]], "Load up your HTML from your company page": [[144, "load-up-your-html-from-your-company-page"]], "Load your data": [[137, "load-your-data"]], "Loading Datasets in Seaborn": [[189, null]], "Loading a saved PyTorch model\u2019s state_dict()": [[175, "loading-a-saved-pytorch-models-state-dict"]], "Loading data into Pandas": [[171, "loading-data-into-pandas"]], "Loading in a custom image with PyTorch": [[178, "loading-in-a-custom-image-with-pytorch"]], "Local Variables": [[77, "local-variables"]], "LogSpace": [[157, "logspace"]], "Logical/Boolean operators": [[97, "logical-boolean-operators"]], "Logistic Regression": [[6, null]], "Logistic Regression With Linear Boundary Demo": [[15, null]], "Logistic Regression With Non-Linear Boundary Demo": [[16, null]], "Loops in Python": [[49, null], [50, null]], "MACHINE CODE": [[100, "machine-code"]], "MNIST (Handwritten Digits)": [[10, "mnist-handwritten-digits"]], "Main Use Cases": [[122, "main-use-cases"]], "Main takeaways": [[178, "main-takeaways"], [180, "main-takeaways"], [181, "main-takeaways"], [182, "main-takeaways"], [183, "main-takeaways"]], "Make a prediction on a custom image": [[178, "make-a-prediction-on-a-custom-image"]], "Make and evaluate random predictions with best model": [[177, "make-and-evaluate-random-predictions-with-best-model"]], "Make classification data and get it ready": [[176, "make-classification-data-and-get-it-ready"]], "Make predictions and evaluate the model": [[176, "make-predictions-and-evaluate-the-model"]], "Make predictions and get Model 0 results": [[177, "make-predictions-and-get-model-0-results"]], "Make predictions on a custom image": [[182, "make-predictions-on-a-custom-image"]], "Make predictions on images from the test set": [[180, "make-predictions-on-images-from-the-test-set"]], "Making a New Directory mkdir() -": [[71, "making-a-new-directory-mkdir"]], "Making a confusion matrix for further prediction evaluation": [[177, "making-a-confusion-matrix-for-further-prediction-evaluation"]], "Making a model (TinyVGG)": [[184, "making-a-model-tinyvgg"], [185, "making-a-model-tinyvgg"]], "Making a model (TinyVGG) (script mode)": [[185, "making-a-model-tinyvgg-script-mode"]], "Making a model (model_builder.py)": [[179, "making-a-model-model-builder-py"]], "Making and evaluating predictions with a PyTorch multi-class model": [[176, "making-and-evaluating-predictions-with-a-pytorch-multi-class-model"]], "Making and timing predictions with EffNetB2": [[183, "making-and-timing-predictions-with-effnetb2"]], "Making and timing predictions with ViT": [[183, "making-and-timing-predictions-with-vit"]], "Making changes to the data": [[171, "making-changes-to-the-data"]], "Making predictions": [[175, "making-predictions"]], "Making predictions on a custom image": [[180, "making-predictions-on-a-custom-image"]], "Making predictions using torch.inference_mode()": [[175, "making-predictions-using-torch-inference-mode"]], "Making predictions with a trained PyTorch model (inference)": [[175, "making-predictions-with-a-trained-pytorch-model-inference"]], "Making predictions with our trained models and timing them": [[183, "making-predictions-with-our-trained-models-and-timing-them"]], "Manhattan Distance": [[32, "manhattan-distance"]], "Manipulating tensors (tensor operations)": [[174, "manipulating-tensors-tensor-operations"]], "Markdown + notebooks": [[27, "markdown-notebooks"], [113, "markdown-notebooks"]], "Markdown Files": [[22, null], [110, null]], "Match object": [[41, "match-object"]], "Mathematics": [[153, "mathematics"]], "Mathematics essentials": [[35, null]], "Mathematics for Machine Learning": [[25, null]], "Matplotlib": [[150, null]], "Matplotlib vs. Seaborn Plotting Code": [[191, null]], "Matrices": [[174, "matrices"]], "Matrix Multiplication": [[156, "matrix-multiplication"]], "Matrix addition": [[33, "matrix-addition"]], "Matrix determinant": [[33, "matrix-determinant"]], "Matrix inverse": [[33, "matrix-inverse"]], "Matrix multipication": [[21, "matrix-multipication"]], "Matrix multiplication": [[33, "matrix-multiplication"]], "Matrix multiplication (is all you need)": [[174, "matrix-multiplication-is-all-you-need"]], "Matrix operations": [[33, "matrix-operations"]], "Matrix subtraction": [[33, "matrix-subtraction"]], "Matrix transpose": [[33, "matrix-transpose"]], "Memory": [[121, "memory"]], "MetaCharacters": [[41, "metacharacters"]], "Metadata info of DataFrame": [[160, "metadata-info-of-dataframe"]], "Method #1: Simple - Describe the tone you would like": [[143, "method-1-simple-describe-the-tone-you-would-like"]], "Method #2: Intermediate - Specify your tone description + examples": [[143, "method-2-intermediate-specify-your-tone-description-examples"]], "Method #3: AI-Assisted: Ask the LLM help with tone descriptions": [[143, "method-3-ai-assisted-ask-the-llm-help-with-tone-descriptions"]], "Method 4 - Technique Fusion: Combine multiple techniques to mimic tone": [[143, "method-4-technique-fusion-combine-multiple-techniques-to-mimic-tone"]], "Method Overriding": [[105, "method-overriding"]], "Method Resolution Order in Python": [[105, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[103, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[10, "microchips-tests-artificial"]], "Minkowski Distance": [[32, "minkowski-distance"]], "Miscellaneous": [[157, "miscellaneous"]], "Model 0: Build a baseline model": [[177, "model-0-build-a-baseline-model"]], "Model 0: TinyVGG without data augmentation": [[178, "model-0-tinyvgg-without-data-augmentation"]], "Model 1: Building a better model with non-linearity": [[177, "model-1-building-a-better-model-with-non-linearity"]], "Model 1: TinyVGG with Data Augmentation": [[178, "model-1-tinyvgg-with-data-augmentation"]], "Model 2: Building a Convolutional Neural Network (CNN)": [[177, "model-2-building-a-convolutional-neural-network-cnn"]], "Models - The interface to the AI brains": [[121, "models-the-interface-to-the-ai-brains"]], "Modify Object Properties": [[104, "modify-object-properties"]], "Modifying a set in Python": [[58, "modifying-a-set-in-python"]], "More": [[153, "more"], [153, "id2"]], "More classification evaluation metrics": [[176, "more-classification-evaluation-metrics"]], "Moving our trained EffNetB2 model to our FoodVision Mini demo directory": [[183, "moving-our-trained-effnetb2-model-to-our-foodvision-mini-demo-directory"]], "Multi-class Classification": [[8, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[6, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[86, "multi-line-docstrings-in-python"]], "Multi-line statement": [[91, "multi-line-statement"]], "MultiQuery": [[136, "multiquery"]], "Multidimensional": [[30, "multidimensional"], [31, "multidimensional"]], "Multiple Fields": [[141, "multiple-fields"]], "Multiple Results": [[140, "multiple-results"]], "Multithreading in Python": [[68, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[12, null]], "Multivariate Logistic Regression Demo": [[17, null], [18, null]], "My Journey": [[0, null]], "My workflow": [[179, "my-workflow"]], "My workflow for replicating papers": [[182, "my-workflow-for-replicating-papers"]], "MyST markdown": [[27, "myst-markdown"], [113, "myst-markdown"]], "Need of Encapsulation": [[103, "need-of-encapsulation"]], "Negative indexing": [[55, "negative-indexing"]], "Nested Loops in List Comprehension": [[59, "nested-loops-in-list-comprehension"]], "Nested break loops": [[51, "nested-break-loops"]], "Nested continue loops": [[51, "nested-continue-loops"]], "Nested for loops": [[49, "nested-for-loops"]], "Nested while loops": [[50, "nested-while-loops"]], "Network Model (Set of Neurons)": [[8, "network-model-set-of-neurons"]], "Neural Network": [[8, null]], "Neural Network (Multilayer Perceptron) Demo": [[19, null], [20, null]], "Neuron Model (Logistic Unit)": [[8, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[10, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[13, null]], "Nonlocal Variables": [[77, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[38, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[5, "normal-equation"]], "Notebooks with MyST Markdown": [[7, null], [111, null], [210, null]], "NumPy Array Types:": [[154, "numpy-array-types"]], "NumPy Basics": [[153, "numpy-basics"], [153, "id1"]], "Number Data Type in Python": [[53, "number-data-type-in-python"]], "Numeric Literals": [[93, "numeric-literals"]], "Numpy Array basics": [[154, "numpy-array-basics"]], "Numpy Documentation": [[157, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[154, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[100, "object-code"]], "Object": [[103, "object"]], "Object Default Methods": [[103, "object-default-methods"]], "Object Method": [[103, "object-method"]], "Object Oriented Programming": [[103, "object-oriented-programming"]], "Object Properties": [[104, "object-properties"]], "Old style formatting": [[54, "old-style-formatting"]], "One hot encoding": [[21, "one-hot-encoding"]], "One of the most common errors in deep learning (shape errors)": [[174, "one-of-the-most-common-errors-in-deep-learning-shape-errors"]], "One or more times +": [[41, "one-or-more-times"]], "OpenAI Vanilla Example": [[142, "openai-vanilla-example"]], "Opening Attributes - Real World Example": [[140, "opening-attributes-real-world-example"], [141, "opening-attributes-real-world-example"]], "Opening Files in Python": [[70, "opening-files-in-python"]], "Operations": [[153, "operations"]], "Option #1: Chroma (for local)": [[137, "option-1-chroma-for-local"]], "Option #1: Pinecone": [[146, "option-1-pinecone"]], "Option #2: Chroma": [[146, "option-2-chroma"]], "Option #2: Pinecone (for cloud)": [[137, "option-2-pinecone-for-cloud"]], "Option 1: Loading Image Data Using ImageFolder": [[178, "option-1-loading-image-data-using-imagefolder"]], "Option 2: Loading Image Data with a Custom Dataset": [[178, "option-2-loading-image-data-with-a-custom-dataset"]], "Orthogonality and Parallelism": [[34, "orthogonality-and-parallelism"]], "Other Dictionary Operations": [[57, "other-dictionary-operations"]], "Other Frozenset methods": [[58, "other-frozenset-methods"]], "Other List Operations in Python": [[55, "other-list-operations-in-python"]], "Other Python Set Methods": [[58, "other-python-set-methods"]], "Other Set Operations": [[58, "other-set-operations"]], "Other Tuple Operations": [[56, "other-tuple-operations"]], "Other forms of transforms (data augmentation)": [[178, "other-forms-of-transforms-data-augmentation"]], "Other topics": [[125, "other-topics"]], "Output Parsers Method 1: Prompt Instructions & String Parsing": [[121, "output-parsers-method-1-prompt-instructions-string-parsing"]], "Output Parsers Method 2: OpenAI Fuctions": [[121, "output-parsers-method-2-openai-fuctions"]], "Output String justification": [[96, "output-string-justification"]], "Output formatting": [[96, "output-formatting"]], "Output text alignment specifying a width": [[96, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[5, "overfitting-problem"], [6, "overfitting-problem"]], "Overloading Comparison Operators": [[106, "overloading-comparison-operators"]], "Overloading the + Operator": [[106, "overloading-the-operator"]], "Overriding parent method": [[103, "overriding-parent-method"]], "Package manager and virtual environment": [[26, "package-manager-and-virtual-environment"]], "Packing": [[73, "packing"]], "Packing Dictionaries": [[73, "packing-dictionaries"]], "Packing Lists": [[73, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[73, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[204, null]], "Pandas DataFrame head, tail, at, iat": [[163, null]], "Parameters": [[5, "parameters"]], "Parameters:": [[160, "parameters"]], "Parent Document Retriever": [[136, "parent-document-retriever"]], "Part 1: with Iris dataset": [[204, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[204, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[201, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[201, "part-2-with-tips-dataset"]], "Pass the tweets as examples": [[143, "pass-the-tweets-as-examples"]], "Passing Arguments with Key and Value": [[76, "passing-arguments-with-key-and-value"]], "Performance-speed tradeoff": [[177, "performance-speed-tradeoff"]], "Period .": [[41, "id3"]], "Personalized email generation": [[144, null]], "Pie Chart": [[150, "pie-chart"]], "Pie Chart #1": [[150, "pie-chart-1"]], "Pie Chart #2": [[150, "pie-chart-2"]], "Pie Chart #3": [[150, "pie-chart-3"]], "Placeholders": [[153, "placeholders"]], "Plot Precision/Recall Progress": [[9, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"], [20, "plot-test-dataset-predictions"]], "Plot feature extractor ViT model loss curves": [[182, "plot-feature-extractor-vit-model-loss-curves"]], "Plot the Clustering Results": [[11, "plot-the-clustering-results"]], "Plot the Data": [[9, "plot-the-data"], [11, "plot-the-data"], [13, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"], [20, "plot-the-data"]], "Plot the Model Predictions": [[12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"], [14, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[196, "plot-the-distribution-on-the-vertical-axis"]], "Plot the loss curves of Model 0": [[178, "plot-the-loss-curves-of-model-0"]], "Plot the loss curves of Model 1": [[178, "plot-the-loss-curves-of-model-1"]], "Plot the loss curves of our ViT model": [[182, "plot-the-loss-curves-of-our-vit-model"]], "Polymorphism": [[103, "polymorphism"]], "Polynomial Regression": [[5, "polynomial-regression"]], "Positional Arguments (Basic)": [[79, "positional-arguments-basic"]], "Positional min/max": [[174, "positional-min-max"]], "Practice Problem": [[96, "practice-problem"]], "Predict on a custom image with the best model": [[181, "predict-on-a-custom-image-with-the-best-model"]], "Predicting on custom images with a trained PyTorch model": [[178, "predicting-on-custom-images-with-a-trained-pytorch-model"]], "Prepara the Data for Training": [[11, "prepara-the-data-for-training"], [15, "prepara-the-data-for-training"]], "Prepare DataLoader": [[177, "prepare-dataloader"]], "Prepare the Data for Training": [[16, "prepare-the-data-for-training"]], "Prepare transforms for images": [[182, "prepare-transforms-for-images"]], "Preparing data for the pretrained ViT model": [[182, "preparing-data-for-the-pretrained-vit-model"]], "Preparing data to see if our model can model a straight line": [[176, "preparing-data-to-see-if-our-model-can-model-a-straight-line"]], "Prerequisites for learning decorators": [[39, "prerequisites-for-learning-decorators"]], "Print Training Results": [[17, "print-training-results"], [18, "print-training-results"]], "Print blank lines": [[89, "print-blank-lines"]], "Private members of parent class": [[105, "private-members-of-parent-class"]], "Product notation": [[30, "product-notation"]], "Programming Steps Comparision:": [[100, "programming-steps-comparision"]], "Prompt": [[121, "prompt"]], "Prompt Template": [[121, "prompt-template"]], "Prompt Templates": [[134, "prompt-templates"]], "Promptless changes": [[148, "promptless-changes"]], "Prompts - Text generally used as instructions to your model": [[121, "prompts-text-generally-used-as-instructions-to-your-model"]], "Properties": [[30, "properties"], [31, "properties"]], "Properties of identity matrix": [[33, "properties-of-identity-matrix"]], "Properties of matrix addition": [[33, "properties-of-matrix-addition"]], "Properties of matrix determinant": [[33, "properties-of-matrix-determinant"]], "Properties of matrix multiplication": [[33, "properties-of-matrix-multiplication"]], "Properties of matrix subtraction": [[33, "properties-of-matrix-subtraction"]], "Properties of matrix transpose": [[33, "properties-of-matrix-transpose"]], "Properties of scalar multiplication": [[33, "properties-of-scalar-multiplication"]], "Pros and cons of notebooks vs Python scripts": [[179, "pros-and-cons-of-notebooks-vs-python-scripts"]], "Pulling Data From Twitter": [[147, "pulling-data-from-twitter"]], "Pulling Data From Websites": [[147, "pulling-data-from-websites"]], "Pulling Data From YouTube": [[147, "pulling-data-from-youtube"]], "Putting custom image prediction together: building a function": [[178, "putting-custom-image-prediction-together-building-a-function"]], "Putting it all together": [[175, "putting-it-all-together"]], "Putting it all together to create ViT": [[182, "putting-it-all-together-to-create-vit"]], "Putting it all together: from image to embedding": [[182, "putting-it-all-together-from-image-to-embedding"]], "Putting things together by building a multi-class PyTorch model": [[176, "putting-things-together-by-building-a-multi-class-pytorch-model"]], "PyTorch Computer Vision": [[177, null]], "PyTorch Custom Datasets": [[178, null]], "PyTorch Experiment Tracking": [[181, null]], "PyTorch Fundamentals": [[174, null]], "PyTorch Going Modular": [[179, null]], "PyTorch Model Deployment": [[183, null]], "PyTorch Neural Network Classification": [[176, null]], "PyTorch Paper Replicating": [[182, null]], "PyTorch Transfer Learning": [[180, null]], "PyTorch Workflow Fundamentals": [[175, null]], "PyTorch in the wild": [[179, "pytorch-in-the-wild"], [185, "pytorch-in-the-wild"]], "PyTorch model building essentials": [[175, "pytorch-model-building-essentials"]], "PyTorch tensors & NumPy": [[174, "pytorch-tensors-numpy"]], "PyTorch testing loop": [[175, "pytorch-testing-loop"]], "PyTorch training loop": [[175, "pytorch-training-loop"]], "Pydantic Model": [[140, "pydantic-model"]], "Python  Classes and Objects": [[104, null]], "Python **kwargs": [[42, "python-kwargs"]], "Python *args": [[42, "python-args"]], "Python *args and **kwargs": [[42, null]], "Python - filter Function": [[39, "python-filter-function"]], "Python - map Function": [[39, "python-map-function"]], "Python @property decorator": [[40, null]], "Python Advanced Topics": [[24, "python-advanced-topics"], [43, null]], "Python Anonymous/lambda Function": [[81, null]], "Python Applications Area": [[26, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[79, "python-arbitrary-variable-length-arguments"]], "Python AttributeError": [[72, "python-attributeerror"]], "Python Built-In Modules Examples": [[82, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[72, "python-built-in-exceptions"]], "Python Built-in List Functions": [[55, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[56, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[104, "id1"]], "Python Closures": [[38, null]], "Python Comments": [[86, "python-comments"], [91, "python-comments"]], "Python Comments Using Strings": [[86, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[86, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[74, null]], "Python Data Types": [[24, "python-data-types"], [60, null], [94, null]], "Python DataFrame": [[160, "python-dataframe"]], "Python Date & Time Module": [[24, "python-date-time-module"], [69, null]], "Python Decimal": [[53, "python-decimal"]], "Python Decorators": [[39, null]], "Python Default Arguments": [[79, "python-default-arguments"]], "Python Dictionary": [[57, null]], "Python Dictionary Comprehension": [[57, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[57, "python-dictionary-methods"]], "Python Dictionary {}": [[94, "python-dictionary"]], "Python Directory": [[71, "python-directory"]], "Python Directory and Files Management": [[71, null]], "Python Docstrings": [[86, null]], "Python Errors and Built-in Exceptions": [[72, null]], "Python Exceptions Handling Using try, except and finally statement": [[73, null]], "Python File I/O": [[70, null]], "Python File Methods": [[70, "python-file-methods"]], "Python Files": [[24, "python-files"], [75, null]], "Python Flow Control": [[24, "python-flow-control"], [52, null]], "Python Flow-Control (Decision-Making) Statements": [[44, null]], "Python Fractions": [[53, "python-fractions"]], "Python Frozenset": [[58, "python-frozenset"]], "Python Function Arguments": [[79, "python-function-arguments"]], "Python Functions": [[24, "python-functions"], [76, null], [88, null]], "Python Generator Expression": [[37, "python-generator-expression"]], "Python Generators with a Loop": [[37, "python-generators-with-a-loop"]], "Python Get Current time": [[65, null]], "Python Global, Local and Nonlocal variables": [[77, null]], "Python Hello, World": [[89, null]], "Python Import function": [[96, "python-import-function"]], "Python Indentation": [[91, "python-indentation"]], "Python IndexError": [[72, "python-indexerror"]], "Python Infinite Iterators": [[36, "python-infinite-iterators"]], "Python Inheritance": [[105, null]], "Python Input Using input() function": [[96, "python-input-using-input-function"]], "Python Input, Output and Import": [[96, null]], "Python Installation": [[26, "python-installation"]], "Python Introduction": [[24, null], [102, null]], "Python Iterators": [[36, null]], "Python KeyError": [[72, "python-keyerror"]], "Python Keyword Arguments": [[79, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[90, null]], "Python List": [[55, null]], "Python List Comprehension": [[59, null]], "Python List Methods": [[55, "python-list-methods"]], "Python List Operations": [[55, "python-list-operations"]], "Python List []": [[94, "python-list"]], "Python Literals": [[93, null]], "Python Logical Errors (Exceptions)": [[72, "python-logical-errors-exceptions"]], "Python Mathematical Functions": [[84, null]], "Python Mathematics": [[53, "python-mathematics"]], "Python Matplotlib": [[151, null], [152, null]], "Python Matplotlib Module": [[24, "python-matplotlib-module"]], "Python Module Search Path": [[82, "python-module-search-path"]], "Python ModuleNotFoundError": [[72, "python-modulenotfounderror"]], "Python Modules": [[82, null]], "Python Modules List": [[82, "python-modules-list"]], "Python Multilevel Inheritance": [[105, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[105, "python-multiple-inheritance"]], "Python NameError": [[72, "python-nameerror"]], "Python Namespace and Scope": [[98, null]], "Python Nested if statement": [[48, null]], "Python NumPy": [[153, null]], "Python NumPy Array:": [[153, "python-numpy-array"], [154, null]], "Python NumPy Exercises": [[158, null]], "Python Numbers": [[94, "python-numbers"]], "Python Numbers, Type Conversion and Mathematics": [[53, null]], "Python Numpy Module": [[24, "python-numpy-module"], [159, null]], "Python OOPs Concepts": [[103, null]], "Python Object Class": [[24, "python-object-class"], [107, null]], "Python Operator Overloading": [[106, null], [106, "id1"]], "Python Operators": [[97, null]], "Python Output Using print() function": [[96, "python-output-using-print-function"]], "Python Package": [[85, null]], "Python Pandas": [[160, null], [171, null], [172, null]], "Python Pandas Module": [[24, "python-pandas-module"], [173, null]], "Python Python Generators": [[37, null]], "Python Random Module": [[83, null]], "Python Recursion": [[80, null]], "Python Recursive Function": [[80, "python-recursive-function"]], "Python RegEx": [[41, null]], "Python RegEx Methods": [[41, "python-regex-methods"]], "Python Resources": [[24, "python-resources"]], "Python Seaborn": [[208, null]], "Python Set Operations": [[58, "python-set-operations"]], "Python Set {}": [[94, "python-set"]], "Python Sets": [[58, null]], "Python Single Inheritance": [[105, "python-single-inheritance"]], "Python Special Functions": [[106, "python-special-functions"]], "Python Statement, Indentation and Comments": [[91, null]], "Python String Formatting": [[54, "python-string-formatting"]], "Python String Replication Operator (*)": [[54, "python-string-replication-operator"]], "Python Strings": [[26, "python-strings"], [54, null], [94, "python-strings"]], "Python Strings Operations": [[54, "python-strings-operations"]], "Python Syntax Errors": [[72, "python-syntax-errors"]], "Python Tuple": [[56, null]], "Python Tuple ()": [[94, "python-tuple"]], "Python Type Conversion and Type Casting": [[95, null]], "Python TypeError": [[72, "python-typeerror"]], "Python User-defined Functions": [[87, null]], "Python ValueError": [[72, "python-valueerror"]], "Python Variable Scope": [[98, "python-variable-scope"]], "Python Variables": [[92, "python-variables"]], "Python Variables and Constants": [[92, null]], "Python __doc__ attribute": [[86, "python-doc-attribute"]], "Python break statement": [[51, "python-break-statement"]], "Python continue statement": [[51, "python-continue-statement"]], "Python datetime": [[61, null]], "Python docstrings": [[86, "id1"]], "Python for Loop": [[49, "python-for-loop"]], "Python format datetime": [[61, "python-format-datetime"]], "Python from-import statement": [[82, "python-from-import-statement"]], "Python global Keyword": [[78, null]], "Python if statement": [[45, null]], "Python if-elif-else statement": [[47, null]], "Python if-else statement": [[46, null]], "Python import statement": [[82, "python-import-statement"]], "Python lists": [[26, "python-lists"]], "Python pass statement": [[51, "python-pass-statement"]], "Python sleep()": [[68, null]], "Python strftime()": [[62, null]], "Python strftime() - datetime object to string": [[61, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[63, null]], "Python strptime() - string to datetime": [[61, "python-strptime-string-to-datetime"]], "Python super() function": [[105, "python-super-function"]], "Python time Module": [[67, null]], "Python time.asctime()": [[67, "python-time-asctime"]], "Python time.ctime()": [[67, "python-time-ctime"]], "Python time.gmtime()": [[67, "python-time-gmtime"]], "Python time.localtime()": [[67, "python-time-localtime"]], "Python time.mktime()": [[67, "python-time-mktime"]], "Python time.sleep()": [[67, "python-time-sleep"]], "Python time.strftime()": [[67, "python-time-strftime"]], "Python time.strptime()": [[67, "python-time-strptime"]], "Python time.time()": [[67, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[66, null]], "Python try with else clause": [[73, "python-try-with-else-clause"]], "Python try-finally Clause": [[73, "python-try-finally-clause"]], "Python while Loop": [[50, "python-while-loop"]], "Pytorch": [[188, null]], "Q&A: Map Re-Rank": [[133, "q-a-map-re-rank"]], "Quantifier {}": [[41, "quantifier"]], "Query those docs to get your answer back": [[137, "query-those-docs-to-get-your-answer-back"]], "Querying Tabular Data": [[122, "querying-tabular-data"]], "Question & Answering Using Documents As Context": [[122, "question-answering-using-documents-as-context"]], "Quickly add YAML metadata for MyST Notebooks": [[7, "quickly-add-yaml-metadata-for-myst-notebooks"], [111, "quickly-add-yaml-metadata-for-myst-notebooks"], [210, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[155, "quiz-time"]], "Raise error while renaming a column": [[167, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[73, "raising-exceptions-in-python"]], "Raising an Exception": [[73, "raising-an-exception"]], "Random Initialization": [[8, "random-initialization"]], "Random number": [[154, "random-number"]], "Random tensors": [[174, "random-tensors"]], "Raw String to ignore escape sequence": [[54, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[171, "reading-data-in-pandas"]], "Reading Files in Python": [[70, "reading-files-in-python"]], "Real World Examples": [[150, "real-world-examples"]], "Recreating non-linear data (red and blue circles)": [[176, "recreating-non-linear-data-red-and-blue-circles"]], "References": [[2, "references"], [4, "references"], [5, "references"], [6, "references"], [8, "references"]], "Regularization": [[5, "regularization"], [6, "regularization"]], "Reloading a module": [[82, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[71, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[57, "removing-elements-from-dictionary"]], "Removing elements from a set": [[58, "removing-elements-from-a-set"]], "Rename a single column": [[167, "rename-a-single-column"]], "Rename all columns with a list": [[167, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[167, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[167, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[167, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[167, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[167, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[167, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[167, null]], "Rename columns in all levels": [[167, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[167, "rename-columns-in-defined-level"]], "Rename columns in place": [[167, "rename-columns-in-place"]], "Rename multiple columns": [[167, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[71, "renaming-a-directory-or-a-file-rename"]], "Replicating Equation 2 with PyTorch layers": [[182, "replicating-equation-2-with-pytorch-layers"]], "Replicating Equation 3 with PyTorch layers": [[182, "replicating-equation-3-with-pytorch-layers"]], "Replicating non-linear activation functions": [[176, "replicating-non-linear-activation-functions"]], "Replicating the ViT paper: an overview": [[182, "replicating-the-vit-paper-an-overview"]], "Research papers": [[117, null]], "Reset index and change column name": [[170, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[170, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[170, "reset-index-and-name-other-level"]], "Reset index by level": [[170, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[170, null]], "Reset index in place": [[170, "reset-index-in-place"]], "Reset index starts from 1": [[170, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[170, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[170, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[170, "reset-index-without-new-column"]], "Reset multi-level index": [[170, "reset-multi-level-index"]], "Reshape Data": [[157, "reshape-data"]], "Reshaping, stacking, squeezing and unsqueezing": [[174, "reshaping-stacking-squeezing-and-unsqueezing"]], "Residplot()": [[195, "residplot"]], "Resources": [[118, null], [152, "resources"], [159, "resources"], [173, "resources"], [188, "resources"], [208, "resources"]], "Retrievers": [[121, "retrievers"]], "Return Boolean Values": [[76, "return-boolean-values"]], "Return Multiple Values": [[76, "return-multiple-values"]], "Return Single Value": [[76, "return-single-value"]], "Return a List": [[76, "return-a-list"]], "Reverse for loop": [[49, "reverse-for-loop"]], "Reverse for loop using range()": [[49, "reverse-for-loop-using-range"]], "Reverse while loop": [[50, "reverse-while-loop"]], "Rinse and Repeat: Loop Through Companies": [[144, "rinse-and-repeat-loop-through-companies"]], "Rules and Naming Convention for Variables and constants": [[92, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[90, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[78, "rules-of-global-keyword"]], "Running a notebook in cell mode": [[184, "running-a-notebook-in-cell-mode"]], "Running our FoodVision Mini demo locally": [[183, "running-our-foodvision-mini-demo-locally"]], "Running tensors on GPUs (and making faster computations)": [[174, "running-tensors-on-gpus-and-making-faster-computations"]], "Running the \u201cHello, World!\u201d Program": [[89, "running-the-hello-world-program"]], "Salary": [[141, "salary"]], "Sample Roles and Directives": [[110, "sample-roles-and-directives"]], "Save and load best performing model": [[177, "save-and-load-best-performing-model"]], "Save feature extractor ViT model and check file size": [[182, "save-feature-extractor-vit-model-and-check-file-size"]], "Saving EffNetB2 feature extractor": [[183, "saving-effnetb2-feature-extractor"]], "Saving ViT feature extractor": [[183, "saving-vit-feature-extractor"]], "Saving a PyTorch model\u2019s state_dict()": [[175, "saving-a-pytorch-models-state-dict"]], "Saving and loading a PyTorch model": [[175, "saving-and-loading-a-pytorch-model"]], "Saving and loading a model": [[175, "saving-and-loading-a-model"]], "Saving as JSON File": [[70, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[171, "saving-our-data-exporting-into-desired-format"]], "Scalar": [[174, "scalar"]], "Scalar multiplication": [[33, "scalar-multiplication"], [34, "scalar-multiplication"]], "Scatter Plot and Joint Plot": [[194, null]], "Schema - Nuts and Bolts of working with Large Language Models (LLMs)": [[121, "schema-nuts-and-bolts-of-working-with-large-language-models-llms"]], "Seaborn Color Palettes": [[192, null]], "Seaborn Lmplots:": [[193, "seaborn-lmplots"]], "Seaborn Regplots:": [[193, "seaborn-regplots"]], "Seaborn: Box Plot": [[199, null]], "Seaborn: Categorical Data Plots": [[197, null]], "Seaborn: Strip Plot": [[198, null]], "Seaborn: Violin Plot": [[200, null]], "Second order sequence model with skips": [[21, "second-order-sequence-model-with-skips"]], "Select best threshold": [[9, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[163, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[163, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[163, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[163, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[163, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[163, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[163, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[163, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[160, "selection"]], "Self Can Be Avoided": [[108, "self-can-be-avoided"]], "Self Is Here To Stay": [[108, "self-is-here-to-stay"]], "Self Querying": [[136, "self-querying"]], "Sequence models": [[21, "sequence-models"]], "Series": [[160, "series"]], "Server Operational Parameters": [[10, "server-operational-parameters"]], "Set Difference": [[58, "set-difference"]], "Set Intersection": [[58, "set-intersection"]], "Set Symmetric Difference": [[58, "set-symmetric-difference"]], "Set Union": [[58, "set-union"]], "Set index but keep column": [[169, "set-index-but-keep-column"]], "Set index by column number": [[169, "set-index-by-column-number"]], "Set index by keeping old index": [[169, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[169, null]], "Set index in place": [[169, "set-index-in-place"]], "Set index using a Python range": [[169, "set-index-using-a-python-range"]], "Set index using a column": [[169, "set-index-using-a-column"]], "Set index using a column with duplicates": [[169, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[169, "set-index-using-a-list"]], "Set index using multiple columns": [[169, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[169, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[169, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[163, "set-specific-value-in-pandas-dataframe"], [163, "id1"]], "Setting up a pretrained model": [[180, "setting-up-a-pretrained-model"]], "Setting up a series of modelling experiments": [[181, "setting-up-a-series-of-modelling-experiments"]], "Setting up training code for our ViT model": [[182, "setting-up-training-code-for-our-vit-model"]], "Setup a loss function and optimizer for model_2": [[177, "setup-a-loss-function-and-optimizer-for-model-2"]], "Setup device agnostic-code (for using a GPU if there is one)": [[177, "setup-device-agnostic-code-for-using-a-gpu-if-there-is-one"]], "Setup loss function and optimizer": [[176, "setup-loss-function-and-optimizer"]], "Setup loss, optimizer and evaluation metrics": [[177, "setup-loss-optimizer-and-evaluation-metrics"], [177, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[45, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[46, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Significance of random seeding": [[174, "significance-of-random-seeding"]], "Simple Q&A Example": [[122, "simple-q-a-example"]], "Single Parameter:": [[76, "single-parameter"]], "Single-line docstrings in Python": [[86, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[153, "slicing-and-subsetting"]], "Solution to Overfitting": [[5, "solution-to-overfitting"], [6, "solution-to-overfitting"]], "Sorting/Describing Data": [[171, "sorting-describing-data"]], "Sources": [[139, null]], "Special Sequences": [[41, "special-sequences"]], "Special literals": [[93, "special-literals"]], "Special operators": [[97, "special-operators"]], "Specify Pattern Using RegEx": [[41, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[96, "specifying-a-sign-while-displaying-output-numbers"]], "Split data into training and test sets": [[175, "split-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Sets": [[12, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"], [20, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[14, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[73, "spreading-in-python"]], "Square Brackets []": [[41, "id2"]], "Statement": [[91, "statement"]], "Statistics": [[157, "statistics"], [160, "statistics"]], "Step 1: Extract Topic Titles & Short Description": [[146, "step-1-extract-topic-titles-short-description"]], "Step 2: Expand on the topics you found": [[146, "step-2-expand-on-the-topics-you-found"]], "Stepping through nn.Conv2d()": [[177, "stepping-through-nn-conv2d"]], "Stepping through nn.MaxPool2d()": [[177, "stepping-through-nn-maxpool2d"]], "String Concatenation Operator (+)": [[54, "string-concatenation-operator"]], "String literals (unicode character strings)": [[93, "string-literals-unicode-character-strings"]], "Structured Data - Turn your LLM output into structured data": [[146, "structured-data-turn-your-llm-output-into-structured-data"]], "Summaries Of Longer Text": [[122, "summaries-of-longer-text"]], "Summaries Of Short Text": [[122, "summaries-of-short-text"]], "Summarization": [[122, "summarization"]], "Summarize: Map Reduce": [[133, "summarize-map-reduce"]], "Summarize: Refine": [[133, "summarize-refine"]], "Summarize: Stuff": [[133, "summarize-stuff"]], "Summary": [[54, "summary"], [55, "summary"], [56, "summary"], [57, "summary"], [58, "summary"], [160, "summary"]], "Summary - MetaCharacters": [[41, "summary-metacharacters"]], "Summary:": [[155, "summary"], [160, "id1"]], "Summation notation": [[31, "summation-notation"]], "Swarm Plot": [[197, "swarm-plot"], [198, "swarm-plot"]], "Syntax :": [[46, "syntax"], [49, "syntax"]], "Syntax of List Comprehension": [[59, "syntax-of-list-comprehension"]], "Syntax:": [[45, "syntax"], [47, "syntax"], [48, "syntax"], [50, "syntax"]], "Table of Contents": [[123, null]], "Tensor datatypes": [[174, "tensor-datatypes"]], "Tensors": [[174, "tensors"]], "Terminology": [[182, "terminology"]], "Text": [[121, "text"]], "Text Embedding Model": [[121, "text-embedding-model"]], "Text Splitters": [[121, "text-splitters"]], "The @property Decorator": [[40, "the-property-decorator"]], "The Algorithm": [[4, "the-algorithm"]], "The Custom Prompts - Customize your prompt to fit your use case": [[146, "the-custom-prompts-customize-your-prompt-to-fit-your-use-case"]], "The DataFrame.drop() function": [[164, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[165, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[166, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[167, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[170, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[169, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[168, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[45, "the-difference"]], "The First Pass - Run through your text and extract the topics per your custom prompts": [[146, "the-first-pass-run-through-your-text-and-extract-the-topics-per-your-custom-prompts"]], "The LayerNorm (LN) layer": [[182, "the-layernorm-ln-layer"]], "The MLP layer(s)": [[182, "the-mlp-layer-s"]], "The Multi-Head Self Attention (MSA) layer": [[182, "the-multi-head-self-attention-msa-layer"]], "The Set Up - Create your LLMs and get data": [[146, "the-set-up-create-your-llms-and-get-data"]], "The balance between overfitting and underfitting": [[178, "the-balance-between-overfitting-and-underfitting"]], "The difference\u2026": [[46, "the-difference"]], "The dir() built-in function": [[82, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[73, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[73, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[70, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[54, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[161, "the-from-dict-function"]], "The missing piece: non-linearity": [[176, "the-missing-piece-non-linearity"]], "The property Class": [[40, "the-property-class"]], "Things to Remember:": [[42, "things-to-remember"]], "Things to note": [[179, "things-to-note"]], "Time Series & LV Plot": [[203, null]], "Time-Series Plot": [[203, "time-series-plot"]], "To Do": [[138, null]], "To customize the display of DataFrame while printing": [[160, "to-customize-the-display-of-dataframe-while-printing"]], "Toolkit": [[121, "toolkit"]], "Tools": [[121, "tools"]], "Tools required to work with neural networks": [[211, null]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[120, null]], "Top-K Similarity Search - Ask A Book A Question": [[137, null]], "Topic Modeling With Language Models": [[146, null]], "Topics on Learning Data Science and Machine Learning": [[212, "topics-on-learning-data-science-and-machine-learning"]], "Train and Evaluate Model 0": [[178, "train-and-evaluate-model-0"]], "Train feature extractor ViT model": [[182, "train-feature-extractor-vit-model"]], "Train model": [[176, "train-model"], [180, "train-model"]], "Train model and track results": [[181, "train-model-and-track-results"]], "Train the model": [[175, "train-the-model"]], "Train, evaluate and save the model": [[184, "train-evaluate-and-save-the-model"], [185, "train-evaluate-and-save-the-model"]], "Train, evaluate and save the model (script mode)": [[185, "train-evaluate-and-save-the-model-script-mode"]], "Train, evaluate and save the model (train.py)": [[179, "train-evaluate-and-save-the-model-train-py"]], "Training": [[175, "training"]], "Training EffNetB2 feature extractor": [[183, "training-effnetb2-feature-extractor"]], "Training Set": [[6, "training-set"]], "Training ViT feature extractor": [[183, "training-vit-feature-extractor"]], "Training a model with non-linearity": [[176, "training-a-model-with-non-linearity"]], "Training and testing model_2 using our training and test functions": [[177, "training-and-testing-model-2-using-our-training-and-test-functions"]], "Training our ViT model": [[182, "training-our-vit-model"]], "Transfer statements": [[44, "transfer-statements"]], "Transform Datasets and create DataLoaders": [[181, "transform-datasets-and-create-dataloaders"]], "Transformers from scratch": [[21, null]], "Transforming data": [[178, "transforming-data"]], "Transforming data with torchvision.transforms": [[178, "transforming-data-with-torchvision-transforms"]], "Try a forward pass on a single image (to test the model)": [[178, "try-a-forward-pass-on-a-single-image-to-test-the-model"]], "Tuple Methods": [[56, "tuple-methods"]], "Tuple Operations": [[56, "tuple-operations"]], "Turn custom loaded images into DataLoader\u2019s": [[178, "turn-custom-loaded-images-into-dataloaders"]], "Turn data into tensors and create train and test splits": [[176, "turn-data-into-tensors-and-create-train-and-test-splits"]], "Turn images into DataLoader\u2019s": [[182, "turn-images-into-dataloaders"]], "Turn loaded images into DataLoader\u2019s": [[178, "turn-loaded-images-into-dataloaders"]], "Turning a single image into patches": [[182, "turning-a-single-image-into-patches"]], "Turning our EffNetB2 model into a Python script (model.py)": [[183, "turning-our-effnetb2-model-into-a-python-script-model-py"]], "Turning our FoodVision Mini Gradio Demo into a deployable app": [[183, "turning-our-foodvision-mini-gradio-demo-into-a-deployable-app"]], "Turning our FoodVision Mini Gradio app into a Python script (app.py)": [[183, "turning-our-foodvision-mini-gradio-app-into-a-python-script-app-py"]], "Turning the ViT patch embedding layer into a PyTorch module": [[182, "turning-the-vit-patch-embedding-layer-into-a-pytorch-module"]], "Twitter Reply Bot": [[132, null]], "Two Parameter:": [[76, "two-parameter"]], "Type Conversion": [[53, "type-conversion"]], "Type Conversion of Numbers in Python": [[93, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[105, "types-of-inheritance"]], "Types of Constructors": [[104, "types-of-constructors"]], "Types of Functions": [[76, "types-of-functions"]], "Typical workflow for a ML system": [[1, "typical-workflow-for-a-ml-system"]], "Unit vector": [[34, "unit-vector"]], "Univariate Linear Regression Demo": [[14, null]], "Universal  Array Functions (Mathematical operations)": [[156, "universal-array-functions-mathematical-operations"]], "Unpacking": [[73, "unpacking"]], "Unpacking Dictionaries": [[73, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[73, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[73, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[99, "unpacking-a-sequence-into-separate-variables"]], "Update the train() function to include a writer parameter": [[181, "update-the-train-function-to-include-a-writer-parameter"]], "Uploading to Hugging Face": [[183, "uploading-to-hugging-face"]], "Use Cases:": [[146, "use-cases"]], "Use __new__ or __init__?": [[108, "use-new-or-init"]], "Use lambda expressions to rename": [[167, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[37, "use-of-python-generators"]], "Use of global Keyword": [[78, "use-of-global-keyword"]], "Use of inheritance": [[103, "use-of-inheritance"]], "Use of lambda Function in python": [[81, "use-of-lambda-function-in-python"]], "Use torchinfo to get an idea of the shapes going through our model": [[178, "use-torchinfo-to-get-an-idea-of-the-shapes-going-through-our-model"]], "Using An Agent": [[131, "using-an-agent"]], "Using Control Statement in for loops in Python": [[49, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[50, "using-control-statement-in-while-loops-in-python"]], "Using Embeddings": [[122, "using-embeddings"]], "Using Getters and Setters": [[40, "using-getters-and-setters"]], "Using LLMs To Summarize Personal Research": [[147, null]], "Using LangChain\u2019s Response Schema": [[122, "using-langchains-response-schema"]], "Using Langchain": [[123, "using-langchain"]], "Using Python inside Jupyter notebook": [[26, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[26, "using-a-code-editor-of-your-choice"]], "Using a pretrained ViT from torchvision.models on the same dataset": [[182, "using-a-pretrained-vit-from-torchvision-models-on-the-same-dataset"]], "Using drop with axis='columns' or axis=1": [[164, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[26, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[41, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[167, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[86, "using-the-help-function-for-docstrings"]], "ValueError in strptime()": [[63, "valueerror-in-strptime"]], "Vanilla Extraction": [[122, "vanilla-extraction"]], "Variable Function Arguments": [[79, "variable-function-arguments"]], "Vector addition": [[34, "vector-addition"]], "Vector operations": [[34, "vector-operations"]], "Vector subtraction": [[34, "vector-subtraction"]], "VectorStores": [[121, "vectorstores"]], "Vectorized Implementation of Forward Propagation": [[8, "vectorized-implementation-of-forward-propagation"]], "Vectors": [[174, "vectors"]], "View experiments in TensorBoard": [[181, "view-experiments-in-tensorboard"]], "View our model\u2019s results in TensorBoard": [[181, "view-our-models-results-in-tensorboard"]], "Viewing/Inspecting Data": [[160, "viewing-inspecting-data"]], "Visualize a single image": [[182, "visualize-a-single-image"]], "Visualize an image": [[178, "visualize-an-image"]], "Visualize the Fit": [[9, "visualize-the-fit"]], "Visualizing our data": [[177, "visualizing-our-data"]], "Visualizing the speed vs. performance tradeoff": [[183, "visualizing-the-speed-vs-performance-tradeoff"]], "Ways to deploy a machine learning model": [[183, "ways-to-deploy-a-machine-learning-model"]], "Welcome": [[215, null], [216, null]], "What Happens Internally?": [[108, "what-happens-internally"]], "What are lambda functions in Python?": [[81, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[82, "what-are-modules-in-python"]], "What are packages?": [[85, "what-are-packages"]], "What are user-defined functions in Python?": [[87, "what-are-user-defined-functions-in-python"]], "What can PyTorch be used for?": [[174, "what-can-pytorch-be-used-for"]], "What experiments are we going to run?": [[181, "what-experiments-are-we-going-to-run"]], "What has script mode got to do with PyTorch?": [[185, "what-has-script-mode-got-to-do-with-pytorch"]], "What is Compiler?": [[100, "what-is-compiler"]], "What is DataFrame in Pandas": [[160, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[57, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[196, null]], "What is Hugging Face Spaces?": [[183, "what-is-hugging-face-spaces"]], "What is Interpreter?": [[100, "what-is-interpreter"]], "What is LangChain?": [[121, "what-is-langchain"], [122, "what-is-langchain"]], "What is List in Python?": [[55, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[1, "what-is-machine-learning"]], "What is MyST?": [[22, "what-is-myst"], [110, "what-is-myst"]], "What is Name in Python?": [[98, "what-is-name-in-python"]], "What is PyTorch?": [[174, "what-is-pytorch"]], "What is Set in Python?": [[58, "what-is-set-in-python"]], "What is String in Python?": [[54, "what-is-string-in-python"]], "What is Tuple in Python?": [[56, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[98, "what-is-a-namespace-in-python"]], "What is a classification problem?": [[176, "what-is-a-classification-problem"]], "What is a custom dataset?": [[178, "what-is-a-custom-dataset"]], "What is a function in Python?": [[76, "what-is-a-function-in-python"]], "What is a machine learning research paper?": [[182, "what-is-a-machine-learning-research-paper"]], "What is a matrix?": [[33, "what-is-a-matrix"]], "What is a vector?": [[34, "what-is-a-vector"]], "What is cell mode?": [[184, "what-is-cell-mode"]], "What is cluster map?": [[207, null]], "What is experiment tracking?": [[181, "what-is-experiment-tracking"]], "What is for loop in Python?": [[49, "what-is-for-loop-in-python"]], "What is global keyword?": [[78, "what-is-global-keyword"]], "What is going modular?": [[179, "what-is-going-modular"]], "What is heat map?": [[206, null]], "What is hstack?": [[157, "what-is-hstack"]], "What is machine learning model deployment?": [[183, "what-is-machine-learning-model-deployment"]], "What is math module in Python?": [[84, "what-is-math-module-in-python"]], "What is paper replicating?": [[182, "what-is-paper-replicating"]], "What is recursion?": [[80, "what-is-recursion"]], "What is script mode?": [[185, "what-is-script-mode"]], "What is self in Python?": [[108, "what-is-self-in-python"]], "What is transfer learning?": [[180, "what-is-transfer-learning"]], "What is vstack?": [[157, "what-is-vstack"]], "What is while loop in Python?": [[50, "what-is-while-loop-in-python"]], "What kind of experiments should you run?": [[181, "what-kind-of-experiments-should-you-run"]], "What model should I use?": [[177, "what-model-should-i-use"]], "What our training setup is missing": [[182, "what-our-training-setup-is-missing"]], "What should an ideal loss curve look like?": [[178, "what-should-an-ideal-loss-curve-look-like"]], "What we\u2019re going to cover": [[175, "what-were-going-to-cover"], [176, "what-were-going-to-cover"], [177, "what-were-going-to-cover"], [178, "what-were-going-to-cover"], [179, "what-were-going-to-cover"], [180, "what-were-going-to-cover"], [181, "what-were-going-to-cover"], [182, "what-were-going-to-cover"], [183, "what-were-going-to-cover"], [185, "what-were-going-to-cover"]], "What we\u2019re going to cover in this module": [[174, "what-were-going-to-cover-in-this-module"]], "What we\u2019re working towards": [[179, "what-were-working-towards"]], "What\u2019s inside datetime?": [[61, "whats-inside-datetime"]], "What\u2019s the difference between this notebook (Part 1) and the script mode notebook (Part 2)?": [[184, "whats-the-difference-between-this-notebook-part-1-and-the-script-mode-notebook-part-2"]], "What\u2019s the difference between this notebook (Part 2) and the cell mode notebook (Part 1)?": [[185, "whats-the-difference-between-this-notebook-part-2-and-the-cell-mode-notebook-part-1"]], "When do we have closures?": [[38, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[53, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[38, "when-to-use-closures"]], "Where can you find code examples for machine learning research papers?": [[182, "where-can-you-find-code-examples-for-machine-learning-research-papers"]], "Where can you get help?": [[179, "where-can-you-get-help"], [180, "where-can-you-get-help"]], "Where does computer vision get used?": [[177, "where-does-computer-vision-get-used"]], "Where to find pretrained models": [[180, "where-to-find-pretrained-models"]], "Where\u2019s it going to go?": [[183, "wheres-it-going-to-go"]], "Which pretrained model should you use?": [[180, "which-pretrained-model-should-you-use"]], "While loop in Python FAQs": [[50, "while-loop-in-python-faqs"]], "Who uses PyTorch?": [[174, "who-uses-pytorch"]], "Why LangChain?": [[121, "why-langchain"], [122, "why-langchain"]], "Why Learn Machine Learning? \ud83e\udd14": [[1, "why-learn-machine-learning"]], "Why Learn Python?": [[24, "why-learn-python"]], "Why and When to use while loop in Python": [[50, "why-and-when-to-use-while-loop-in-python"]], "Why deploy a machine learning model?": [[183, "why-deploy-a-machine-learning-model"]], "Why is self explicitly defined everytime?": [[108, "why-is-self-explicitly-defined-everytime"]], "Why replicate a machine learning research paper?": [[182, "why-replicate-a-machine-learning-research-paper"]], "Why should we use Tuple? (Advantages of Tuple)": [[56, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[105, "why-super-keyword"]], "Why this website?": [[0, "why-this-website"]], "Why track experiments?": [[181, "why-track-experiments"]], "Why two parts?": [[179, "why-two-parts"]], "Why use NumPy?": [[153, "why-use-numpy"]], "Why use PyTorch?": [[174, "why-use-pytorch"]], "Why use a pretrained model?": [[182, "why-use-a-pretrained-model"]], "Why use for loop?": [[49, "why-use-for-loop"]], "Why use transfer learning?": [[180, "why-use-transfer-learning"]], "Why would you want to go modular?": [[179, "why-would-you-want-to-go-modular"]], "Wide format (untidy)": [[206, "wide-format-untidy"]], "With Streaming": [[134, "with-streaming"]], "Work in progress": [[109, null]], "Working With Lists": [[141, "working-with-lists"]], "Working of for loop for Iterators": [[36, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[171, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[10, "world-happiness-report-2017"]], "Wrap up": [[82, "wrap-up"]], "Write your custom prompt templates": [[144, "write-your-custom-prompt-templates"]], "Writing the \u201cHello, World!\u201d Program": [[73, "writing-the-hello-world-program"]], "Writing to Files in Python": [[70, "writing-to-files-in-python"]], "Zapier Natural Language Actions API": [[131, null]], "Zero or more times *": [[41, "zero-or-more-times"]], "Zero or one time ?": [[41, "zero-or-one-time"]], "Zeros and ones": [[174, "zeros-and-ones"]], "Zip": [[73, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[41, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[41, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[41, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[41, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[41, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[41, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[41, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[41, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[41, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[41, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[108, "init-is-not-a-constructor"]], "a) break in for loop": [[49, "a-break-in-for-loop"]], "a) break in while loop": [[50, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[57, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[55, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[57, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[55, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[55, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[157, "arange"]], "asarray()": [[157, "asarray"]], "b) continue in for loop": [[49, "b-continue-in-for-loop"]], "b) continue in while loop": [[50, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[201, "boxplot-and-violinplot"]], "c) pass in for loop": [[49, "c-pass-in-for-loop"]], "c) pass in while loop": [[50, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[55, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[57, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[51, "continue-statement-in-while-loop"]], "continue statement with else statements": [[51, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[55, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[57, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[55, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[61, "datetime-date-class"]], "datetime.datetime": [[61, "datetime-datetime"]], "datetime.time": [[61, "datetime-time"]], "datetime.timedelta": [[61, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[55, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[49, "for-loop-in-one-line"]], "for loop inside for loop": [[49, "for-loop-inside-for-loop"]], "for loop inside while loop": [[50, "for-loop-inside-while-loop"]], "for loop with else": [[49, "for-loop-with-else"]], "for loop with if-else": [[49, "for-loop-with-if-else"]], "for loop with range() function": [[49, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[57, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[206, "heatmap"]], "heatmap colors": [[206, "heatmap-colors"]], "heatmap data": [[206, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[47, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[47, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[47, "if-elif-else-statements-with-logical-operators"]], "import all names": [[82, "import-all-names"]], "import multiple modules": [[82, "import-multiple-modules"]], "import with renaming": [[82, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[55, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[55, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[105, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[57, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[57, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[81, "lambda-function-use-with-filter"]], "lambda function with map()": [[81, "lambda-function-with-map"]], "lambda function with reduce()": [[81, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[57, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[55, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[56, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[82, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[55, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[56, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[154, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[55, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[56, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[55, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[154, "rand"]], "randint": [[154, "randint"]], "randn": [[154, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[55, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[55, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, demystified": [[108, null]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[57, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[55, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[55, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [56, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [57, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[57, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[68, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[67, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[56, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[57, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[57, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[57, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[49, "while-loop-inside-for-loop"]], "while loop inside while loop": [[50, "while-loop-inside-while-loop"]], "while loop with else": [[50, "while-loop-with-else"]], "while loop with if-else": [[50, "while-loop-with-if-else"]], "\u201cHello, World!\u201d Program": [[89, "hello-world-program"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[46, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[66, "exercises-date-and-time"]], "\ud83d\udcca Data Analysis": [[214, null]], "\ud83e\udd16 Machine Learning": [[214, "machine-learning"]]}, "docnames": ["about_me_old", "content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/concepts/transformers/01_transformers_from_scratch", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/mathematics/calculus_fourier-series", "content/essentials/mathematics/capital-pi-notation", "content/essentials/mathematics/capital-sigma-notation", "content/essentials/mathematics/dissimilarity_measures", "content/essentials/mathematics/linear-algebra_matrices", "content/essentials/mathematics/linear-algebra_vectors", "content/essentials/mathematics/mathematics_toc", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/resources/blogs/blogs_toc", "content/resources/books/books_toc", "content/resources/courses/courses_toc", "content/resources/papers/papers_toc", "content/resources/resources", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langchain_toc", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/langchain/projects/agents/Agents", "content/tools/langchain/projects/agents/Agents + ZapierToolkit", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook", "content/tools/langchain/projects/chains/Chain Types", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain", "content/tools/langchain/projects/data_generation/Ask A Book Questions", "content/tools/langchain/projects/data_generation/Clean and Standardize Data", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling)", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor)", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone", "content/tools/langchain/projects/data_generation/Personalized Email Generation", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts", "content/tools/langchain/projects/project_toc", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/pytorch/00_pytorch_fundamentals", "content/tools/pytorch/01_pytorch_workflow", "content/tools/pytorch/02_pytorch_classification", "content/tools/pytorch/03_pytorch_computer_vision", "content/tools/pytorch/04_pytorch_custom_datasets", "content/tools/pytorch/05_pytorch_going_modular", "content/tools/pytorch/06_pytorch_transfer_learning", "content/tools/pytorch/07_pytorch_experiment_tracking", "content/tools/pytorch/08_pytorch_paper_replicating", "content/tools/pytorch/09_pytorch_model_deployment", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode", "content/tools/pytorch/going_modular/README", "content/tools/pytorch/going_modular/going_modular/README", "content/tools/pytorch/pytorch_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro", "intro_1", "intro_me", "intro_v2"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["about_me_old.md", "content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/concepts/transformers/01_transformers_from_scratch.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/mathematics/calculus_fourier-series.ipynb", "content/essentials/mathematics/capital-pi-notation.ipynb", "content/essentials/mathematics/capital-sigma-notation.ipynb", "content/essentials/mathematics/dissimilarity_measures.ipynb", "content/essentials/mathematics/linear-algebra_matrices.ipynb", "content/essentials/mathematics/linear-algebra_vectors.ipynb", "content/essentials/mathematics/mathematics_toc.md", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/resources/blogs/blogs_toc.md", "content/resources/books/books_toc.md", "content/resources/courses/courses_toc.md", "content/resources/papers/papers_toc.md", "content/resources/resources.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals.ipynb", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langchain_toc.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/langchain/projects/agents/Agents.ipynb", "content/tools/langchain/projects/agents/Agents + ZapierToolkit.ipynb", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook.ipynb", "content/tools/langchain/projects/chains/Chain Types.ipynb", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics.ipynb", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert.ipynb", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain.ipynb", "content/tools/langchain/projects/data_generation/Ask A Book Questions.ipynb", "content/tools/langchain/projects/data_generation/Clean and Standardize Data.ipynb", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer.ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling).ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor).ipynb", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling.ipynb", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone.ipynb", "content/tools/langchain/projects/data_generation/Personalized Email Generation.ipynb", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR.ipynb", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models.ipynb", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research.ipynb", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts.ipynb", "content/tools/langchain/projects/project_toc.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/pytorch/00_pytorch_fundamentals.ipynb", "content/tools/pytorch/01_pytorch_workflow.ipynb", "content/tools/pytorch/02_pytorch_classification.ipynb", "content/tools/pytorch/03_pytorch_computer_vision.ipynb", "content/tools/pytorch/04_pytorch_custom_datasets.ipynb", "content/tools/pytorch/05_pytorch_going_modular.md", "content/tools/pytorch/06_pytorch_transfer_learning.ipynb", "content/tools/pytorch/07_pytorch_experiment_tracking.ipynb", "content/tools/pytorch/08_pytorch_paper_replicating.ipynb", "content/tools/pytorch/09_pytorch_model_deployment.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode.ipynb", "content/tools/pytorch/going_modular/README.md", "content/tools/pytorch/going_modular/going_modular/README.md", "content/tools/pytorch/pytorch_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md", "intro_1.rst", "intro_me.md", "intro_v2.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 32, 33, 36, 37, 38, 39, 40, 44, 45, 48, 49, 50, 51, 53, 54, 56, 59, 63, 65, 66, 67, 68, 70, 72, 73, 76, 77, 78, 80, 81, 82, 84, 86, 87, 91, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 108, 110, 111, 113, 121, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 154, 157, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 176, 177, 179, 180, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210], "0": [2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 90, 92, 93, 94, 95, 96, 97, 100, 104, 105, 106, 108, 113, 121, 122, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "00": [0, 61, 62, 63, 65, 67, 68, 96, 122, 136, 141, 144, 146, 160, 161, 163, 174, 176, 177, 185, 193, 194, 200, 203], "000": [53, 133, 135, 141, 146, 148, 177, 178, 180, 183, 194, 199], "0000": [15, 67, 97, 175, 176, 177, 182], "00000": 160, "000000": [54, 62, 63, 96, 140, 141, 160, 171, 172, 189, 194, 205], "00000000": 174, "0000003": 54, "000007": 17, "000013": 18, "000032": 17, "000036": 18, "000066": 17, "000079": 17, "0000a3": 201, "0000e": 176, "0001": [53, 61, 67, 175, 177], "000110011001100110011": 53, "000112": 17, "000126": 17, "000155": 17, "00015641732898075134": 121, "000174": 18, "000191": 17, "00019600906371495047": 121, "000214": 17, "000216": 17, "000238": 18, "000269": 18, "000285": 18, "0003": 177, "000301": 18, "000325": 18, "00035465431654651654": 121, "000367": 18, "000385": 17, "000410": 18, "000456": 18, "000465": 18, "000550": 18, "0006": 183, "000683": 12, "000743": 18, "0007734206914647714": 121, "0009": 177, "000917": 17, "000a": 53, "001": [62, 63, 121, 175, 178, 179, 180, 181, 184, 185], "0010": [97, 185], "001058628615053026": 121, "0011": [97, 177], "001100": 18, "001139": 18, "001178": 18, "00121062e": 203, "001232": 18, "001262": 18, "0012645035749301314": 175, "001270": 17, "001354": 18, "00140327e": 203, "0016": 177, "001619": 18, "001665": 18, "0017": 177, "0018": 177, "001835": 17, "001868": 205, "001873": 17, "001899": 18, "0019": [184, 185], "001_python_file_input_output": 71, "002": [62, 63], "0020": 177, "002108": 18, "002177": 18, "002200": 18, "0023": 182, "002327879593869": 157, "00232788": 157, "0024": 177, "002464": 18, "002513": 18, "0027": 177, "0028": 182, "002841": 18, "002895": 18, "002940": 18, "002_python_file_directori": 71, "003": [14, 121, 122, 182], "0030": 177, "003029": 18, "0031": 177, "003152": 18, "003165106289088726": 121, "0031846734422911363": 121, "003456": 17, "003478": 18, "0035": 177, "00357518e": 203, "0037": 177, "003780": 18, "003845": 18, "0039": 177, "003_python_file_except": 71, "004": 180, "004079": 17, "004274": 18, "004291": 18, "0043": 177, "004785": 14, "004838": 17, "0049": 177, "004_python_exceptions_handl": 71, "005": 203, "0051": 177, "0052": 177, "005294": 18, "005308": 18, "005356": 205, "005408": 18, "005436": 17, "0055": [174, 177], "0056": 177, "0057": 177, "005742": 18, "005743": 17, "0058": 177, "005837": 17, "005978": 18, "005_python_user_defined_except": 71, "0060": 177, "00603": 176, "00615": 176, "00616708": 154, "006191": 201, "0062": 177, "006201": 18, "006215683650225401": 175, "0063": 177, "0065": 177, "0067": 184, "006730": 17, "0069": 177, "007": [96, 180, 203], "007120": 17, "0072": 182, "007234": 205, "0073": 177, "007320": 18, "0075": 177, "007525": 17, "00778181e": 203, "0078": 177, "007860": 18, "00786338": 157, "007995": 17, "007_python_function_modul": 70, "0080": 177, "00826323e": 203, "0083": 177, "0084": 177, "00856914e": 203, "0086": 176, "008831": 18, "0089": 177, "009": 54, "0090": [177, 184], "009066": 18, "0092": 177, "0094": 177, "009417": 17, "0095": [177, 182, 184, 185], "009509": 18, "009529": 18, "00960206e": 203, "009757": 18, "009783552028238773": 183, "00_pytorch_fundament": 174, "01": [12, 14, 54, 61, 62, 63, 65, 67, 68, 96, 122, 174, 175, 176, 177, 178, 183, 185, 189, 193, 196, 198, 199, 200, 201, 203, 205], "010": [54, 203], "0100": [97, 176], "010000": 160, "0101": [97, 177], "0102": [177, 184], "010289": 18, "0103": 177, "010311": 17, "01032310e": 203, "01051775e": 203, "010527": 18, "01061": 176, "0107": [176, 177], "010755": 18, "0109": 177, "011": [180, 181], "0110": 177, "01118234211553424": 121, "011255": 17, "0114": 177, "011523": 201, "011630": 18, "01169557310640812": 183, "011743": 18, "0118": 177, "01183409e": 203, "0119": 177, "012098": 18, "012345": 54, "0123456789": 82, "0124": 177, "0125": 177, "0126": 177, "0127": 177, "012874804746266883": 121, "012986": 18, "0131": 177, "013148": 18, "01326": 176, "013316": 18, "013350": 18, "0134": 177, "01345985e": 203, "013474": 18, "0135": 177, "013555": 18, "013648": 176, "013763": 18, "013801801018416882": 175, "013853": 18, "0140": 177, "014086711220443249": 175, "0141": [177, 185], "014127": 18, "0142": [176, 177], "01426": 176, "0143": 177, "014374": 17, "0146": 177, "014745": 18, "0148": 177, "0149": [176, 177], "0150": 177, "015092319017854244": 121, "0152": 177, "0155": 177, "0156": 177, "015672": 17, "0157": [177, 178], "01580": 182, "015862": 18, "015877": 18, "0160": [177, 178], "0161": [177, 182], "016288": 18, "0163": 177, "016412": 183, "0165": 177, "0167": 177, "016705": 16, "0168": 176, "0169": 177, "0170": 177, "0171": 177, "01710843e": 203, "0173": 177, "0177": 177, "017837": 18, "0180": 177, "0181": 177, "0182": 177, "0187": 177, "0188": 177, "0190": 177, "019028": 17, "01919923e": 203, "0192": 177, "0193": 177, "0194": 177, "019404": 18, "019472001962491232": 121, "019542": 18, "019561": 17, "0196": [177, 178], "019608": 160, "019675": 18, "019745": 18, "0198": 177, "0199": 177, "019922": 13, "019968": 177, "01996805111821": 177, "01_learn_python4data": [71, 82, 172], "01_pytorch_workflow_model_0": 175, "01_pytorch_workflow_model_1": 175, "01x345": 54, "02": [13, 61, 62, 63, 67, 68, 122, 175, 176, 177, 178, 185, 189, 203], "0200": [175, 176], "02004": 176, "0201": 177, "0203": 177, "020391": 17, "0204": 177, "020408": 171, "0205": 177, "0207": 177, "0208": [184, 185], "0209": 177, "0210": [177, 185], "021069": 201, "02127": 176, "0213": 177, "0214": 184, "021509": 176, "0216": 177, "021708": 16, "0218": 177, "021838": 18, "021854": 17, "02210": 49, "0222": 184, "0223": [177, 179, 184, 185], "022326": 17, "0225": 177, "0226": 177, "022727": 171, "0228": 177, "0229": 177, "022960": 18, "0231": 177, "02319487": 157, "0232": 177, "0233": 177, "0235": [177, 182], "0236": 177, "023622": 18, "0237": 177, "0238": 177, "0240": 177, "024045": 18, "024052": 16, "0241": 177, "0242": 177, "02423": 176, "024253": 18, "0244": 177, "0245": 177, "0247": 177, "0248": 177, "0249": 177, "025000": 194, "0252": 177, "0253": 177, "025347": 18, "025388": 18, "02539500e": 203, "0254": 177, "025531": 18, "025549": 17, "0256": [177, 183], "025678": 18, "0257": 177, "0258": 177, "02587": 176, "0259": 177, "0260": 177, "026005": 18, "026023": 18, "0261": 177, "0262": 177, "0263": [177, 183], "026366": 18, "0264": [177, 183], "0266": 177, "026648": 18, "0268": 177, "02683718e": 203, "0269": 183, "027": 183, "0271": 177, "0272": 177, "0273": 177, "0274": 177, "027404": 18, "0275": 177, "027513": 18, "0277": 177, "0278": 177, "02788739837706089": 175, "02799": 176, "0280": 177, "028090": 18, "0283": 177, "0284": 177, "028452": 16, "0285": 177, "02850": 176, "0286": 177, "0288": 177, "028944": 18, "028969": 18, "0290": 177, "02901": 176, "0291": 177, "02919730e": 203, "0292": 177, "02928161e": 203, "029371": 18, "029398": 18, "0294": 177, "0295": 177, "0297": 177, "02989209e": 203, "0299": 177, "02f": 34, "03": [26, 54, 68, 122, 135, 146, 174, 176, 177, 178, 179, 183, 185, 189, 203], "0300": 176, "030114": 201, "0304": 177, "0306": 177, "03068156e": 203, "0307": 177, "030774": 189, "03083": 176, "030971": 18, "030e2eec799d": 39, "031": 183, "0310": 177, "031250": 171, "0313": 177, "03132382780313492": 175, "0314": [177, 178], "03145352": 157, "0314fd17": 136, "0315": 177, "0316": 177, "0318": 177, "0319": 177, "032258": 171, "0323": 177, "0324": 177, "032475": 17, "03247675": 157, "0326": 177, "032878": 17, "0330": 177, "03300": 176, "033011": 18, "033088": 18, "033175": 17, "033192": 18, "0333": 177, "033395": 18, "03348578e": 203, "0335": 177, "0336": 177, "03387531e": 203, "033911": 18, "0342": 177, "0343": 177, "034357": 16, "0344": 177, "03448": 176, "0345": 177, "03461004": 157, "03476089984178543": 175, "03486": 176, "0349": 177, "035009": 18, "03505598723366": 82, "0351": 174, "035149": 17, "0352": [177, 178], "0353": [177, 178], "0354": 177, "0355": 177, "0356": [177, 182], "035714": 171, "0359": 177, "0360": 177, "036166": 18, "036300": 18, "0364": 177, "03643": 176, "0365": 177, "0366": 177, "0367": 177, "0369": 177, "0370": 177, "0371": 176, "037224": 17, "0373": 177, "0374": 177, "037445": 18, "0375": 177, "0376": 177, "0377": 177, "037732": 18, "037747": 18, "0381": 177, "03818932920694351": 175, "038202": 18, "0383": 177, "0384": 177, "0385": 177, "038580": 17, "0386": 177, "0388": 177, "0389": 177, "0390": 177, "03910": 176, "0392": [177, 178], "0395": 177, "039631": 201, "039698": 18, "0397": 177, "0398": 177, "0399": 177, "039919": 18, "03_daniels_macbook_pro": 181, "03_pytorch_computer_vision_model_2": 177, "03pm": 62, "04": [61, 67, 68, 122, 140, 141, 146, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 193], "0400": [175, 176], "040000": 160, "0401": 177, "0402": 177, "0404": 177, "0406": 177, "0408": 177, "0409": 177, "04098": 176, "040986": 18, "0411": 177, "0412": 177, "0413": 177, "0415": 177, "04167863354086876": 175, "041750": 18, "0420": [176, 177], "042011": 17, "0421": [176, 177], "042190": 16, "0422": 177, "0424": 177, "0426": 177, "0427": 177, "0428": 177, "042849": 9, "042857": 171, "0429": 177, "04295": 176, "042991": 18, "0430": 177, "0431": [177, 178], "0432": 177, "04324": 176, "043293": 18, "0433": 177, "0440": 177, "0441": 177, "0443": 177, "044382": 18, "0444": 177, "0446": 177, "0447": 177, "0448": 177, "0449": 177, "0450": 177, "045016": 18, "045149999999999996": 140, "0452": 177, "04543796554207802": 175, "0455": 177, "0457": 177, "0458": 177, "0459": 177, "045985": 18, "0461": 182, "04617067e": 203, "0462": 177, "0463": 177, "046456": [12, 14], "046484": 18, "0465": 182, "0467": 177, "0468": 177, "046815": 9, "0469": 177, "0470": 177, "04702762e": 203, "0471": 177, "0472": 177, "047295": 17, "0473": 177, "047347": 18, "0474": 177, "04763428": 154, "0477": 177, "0478": 177, "0481": 177, "048227": 18, "0485": 177, "04857": 176, "0486": 177, "048779": 18, "0488": 177, "048819": 13, "0489": 177, "04892": 176, "0494": 183, "0496": 177, "0497": 177, "049796": 18, "0498": 177, "04_custom_data_cr": [178, 183], "04_python_funct": [70, 82], "05": [9, 62, 63, 68, 122, 131, 137, 146, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189], "0500": [199, 201], "05017144e": 203, "050218": 18, "0505": 177, "050755": 18, "05082974": 154, "0510": [177, 178], "051020": 171, "051179": 18, "0512": 177, "051267": 16, "05133": 176, "0515": 177, "0516": 177, "051891": 18, "0521": 177, "05233094e": 203, "052387": 13, "0524": 177, "0525": 177, "0527": 177, "0528": 181, "0529": 177, "0530": 177, "053148526698350906": 175, "0532": 177, "0533": 177, "053369999999999994": 141, "0534": 177, "0535": 177, "0537": [179, 181, 184, 185], "053816": 18, "0539": 177, "0540": 177, "0541": 177, "0542": [177, 182], "0544": 177, "0546": 177, "05473060e": 203, "0549": [177, 178], "0551": 177, "0552": 177, "055217": 18, "0553": 177, "0554": 177, "0555": 177, "0556": 177, "0557": 177, "05571": 176, "0558": 177, "0559": 177, "055903": 18, "05599": 176, "0560": 177, "0562": 177, "0563": 177, "056380": 17, "0564": 177, "05655136772680869": 83, "0566": 177, "05669558e": 203, "0567": 177, "0568": 177, "05698": 176, "0570": 177, "057333": 189, "0574": 177, "0577": 177, "0578": 178, "0579": 177, "0580": 177, "0583": 177, "0584": 177, "058497": 17, "0585": 177, "0586": 177, "0587": 177, "058710": 18, "0588": [177, 178], "058824": 171, "058849": 18, "0590": 177, "05908a030c74": 104, "0592": 177, "05924": 176, "0594": 177, "0595": 177, "059554": 18, "0596": 177, "0597": 177, "0598": [176, 177], "0599": 177, "05_going_modular_cell_mode_tinyvgg_model": [179, 184, 185], "05_going_modular_script_mode_tinyvgg_model": [179, 185], "05_going_modular_tingvgg_model": [179, 184, 185], "05_python_fil": 71, "05_pytorch_going_modular_cell_mod": 186, "05_pytorch_going_modular_script_mod": 186, "05t22": 141, "06": [61, 62, 63, 64, 65, 67, 68, 146, 181, 182, 183, 185, 187, 189, 191], "0600": 175, "0602": 177, "0603": 177, "0605": 177, "0607": 177, "061065": 18, "06107": 176, "06109": 176, "0613": [121, 140, 142, 146, 177], "0616": [177, 179, 181, 184, 185], "06161913e": 203, "061689": 18, "0617": 177, "0618": 177, "061915": 18, "0620": 177, "0622": 177, "0623": 177, "0624": 177, "062439": 18, "062500": 171, "0627": [178, 183, 184], "0629": 177, "0630": 185, "0631": 177, "0632": 183, "0633": 177, "0634": [177, 178], "0635": 177, "063577": 205, "0636": 177, "0637": 177, "0638": [177, 183], "0639": 177, "0641": 183, "064182": 183, "06418210905976593": 183, "0642": 183, "0643": 177, "0645": 177, "064516": 171, "0646": [174, 177], "0647": 177, "06473556160926819": 175, "0649": 177, "0650": 182, "0651": 177, "065211": [12, 14], "065444": 18, "06563599e": 203, "0657": 177, "065897": 18, "0659": 177, "065937": 18, "0661": 177, "0662": 183, "0663": 177, "0665": 177, "0666": 177, "06663512e": 203, "066667": 160, "0667": [177, 178], "0669": 177, "0672": 177, "0673": 177, "0674": 177, "06745": 176, "0676": 177, "0677": 177, "0678": 177, "0680": 177, "068044": 13, "0681": 177, "0684": 177, "0685": 177, "068645": 16, "0688": 177, "0689": 177, "0690": 177, "0691": 177, "0692": 177, "0693": [177, 183], "0694": 177, "06947804e": 203, "0696": 177, "069723": 13, "0699": 177, "06_pytorch_transfer_learn": 181, "07": [62, 63, 65, 68, 122, 174, 175, 177, 181, 183], "0700": 131, "0701": 177, "070254": 18, "070279": 18, "0704": 177, "070574": 18, "0706": [177, 178], "0708": 199, "0709": 177, "0711": 177, "0713": 177, "0714": 177, "0717": 177, "07216": 176, "072182": 16, "0722": 177, "07232122868299484": 175, "0724": 177, "0726": 176, "0729": 183, "0730": 177, "0731": 177, "073129": 12, "073160": 17, "0734": 177, "0735": 177, "073595": 18, "0736": 177, "073709": 203, "07376": 176, "0738": 177, "073953": 18, "0740": 182, "074074": 171, "0742": 177, "0745": [177, 178], "07450952e": 203, "0747": 177, "0750": [177, 199], "0752": 177, "0754": 177, "0755": [176, 177], "0757": 182, "0758": 177, "0759": 183, "0761": 182, "0763": 177, "07659773e": 203, "0766": 177, "0769": 177, "076923": 171, "077036": 201, "0772": 177, "0773": 177, "0774": 177, "0775": 177, "0776": [177, 182], "0777": [177, 183], "0778": 176, "0779": 177, "0780": 177, "078020": 18, "0781": 177, "0782": 177, "0783": 177, "0785": 177, "0786": 177, "0787": 177, "0788": 177, "0789": 177, "0790": 177, "0791": 178, "0793": 177, "079365": 18, "0796": 177, "0797": [177, 182], "0799": 177, "07_": 181, "07_effnetb0_data_10_percent_10_epoch": 181, "07_effnetb0_data_10_percent_5_epoch": 181, "07_effnetb0_data_20_percent_10_epoch": 181, "07_effnetb0_data_20_percent_5_epoch": 181, "07_effnetb2_data_10_percent_10_epoch": 181, "07_effnetb2_data_10_percent_5_epoch": 181, "07_effnetb2_data_20_percent_10_epoch": 181, "07_effnetb2_data_20_percent_5_epoch": 181, "08": [61, 65, 67, 68, 122, 146, 174, 177, 183], "0800": 175, "080169": 203, "0803": [177, 178], "0804": 177, "0805": 177, "0805937647819519": 175, "0806": 177, "08062": 176, "0808": 177, "0808e": 177, "0810": 177, "0813": 177, "0814": 177, "08143941": 154, "0816": 177, "0817": 177, "0818": 177, "0820": 177, "0823": 177, "0824": 178, "0825": 177, "083": 180, "0830": [177, 183], "08309749e": 203, "083132": 16, "083174": 18, "083261": 18, "0833": 185, "08333022e": 203, "083333": [160, 171], "0835": 177, "0837": [177, 185], "0838": 177, "0840": 177, "0842": 177, "0843": 177, "0844": 183, "084423": 18, "0845": 177, "0847": [177, 178], "084713": 178, "0848": 177, "0850": 177, "0851": [177, 185], "0853": 177, "0855": [177, 182], "08553692": 156, "085536923187668": 82, "0857": 177, "0859": 177, "0861": 177, "0862": 177, "0863": [177, 178], "086334": 18, "0864": 177, "086505": 18, "0866": 177, "086688": 13, "086780": 17, "087": 12, "0871": 177, "0872": 177, "087328": 18, "0875": 177, "0876": 177, "087777": 18, "0878": 177, "0880": 178, "0881": 177, "0882": 177, "0883": [177, 185], "0886": 177, "0888": 177, "08886633068323135": 175, "0890": 177, "08908725529909134": 175, "0891": 177, "089286": 171, "0894": 177, "0896": 177, "0897": 177, "0899": 183, "08_pretrained_vit_feature_extractor_pizza_steak_sushi": 182, "09": [62, 63, 68, 122, 140, 146, 174, 180, 183], "0901": 177, "0902": [177, 178], "0903": 177, "0904": 177, "0905": 177, "090909": 171, "09090909090909": 82, "0911": 177, "0913": 177, "0914": 177, "0915": 177, "0916": 177, "091695": 18, "0918": 177, "091864": 12, "0919": 174, "09199": 177, "0920": 177, "0923754647374153": 181, "0924": [180, 181], "0926": 177, "0927": 177, "092742": 16, "0928": [177, 181, 183], "0929": 177, "09309": 176, "0932": 177, "0933": [177, 183], "093484": 18, "0936": 177, "0937": 177, "0938": [177, 182], "0939": 177, "0940": 177, "0941": 178, "0945": 177, "0947": 177, "0948": 177, "0949": 177, "0950": [177, 183], "0953": 177, "0955": 184, "095564": 178, "0956": [178, 185], "0957": 177, "0958": 177, "0959": 177, "0960": 177, "0961": 177, "096154": 171, "096220": 18, "0963": 177, "0964": 177, "0965": 177, "0968": 177, "096812": 18, "0969": 177, "09708521e": 203, "0972": 177, "0974": 177, "097538": [12, 14], "0977": 177, "0978": 177, "09790012e": 203, "098": 12, "0980": [177, 178], "0981": 177, "098383": 18, "0984": 177, "0985": 178, "098520": 178, "098661": 18, "0987": 177, "098811": 18, "0989": [176, 177], "09919948130846024": 175, "0992": 177, "0993": 177, "099350157876355": 157, "09935016": 157, "0994": 177, "09_pretrained_effnetb2_feature_extractor_food101_20_perc": 183, "09_pretrained_effnetb2_feature_extractor_pizza_steak_sushi_20_perc": 183, "09_pretrained_vit_feature_extractor_pizza_steak_sushi_20_perc": 183, "09_pytorch_model_deploy": 183, "0_": 54, "0a4959e7a13b": 55, "0b": 53, "0b0001": 53, "0b10": [53, 97], "0b1010": 93, "0b1101011": 53, "0d17a834dca2": 79, "0ef33cc3a94d": 72, "0f": 122, "0f0f0f": 192, "0f0f0f0f": 192, "0f73a35e8ce2": 90, "0j": [93, 97], "0m": [121, 122, 131, 133, 144, 148, 177], "0mib": 174, "0o": 53, "0o12": 53, "0o15": 53, "0o310": 93, "0qgx4kh": 121, "0th": [174, 182], "0x": 53, "0x0000012c87c0af70": 38, "0x000001d284b3b430": 37, "0x000001d8aec3ac10": 104, "0x000001d8aec44eb0": 104, "0x000001d8aec7e1f0": 104, "0x000001d8aec7e4c0": 104, "0x000001d8aec7e5e0": 104, "0x00000218ffc65220": 106, "0x0000021e45765b20": 103, "0x0000021e45765dc0": 103, "0x00007ffad7cb2770": 38, "0x000a": 53, "0x12c": 93, "0x12c4cb88d90": 204, "0x12c4df5c1c0": 204, "0x12c4e273c70": 204, "0x12c50e26c10": 204, "0x12c53a52d60": 204, "0x12c53affc10": 204, "0x163ca247070": 207, "0x163cdf926d0": 207, "0x163ce3245e0": 207, "0x163cfcc79d0": 207, "0x163d0288250": 207, "0x163d05bfa60": 207, "0x163d0f2ae20": 207, "0x1662f00ac70": 195, "0x16633986eb0": 195, "0x166339f84c0": 195, "0x16635a26b80": 195, "0x16635a63550": 195, "0x170b84f24a0": 40, "0x1a11b1a6e80": 198, "0x1a11b2e7a00": 198, "0x1a11b349eb0": 198, "0x1a2186f5940": 205, "0x1a21896cac0": 205, "0x1a218c77d30": 205, "0x1a218d2d6a0": 205, "0x1a218de36a0": 205, "0x1a21a1a7310": 205, "0x1a21a449490": 205, "0x1a21a492c70": 205, "0x1a21b6eba00": 205, "0x1be276a14a8": 207, "0x1bfbd546670": 196, "0x1bfbe8c42b0": 196, "0x1bfbe8d2640": 196, "0x1bfbeacc8b0": 196, "0x1bfbf65d610": 196, "0x1ce07cb24f0": 201, "0x1ce07cc58e0": 201, "0x1da1f804700": 202, "0x1da1f8bf520": 202, "0x1da209c66d0": 202, "0x1da20f86b20": 202, "0x1da20fa4c10": 202, "0x1da214a06d0": 202, "0x1edcdfafd30": 203, "0x219288a7220": 194, "0x2192d5bb3a0": 194, "0x2192de12c70": 194, "0x2192dfa48b0": 194, "0x2192e06b910": 194, "0x2192e0be9d0": 194, "0x2192e328640": 194, "0x22c3a5e3ac0": 200, "0x22c3a722fd0": 200, "0x22c3b278670": 200, "0x22c3c78df40": 200, "0x22c3c8f1040": 200, "0x263397171f0": 192, "0x264e0145a90": 191, "0x26bc28689d0": 193, "0x26bc65bb8b0": 193, "0x26bc7611700": 193, "0x26bc7dd6cd0": 193, "0x26bc7eaf0a0": 193, "0x26bc8131250": 193, "0x26bc81b38b0": 193, "0x26bc81e5730": 193, "0x29872f94b20": 199, "0x7f122dd0f0d0": 183, "0x7f17f3f5f520": 182, "0x7f18845ff0d0": 182, "0x7f53c0b9dca0": 178, "0x7f53c0b9de50": 178, "0x7f53c6d64040": 178, "0x7f5460ab8400": 178, "0x7f5460ab8490": 178, "0x7f5460ad23d0": 178, "0x7f5460ad2f70": 178, "0x7f5461f70c40": 178, "0x7f5461f70c70": 178, "0x7f8389169070": 121, "0x7f853747b550": 184, "0x7f853747bbe0": 184, "0x7fa942951460": 180, "0x7fa942951550": 180, "0x7fa9429a37c0": 180, "0x7fa9429a3a60": 180, "0x7fc991463cd0": 177, "0x7fc991475120": 177, "0x7fca2e3445b0": 185, "0x7fca2e344760": 185, "0x7febf1d213a0": 181, "0x7febf1d21490": 181, "0x7febf1d216a0": 181, "0x7febf1d218e0": 181, "0xfb": 53, "1": [2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 46, 47, 49, 50, 53, 59, 67, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 108, 113, 122, 131, 133, 136, 138, 140, 141, 144, 145, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 173, 175, 176, 179, 180, 181, 186, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 202, 203, 205, 206, 207, 214], "10": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 30, 31, 33, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 62, 65, 68, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 106, 108, 113, 121, 122, 133, 135, 137, 140, 141, 143, 146, 147, 148, 150, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214], "100": [14, 15, 16, 17, 18, 19, 20, 26, 27, 29, 31, 37, 41, 49, 50, 51, 55, 57, 59, 76, 81, 82, 93, 105, 106, 113, 131, 133, 136, 138, 143, 147, 150, 154, 155, 157, 160, 161, 162, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 185, 190, 191, 194, 195, 196, 199, 200, 204, 205], "1000": [13, 15, 20, 50, 53, 80, 92, 97, 103, 121, 122, 135, 136, 138, 139, 140, 141, 151, 157, 175, 176, 178, 180, 182, 183, 193, 199, 200, 201, 202, 203], "10000": [10, 17, 18, 19, 21, 135, 146, 151, 157, 160, 177], "100000": [16, 151, 189], "1000000000000000055511151231257827021181583404541015625": 53, "1001": 177, "1002": 177, "10026431e": 203, "1003": 177, "1004": 177, "1005": 177, "1006": 177, "1008": 177, "100k": 135, "100th": 143, "101": [79, 104, 170, 171, 178, 181, 183, 200, 201, 204, 205], "1010": [97, 176, 177], "1011": 177, "1012": 182, "1016": 177, "1017": 177, "1018": 177, "101803": 14, "102": [79, 104, 160, 161, 170, 171, 172, 178, 180], "1020": [177, 178], "1021": 177, "1024": [181, 182, 183], "10276143": 154, "1029": 177, "103": [104, 170, 171, 172, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1031": 177, "1034": 177, "1039": 177, "104": [33, 104, 160, 161, 171, 172, 178], "1041": 177, "1043": 177, "1044": 177, "104504": 17, "1046": 177, "1049": 177, "105": [12, 41, 140, 171], "1050": [54, 177], "1051": 177, "1052": 177, "1053": [167, 177], "1054": [167, 177], "1055": [167, 177], "1056": 167, "1057": [167, 177], "1058": 178, "1059": [177, 178], "106": [171, 174], "1060": 177, "1061": [174, 177], "1062": 177, "1063": [175, 177], "1065": 177, "106628291529549": 82, "1067": 182, "106846": 18, "10696289e": 203, "107": [53, 171, 178], "1070": 177, "107072": 18, "1070e": 177, "1072": 183, "107221": 15, "107353": 14, "1074": [177, 178], "1077": 177, "1078": [177, 178], "107833": 178, "108": [171, 178], "1080": 177, "108178": 18, "1082": 177, "1084": [177, 182], "1086": 177, "1087": 177, "1088": 177, "109": [79, 160, 171, 181, 183], "1092": 177, "109299": 201, "1093": 177, "1095": 177, "1095522857580948": 197, "109553": 18, "1096": 177, "1097": [177, 182], "1097501": 154, "1098": [131, 178, 182], "1099": [131, 177], "1099_file": 92, "10_epoch": 181, "10_python_pandas_modul": 172, "10ffff_": 54, "10fp": 183, "10k": [133, 182], "10mb": 183, "10x256": 178, "11": [13, 16, 18, 33, 37, 40, 46, 49, 51, 53, 54, 55, 57, 59, 63, 67, 68, 77, 81, 91, 93, 94, 97, 99, 103, 104, 122, 133, 135, 137, 141, 143, 147, 150, 154, 155, 156, 157, 160, 164, 169, 171, 172, 174, 176, 177, 178, 180, 182, 189, 191, 199, 204, 205], "110": [171, 172, 174, 183], "1100": [54, 131], "1101": [131, 177], "110110": 100, "1102": 131, "1104": 185, "1105": 174, "110560": 18, "1105e": 176, "111": [97, 131, 160, 161, 171, 172, 178, 183], "1110": [97, 177], "1111": [41, 97, 177], "111111": [96, 171], "11111111": 157, "1112": [177, 179, 184, 185], "1114": 177, "1115": 177, "1117": 177, "112": [131, 141, 171, 172, 177, 180], "1120": 177, "1121": 177, "11222578": 9, "1123": 177, "112300": 141, "1124": 177, "112483": 18, "1126": 178, "1127": 178, "1128": 178, "11289431e": 203, "1129": 178, "113": [131, 171, 177, 178], "1130": [177, 178], "1131": [178, 185], "1132": [177, 178], "1134": 198, "1135": [177, 198], "113538": 18, "1136": 198, "11360953003168106": 175, "1137": [177, 178, 198], "1138": [177, 185, 198], "1139": 177, "114": [131, 160, 161, 171, 172, 177, 178], "1140": 177, "1141748": 122, "11421774e": 203, "1143": 177, "1144": 177, "1145": 177, "1146": 177, "1147": 177, "1148": 177, "1149": 177, "115": [131, 133, 160, 161, 171, 172, 177], "1150": 177, "1151515151515152": 191, "1154": 177, "115551": 18, "115697": 178, "1157": [178, 182], "115799": 12, "1158": 198, "1159": 198, "115971": 18, "116": [131, 133, 171, 177], "1160": 198, "1161": 198, "1162": 198, "1163": 183, "117": [131, 133, 171, 174], "1170": 177, "1172": 178, "11734513e": 203, "117543": 18, "1176": 178, "117647": 171, "117668": 18, "118": [131, 133, 171], "1181": 177, "11818328e": 203, "119": [131, 133, 171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "119e50d96cfb": 72, "11x": [182, 183], "12": [9, 11, 13, 15, 17, 19, 20, 26, 31, 33, 34, 37, 41, 42, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 62, 63, 65, 66, 67, 68, 72, 74, 76, 77, 81, 82, 93, 94, 96, 97, 99, 103, 108, 121, 122, 133, 141, 143, 146, 147, 154, 155, 156, 157, 164, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 192, 193, 198, 200, 201, 203, 205, 206], "120": [5, 51, 79, 82, 131, 135, 160, 162, 171, 172, 174, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1200": 175, "12000": 151, "120027": 122, "120k": 144, "121": [131, 133, 135, 171], "1212": 99, "121486": 176, "121492": 18, "1216": [178, 182], "122": [13, 131, 171], "1224": [177, 182], "122967": 18, "123": [13, 54, 95, 99, 131, 133, 171], "12336799": 154, "123456789": 54, "1234567890": [42, 93], "1234567890123456789": [53, 94], "12345678901234568": [53, 94], "12345678910": 50, "123774": 12, "1238": 185, "123xyz": 183, "124": [13, 95, 133, 171, 178], "1240": [131, 176], "1241": 131, "1242": 131, "1243": 131, "124377": 18, "1244": 131, "1246": 182, "125": [13, 50, 122, 133, 150, 156, 171], "125000": 171, "1251": 182, "1252": 189, "1255": 178, "12551": 133, "1257": 177, "1258": [177, 182], "12587": 200, "126": [13, 133, 171, 180], "1262": 177, "126257": 201, "127": [13, 133, 150, 171, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1270": 183, "12751": 133, "1277": [177, 183], "1278387305019275": 191, "128": [13, 55, 59, 133, 171, 177], "1280": [180, 181, 182], "12800": 177, "128440": 160, "1285": [177, 178], "12872044e": 203, "1288": [175, 177], "128x": 182, "129": [13, 133, 171], "1294": 178, "12940": [160, 161, 172, 194], "12945": 172, "1295": 140, "1296": 189, "129861": 12, "12k": 133, "13": [9, 13, 16, 30, 31, 33, 37, 40, 50, 53, 54, 55, 59, 62, 63, 65, 68, 72, 77, 79, 81, 82, 93, 95, 97, 103, 121, 133, 143, 146, 147, 150, 155, 156, 157, 164, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 194, 201, 203, 205], "130": [13, 122, 133, 160, 171, 174, 178, 180], "1300": 177, "13037": 176, "1309": 174, "131": [13, 33, 171], "1313": 183, "1316": 177, "1318": 185, "131910": 16, "132": [13, 133, 171], "1320": 177, "1322": 177, "1324": 176, "1325": 177, "1326244364": 61, "1328": 182, "133": [13, 133, 171, 183], "1331": 182, "1332": 174, "1333": [178, 199], "1336": 174, "134": [13, 133, 171], "13409426e": 203, "13415": [160, 161, 172], "1345": 41, "13495": [160, 161, 172], "13499": 172, "135": [13, 133, 171], "135432": 183, "135925": 172, "136": [13, 133, 171, 178], "1360": 178, "136041": 178, "1366": 182, "13680419e": 203, "137": [13, 133, 135, 171, 178], "1373": [177, 178], "1375": [131, 182], "13756537093": 96, "1376": 131, "1377": [131, 182], "137723281": 13, "1378": 131, "1379": 131, "138": [13, 133, 150, 171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1382": 178, "138264": 160, "1383": 182, "138373": 178, "1384": 178, "139": [13, 133, 171, 178], "13914421e": 203, "13915538e": 203, "139472": 135, "13950": [160, 161, 172], "1396": 183, "13960670e": 203, "1399": 177, "14": [9, 13, 14, 16, 18, 20, 26, 33, 34, 40, 41, 49, 51, 54, 55, 56, 57, 59, 64, 66, 68, 72, 76, 77, 92, 93, 94, 97, 101, 103, 104, 108, 133, 143, 146, 147, 150, 155, 156, 157, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "140": [13, 131, 133, 141, 171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1400": [140, 175], "140000": 141, "14003": 194, "1401": 133, "1403": 177, "1403916": 122, "1404": 177, "140708960741200": 98, "140708960741232": 98, "140708960741424": 98, "1408": [181, 183], "141": [13, 131, 133, 171, 172, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "14112001": 156, "1412": 177, "1415": 54, "14159": [82, 84], "141592653589793": [53, 82, 96], "14183273e": 203, "142": [13, 131, 133, 141, 171, 183], "14204329": 157, "1425": 178, "1426": 178, "142631": 178, "142705": 18, "142857": 171, "143": [13, 131, 133, 171, 178], "1437": 182, "14398": 176, "144": [13, 30, 50, 97, 131, 133, 171, 178], "1445": [189, 198], "1446": 198, "14464017748832703": 175, "1447": [182, 198], "1448": 198, "1449": 198, "145": [13, 171, 178, 183], "1453": 189, "14577043e": 203, "1459": 185, "146": [13, 37, 171, 174, 178], "146124": 18, "14613738e": 203, "1465": 177, "147": [13, 171, 178], "1472": 178, "14770535": 154, "147751": 18, "147760": 176, "148": [13, 156, 171, 178, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "148148": 171, "14847551e": 203, "149": [13, 171, 178], "1490": 178, "149320": 18, "1495": 176, "1499": 177, "14it": 177, "14j": 93, "14m": 182, "15": [9, 13, 16, 17, 18, 19, 20, 31, 33, 38, 40, 41, 42, 45, 46, 48, 49, 51, 53, 54, 55, 56, 58, 59, 62, 63, 67, 68, 73, 74, 94, 97, 103, 104, 131, 133, 140, 141, 143, 147, 150, 155, 156, 171, 172, 177, 178, 180, 181, 182, 183, 189, 191, 193, 198, 199, 201, 202, 203], "150": [13, 15, 16, 93, 106, 121, 133, 150, 151, 160, 171, 178, 183, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1500": [136, 177, 193, 195], "15000": [74, 151], "150000": 151, "1501": 177, "1502": 177, "1503": 177, "1505": 177, "1506": 176, "15097": 13, "151": [13, 133, 171], "151165": 201, "1511893559": 61, "1513": 177, "15150": 183, "151786": 171, "152": [13, 133, 171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "152862": 18, "1528797322": 62, "153": [50, 133, 171], "1531": 176, "15325888": 176, "153259": 176, "1533": 176, "153319": 12, "153527": [12, 14], "1536": [121, 135], "153883": 18, "154": [133, 160, 161, 171, 172, 178], "1541": 177, "1545730073": 66, "1545925769": 67, "1545966844": 67, "1549": 168, "155": [133, 140, 171], "15514180e": 203, "1554": 182, "1556": 182, "156": [26, 171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "156250": 171, "156586": 17, "1568291": 200, "15687723e": 203, "1569": 177, "157": [171, 174], "15750": 172, "1576": 182, "158": [171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "158023": 150, "1582568": 200, "1589": [177, 182], "159": 171, "1590": 177, "159689": 14, "159790": 18, "16": [9, 13, 16, 29, 32, 33, 34, 36, 39, 40, 49, 50, 51, 53, 55, 56, 57, 59, 68, 74, 81, 82, 87, 92, 93, 94, 97, 104, 105, 133, 143, 146, 147, 155, 156, 157, 171, 172, 174, 175, 178, 180, 182, 183, 189, 193, 194, 196, 198, 199, 200, 201, 204, 205], "160": [160, 171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1600": 175, "1608": [177, 178], "161": 171, "161290": 171, "161491": 17, "16188": 160, "16189161": 177, "162": [76, 171], "1620": [177, 178], "162014": 178, "1623": 178, "1624370069": 66, "1624370297": 67, "16280mib": 174, "162875": 9, "163": [171, 178], "163778": 18, "164": [137, 171], "1640": 182, "1647": [178, 196], "1648": 174, "165": [141, 171, 178], "16500": [160, 161, 172], "165000": 141, "1652": 182, "166": [18, 20, 171], "1664": 177, "1666": 176, "1669": 183, "167": 171, "167204": 18, "168": [160, 161, 171, 172], "1680013019": 121, "168321": 62, "1685": 178, "1686": 178, "169": [171, 172], "1690": [184, 185], "169322": 176, "1695": 182, "1697": 178, "169704": 178, "16j": 93, "16pt": 201, "16x": 178, "16x16": 182, "17": [13, 16, 40, 49, 50, 53, 55, 57, 58, 59, 67, 68, 73, 74, 94, 103, 104, 105, 133, 135, 143, 147, 155, 163, 171, 172, 176, 178, 182, 183, 189, 197, 201, 205, 206], "170": [122, 171], "1700": 19, "1701": 182, "170215": 18, "17041474e": 203, "171": [160, 161, 171, 172, 174, 178], "1711e": 177, "17137357e": 203, "171588": 18, "171995": 172, "172": [67, 171, 178], "1725": [177, 178], "17254901960784313": 194, "173": [171, 178], "173282": 176, "17328203": 176, "1733": 176, "1734": 177, "173469": 171, "1736": 176, "174": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "174260": 9, "17450": [160, 161, 172], "175": [122, 150, 171], "175000": 151, "1751": 177, "1752011936438014": 53, "1757": 141, "176": [79, 160, 161, 171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "176471": 171, "1765": 178, "1766": 183, "1768": 141, "177": 171, "1772": 182, "177mib": 174, "178": 171, "179": 171, "179027": 18, "17951135e": 203, "179585": 12, "1796": 49, "17995": 172, "17th": 121, "18": [13, 16, 29, 31, 34, 36, 40, 45, 46, 49, 51, 57, 58, 59, 61, 62, 64, 65, 68, 70, 74, 96, 97, 99, 104, 105, 121, 133, 143, 146, 147, 150, 155, 160, 161, 163, 171, 172, 176, 178, 182, 183, 189, 200, 204, 205], "180": [50, 146, 171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1800": 175, "18000": 151, "1802": 177, "1804": [176, 178, 182], "18089902e": 203, "181": [171, 178], "1815": 177, "18176766975113706": 191, "1819": [76, 79], "182": [171, 172, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1821": 76, "1822565": 200, "183": [82, 171, 183], "18324209e": 203, "18344": 172, "184": [171, 172, 178], "184080": 13, "1843": 178, "1845": 177, "185": [171, 183], "1850": 177, "1855": 121, "186": 171, "18644463e": 203, "1865": 177, "1867": 177, "1869": 177, "186e9069bdbf14a9": 131, "187": [171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1872": 176, "187264": [12, 14], "1873": 177, "1875": 177, "187500": 171, "188": [160, 161, 171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "18812": 133, "1882": [177, 178], "1882615260180538": 197, "188828": 18, "1889": 176, "189": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "18920": 172, "19": [13, 16, 36, 40, 42, 49, 50, 54, 55, 58, 59, 67, 68, 74, 76, 77, 79, 93, 97, 104, 133, 143, 147, 150, 155, 156, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 174, 177, 178, 180, 182, 191, 194, 197, 200], "190": [171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1900": 160, "19000": 105, "1902": 177, "190337": 16, "190504": 199, "19068": 133, "190871": 150, "191": 171, "1910": 177, "19116": 104, "1913": 176, "192": [171, 180], "1920e": 176, "1922": 178, "192250": 16, "1926": 73, "1927": 177, "1928": 49, "192985": 150, "193": [171, 172, 178], "19305918e": 203, "193080": 150, "193451495": 174, "1937": 26, "194": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1942": 41, "1945": 176, "195": 171, "1953": 49, "1955": 182, "19566591e": 203, "195915": 9, "196": [150, 157, 171, 182, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1960": [133, 139], "1961": 178, "196526332130161": 157, "1966": 54, "19680801": [27, 113], "19692239e": 203, "197": [171, 172, 182, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1970": [61, 66, 67, 174], "1973": 177, "19735756e": 203, "197483": 16, "1976713240146637": 175, "1977": 203, "19789154e": 203, "1979": [178, 182, 185], "197917": 178, "198": 171, "1980": 133, "1984": [121, 177, 182], "1985": 133, "1988": [121, 133], "1989": [121, 182], "199": [142, 171, 172, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "1990": 133, "199128": 17, "1992": 133, "1993": [133, 136], "199333": 189, "1994": 133, "1995": [133, 136], "1996": [1, 133, 135], "1997": [1, 133], "1998": 133, "1999": [133, 177], "19a": 72, "19th": 133, "1a2": 41, "1ab34": 41, "1b9ae9b69587": 156, "1d": [153, 154, 177, 182], "1e": [32, 177, 178, 182, 183], "1e100": 93, "1e6": [30, 31], "1e8": 200, "1erejibdqeccqncb1pbz7w": 121, "1f": [54, 151, 201], "1j": [33, 93, 158], "1k": [135, 176, 182], "1m": [33, 121, 122, 131, 133, 144, 148, 150], "1min": 181, "1n": 33, "1num": 92, "1p": 95, "1st": [39, 55, 77, 78, 79, 80, 82, 122, 143, 146, 174], "1variabl": 90, "1x": 183, "1x1": [17, 19], "1x2": [17, 19], "1x3": [17, 19], "1x4": [17, 19], "1x5": [17, 19], "1x6": [17, 19], "1x7": [17, 19], "1x8": [17, 19], "1x9": [17, 19], "2": [4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 32, 33, 34, 36, 38, 39, 42, 44, 45, 46, 47, 49, 50, 53, 59, 67, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 108, 111, 131, 133, 134, 136, 138, 144, 145, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 179, 180, 181, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 214], "20": [12, 13, 14, 16, 17, 18, 19, 20, 30, 31, 34, 36, 38, 40, 42, 48, 49, 50, 51, 53, 54, 55, 58, 59, 61, 65, 68, 73, 74, 76, 77, 79, 81, 82, 94, 104, 121, 122, 133, 137, 139, 143, 147, 150, 153, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 185, 191, 193, 194, 199, 201], "200": [57, 76, 79, 82, 93, 105, 121, 122, 132, 133, 137, 140, 141, 150, 155, 171, 175, 176, 182, 183, 194, 203, 205], "2000": [133, 136, 140, 141, 145, 147, 148, 151], "20000": 147, "200000": [151, 160], "200000000000003": 87, "2001": 139, "2003": 133, "20040757": 157, "2005": 133, "200555": 65, "2005in": 136, "2006": [133, 136], "2006i": 136, "2008": 122, "200882": 18, "2009": 133, "201": [61, 133, 171], "2010": 133, "2011": [150, 176], "2012": [61, 99, 133], "2013": [62, 63, 133], "201300": 201, "2014": [133, 141], "2015": [133, 182, 189, 205], "2016": [133, 203, 205], "2016life": 137, "2017": [12, 14, 61, 137, 176, 182, 191, 205], "2017becaus": 121, "2018": [41, 61, 62, 63, 66, 67, 122, 150, 205], "2019": [61, 62, 63, 65, 66, 67, 79, 122, 133, 174, 182], "202": [76, 133, 171], "2020": [65, 133, 160], "20200": 183, "2020when": 135, "2021": [54, 61, 62, 64, 67, 76, 121, 140, 174, 183], "2021befor": [121, 133], "2021pythondatatyp": 54, "2022": [73, 140, 142, 144, 174, 177, 178, 180, 181, 182, 183], "2023": [26, 131, 135, 139, 140, 141, 142, 144, 147, 174], "2024": 214, "20240789e": 203, "202563": 194, "2028": 177, "202998": 9, "203": [18, 20, 133, 171], "2032": 182, "2039": [177, 178], "204": [133, 171], "2044": 182, "204451": 18, "20491465": 157, "205": [133, 135, 171], "2050": 182, "2052": 177, "205306": 16, "2056": 196, "206": [133, 171], "2064": 182, "207": [133, 171, 172, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2074": 182, "2076": 182, "20784702e": 203, "208": [133, 171, 172, 180], "20800138e": 203, "20801": 150, "20843398e": 203, "2086": 135, "2087a9c41308": 40, "209": 171, "209539": 16, "209800": 16, "20994144e": 203, "20it": 185, "20th": 133, "20x20": 8, "21": [13, 16, 33, 40, 42, 49, 50, 51, 54, 58, 59, 61, 63, 64, 67, 68, 74, 79, 82, 105, 143, 146, 150, 155, 156, 157, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 177, 178, 180, 193, 196, 198, 199, 200, 201, 205], "210": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2102": 41, "2106": 177, "2109": 174, "211": [131, 171, 190], "211349": [12, 14], "211538": 171, "2117351": 183, "2118": [176, 177], "212": [131, 171, 190], "2124579": 178, "2126": 189, "21260800e": 203, "2129": 182, "213": [131, 171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "21330910940589698": 197, "2134": 177, "21355": 13, "2137": 182, "213710": 16, "21379529e": 203, "214": [18, 20, 131, 171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "214286": 171, "214695": 203, "214782": 13, "2148": 121, "215": [131, 148, 171, 177], "2150": 182, "2154": 157, "2157": [177, 178], "216": [50, 82, 171, 177], "2162": 174, "217": [171, 177], "21728": 13, "21729660034179688": 175, "217391": 171, "21741122e": 203, "21748794e": 203, "218": [171, 177, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2181": 177, "2183": 177, "21855997e": 203, "2189884": 13, "219": [141, 156, 171, 177, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2191": 177, "2196": 177, "21987980e": 203, "21k": 182, "22": [13, 16, 26, 31, 33, 54, 55, 59, 61, 62, 64, 65, 67, 68, 74, 79, 81, 82, 97, 133, 155, 156, 157, 161, 171, 174, 177, 178, 182, 189, 199, 201, 205], "220": 171, "2200": [146, 182], "220087": 201, "22026": 53, "2205": 182, "220657": 18, "2209": 177, "221": [171, 181, 183], "2210": 176, "2211": 177, "222": 171, "222222": 171, "22222222": 157, "22291790e": 203, "223": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "223188": 9, "2235": 177, "22357762": 157, "22389": 194, "223905": [12, 14], "22397933e": 203, "224": [171, 174, 178, 180, 181, 182, 183], "22417715e": 203, "224369": 12, "2244": 176, "224x224": 180, "225": [133, 171, 178, 180, 181, 182, 183, 184, 185], "225000": 151, "2251799813685248": 53, "2256": 176, "2258": 177, "225806": 171, "22592182e": 203, "226": [133, 150, 171], "2261": 182, "226677": 14, "22672978": 154, "227": [133, 171, 181, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2270": 176, "22709318e": 203, "22722896e": 203, "2275": [177, 178], "2279": 182, "228": [133, 150, 171], "2281": 182, "228173": 183, "228434": 201, "22897": 200, "229": [133, 171, 174, 180, 181, 182, 183, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "22911": 194, "2292": [174, 182], "22931538e": 203, "22949": 194, "2298": 133, "23": [13, 16, 33, 41, 49, 50, 54, 55, 61, 62, 63, 65, 67, 68, 82, 95, 104, 121, 131, 133, 140, 142, 143, 150, 155, 160, 161, 171, 172, 174, 177, 178, 181, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "230": [141, 171], "230000": 141, "2303": 177, "2305ca5": 26, "231": 171, "2314": 178, "23148074": 176, "231481": 176, "2315": 176, "23180804": 154, "2319": 177, "232": [171, 180, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "23250": 146, "2328": 177, "233": [50, 171], "2331": 177, "233336": 12, "233423": 61, "23379671": 157, "2339e": 176, "234": 171, "234234": 121, "2344": 182, "2345": 177, "234566": 61, "2347": [177, 182], "234922": 12, "235": 171, "2351": 182, "2352": 182, "2353": 178, "2354": 177, "2358": 182, "236": 171, "2360": 177, "23600": 172, "23606798": 156, "23611012e": 203, "2368": 174, "237": [133, 171], "2377": 182, "238": [133, 171], "2381": 176, "23845": 172, "2389": 182, "239": [133, 171], "2391": 182, "2392": [177, 178], "24": [13, 16, 31, 42, 49, 51, 55, 57, 59, 62, 63, 68, 81, 82, 104, 133, 146, 150, 155, 160, 161, 171, 172, 177, 178, 180, 182, 183, 193, 196, 198, 199, 200, 201, 205], "240": [133, 171, 180], "2400": 176, "2401": 177, "241": [133, 171], "2412": 182, "2418": 182, "242": 171, "2422": 182, "24271445e": 203, "24299133e": 203, "242b77ef2a87": 94, "243": 171, "2431": [177, 178], "2432": 177, "244": 171, "2445": 182, "2446": 182, "244898": 205, "2449": 177, "245": 171, "2454": 182, "245426098662": 164, "245483": [12, 14], "2456": 177, "245614": 171, "2457": 30, "24576mib": 174, "2458": 189, "246": 171, "246154": 160, "2465": 177, "24674836e": 203, "24677": 194, "247": [171, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2471": 177, "247597": [12, 14], "2476979795053773": 53, "248": [171, 182], "24813498e": 203, "248490": [12, 14], "24865": 200, "249": 171, "2493": 182, "249765": 177, "2499": 177, "25": [13, 17, 18, 19, 20, 26, 32, 39, 42, 49, 50, 51, 53, 55, 57, 59, 62, 66, 68, 73, 82, 93, 94, 96, 104, 133, 144, 147, 150, 151, 155, 156, 160, 171, 176, 178, 183, 189, 191, 193, 194, 196, 200, 201, 205], "250": [106, 122, 135, 148, 171, 177, 178, 182, 183], "2500": [178, 199, 201], "250000": [151, 160, 171, 194], "2505": 176, "250fe64180f3": 104, "250k": 144, "250w": 174, "251": [53, 171], "2510": [177, 178], "2518868": 141, "252": 171, "2521": 177, "25231985e": 203, "25250": 183, "2526": 182, "252785": 14, "253": [53, 171], "2531": 183, "2534156": 200, "2535": 189, "2536": 177, "254": [103, 171], "2541": 182, "2549": [176, 177], "25490048e": 203, "255": [10, 12, 17, 18, 19, 20, 171, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2557": 196, "2558": 177, "2559205": 154, "256": [32, 55, 59, 133, 171, 177, 178, 180, 181, 182], "2560": [177, 178], "25600": 177, "2560x3": 178, "2566": 174, "2569": 177, "257": [86, 133, 171], "2573": 182, "2578": 178, "257812": 178, "258": [133, 171], "2581": 177, "2582289": 183, "258364": 16, "2587": 177, "258745": 200, "2588": 177, "259": [133, 171], "259259": 171, "259490": 189, "25hmlxtend": 177, "25th": 160, "26": [13, 54, 56, 59, 65, 68, 70, 82, 133, 135, 140, 146, 150, 155, 160, 161, 171, 172, 189, 193, 199, 201], "260": [133, 171], "2604": [178, 182, 185], "260417": 178, "2606": 182, "2609": 177, "261": [133, 171], "2617": 182, "261842": 194, "262": [171, 180], "262680": 17, "2627": 177, "263": 171, "2633": 182, "2635": 182, "263600": 16, "2637": 182, "2638": 177, "264": 171, "2641": [179, 181, 184, 185], "26421880": 177, "264672": 18, "265": 171, "265008": 13, "2652958": 140, "26568259e": 203, "26571389e": 203, "266": 171, "2660": 182, "2664": 177, "2669": 177, "267": 171, "2671131": 174, "2671256": 174, "268": 171, "2686": 177, "2688": 177, "269": 171, "2694": 182, "2697": 182, "269809": 177, "26t12": 140, "27": [13, 38, 42, 49, 50, 51, 59, 65, 67, 70, 79, 81, 96, 97, 133, 144, 146, 150, 155, 156, 160, 161, 171, 172, 174, 177, 178, 180, 199], "270": 171, "2706": 177, "2707": 182, "271": 171, "2711": 176, "2713": 177, "2714": 183, "271429": 171, "272": 171, "27216990e": 203, "272699": 201, "272727": 171, "273": [40, 171], "2738": 182, "274": 171, "2741": 177, "2748": 176, "275": [171, 198], "27500": 160, "2751": 182, "2752603": 183, "2753": 177, "2754": 182, "27541": 183, "275510": 171, "275862": 183, "276": 171, "2761": 12, "2766": 182, "276716": [12, 14], "27672348": 154, "277": [135, 171], "277027": [12, 14], "2771": 182, "2772": 182, "2773": 182, "27764243": 154, "2779": 177, "278": 171, "2780": 181, "2782": 182, "278711": 18, "27891384e": 203, "279": [131, 171], "2793": 182, "2795": [174, 182], "27j": 93, "27w": 174, "28": [13, 16, 33, 40, 49, 50, 51, 59, 61, 67, 73, 82, 103, 140, 145, 150, 155, 171, 172, 177, 178, 180, 181, 201], "280": [131, 136, 146, 171, 178], "2801": 146, "2804": 182, "2805": 183, "280702": 171, "2809": [177, 182], "280w": 174, "281": [131, 171, 180], "281250": 171, "28128674924373626": 183, "281287": 183, "2813": 183, "2815": 176, "2817": 198, "2818": 198, "2819": 198, "282": [131, 171], "2820": 198, "2821": 198, "2822": 189, "2824": [176, 177, 178], "28254475e": 203, "282662": [12, 14], "283": [131, 171], "2833": [177, 199, 201], "28366219": 156, "284": [12, 14, 171], "2840": [177, 182], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 97, "2842": [176, 177], "2848": 182, "285": [122, 171], "2852": 185, "286": 171, "2863": 177, "28675168e": 203, "2869": 183, "287": [133, 171], "287372": [12, 14], "2874848": 183, "288": [133, 171, 180, 181, 183], "2881": 176, "2883": 178, "28883356e": 203, "289": [133, 171], "2890": 176, "289000": 150, "2891": 182, "289474": 194, "28th": 133, "28x19": [17, 19], "28x20": [17, 19], "28x21": [17, 19], "28x22": [17, 19], "28x23": [17, 19], "28x24": [17, 19], "28x25": [17, 19], "28x26": [17, 19], "28x27": [17, 19], "28x28": [6, 8, 10, 17, 18, 19, 20, 177], "29": [13, 16, 20, 40, 49, 50, 67, 70, 122, 155, 156, 171, 172, 178, 181, 182, 183, 192, 193, 198, 200, 205], "290": [133, 171, 180], "2902": 177, "290549": [12, 14], "2906": 176, "291": [133, 171], "291667": 171, "2917": 177, "2918": 176, "291853": 15, "292": 171, "2920": 177, "2920e": 177, "29235": 13, "292969": 178, "293": 171, "2930": [178, 185], "293987": 13, "294": 171, "29402596": 157, "2941": 177, "29431485e": 203, "2946014910624595": 82, "294804": [12, 14], "294850": 14, "295": 171, "29515": 177, "29534113": 157, "295455": 171, "29560668e": 203, "295817": 12, "296": 171, "2969": 182, "297": 171, "2972": 181, "2973": [179, 181, 184, 185], "298": 171, "2981": 177, "298226": 12, "299": 171, "2992": 182, "29995": 172, "29ajdjehni": 143, "2a721b8800df": 136, "2ac45d11f3db": 136, "2b7b22686f73744e616d65223a22544954414e2d525458227d": 174, "2d": [16, 150, 151, 153, 154, 160, 176, 177, 182, 197, 206], "2d7f5e": 201, "2darrai": [164, 167], "2f": [12, 13, 14, 54, 96, 105, 150, 176, 177, 201, 204], "2f7f4e5fdb49": 68, "2j": [33, 53, 93, 94], "2k": 177, "2m": 135, "2min": 181, "2n": 33, "2nd": [39, 54, 55, 56, 77, 78, 80, 122, 143, 146, 174], "2p": 29, "2x": [150, 182, 183], "2x2": [154, 205], "3": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 63, 67, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 121, 122, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 175, 176, 178, 179, 180, 181, 184, 185, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 214], "30": [15, 18, 20, 21, 30, 31, 38, 39, 40, 46, 49, 50, 51, 54, 55, 59, 61, 62, 63, 65, 67, 73, 76, 77, 78, 79, 82, 94, 97, 98, 103, 122, 133, 136, 144, 150, 155, 160, 171, 174, 175, 176, 177, 180, 182, 183, 191, 194, 196, 198, 199, 202], "300": [19, 40, 55, 92, 93, 122, 133, 135, 141, 143, 147, 150, 171, 175, 176, 182, 192], "3000": [18, 19, 74, 122, 135, 136, 175, 176], "300000": [151, 189], "3000000000000003": 53, "300000e": 96, "3008": 182, "301": 171, "301184": [12, 14], "30119580e": 203, "3013": 177, "3015": 177, "302": 171, "3020": 177, "302078": 12, "3024": 178, "3025": 175, "303": [171, 183], "3031": 177, "30378713e": 203, "3038": 183, "303m": 182, "304": 171, "3047": 178, "305": 171, "305880": 16, "306": 171, "3061": 174, "306264": 201, "30668723": 154, "307": [171, 182], "3070": 176, "3072": 182, "3076": 177, "307m": 182, "308": 171, "3083": 177, "308492": 16, "3087": 182, "309": [171, 183], "30911403e": 203, "3092": 181, "30920635": 154, "30c": 174, "30fp": 183, "31": [33, 40, 49, 50, 61, 62, 63, 67, 82, 150, 171, 172, 177, 178, 180, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "310": [167, 171], "31002414e": 203, "3100563": 183, "3102": 174, "310634": 16, "3106e": 176, "3107": 176, "311": [14, 167, 171], "311099": 17, "3112": 182, "3114": 182, "312": [133, 167, 171], "3125": 176, "312500": 171, "31287314e": 203, "31288138031959534": 175, "3129": 183, "313": [133, 167, 171, 177], "313125": 15, "3137": 177, "313707": [12, 14], "31390556e": 203, "314": [12, 14, 76, 133, 167, 171], "3140": [175, 176], "3141": 182, "3142": 176, "3143": 14, "3145": 182, "3149": 182, "315": [133, 171], "315317": 12, "31576734e": 203, "3159": 182, "315964": [12, 14], "316": [12, 14, 133, 171], "3169": 176, "317": 171, "31701798e": 203, "31708111e": 203, "318": [131, 171], "3187": 181, "318750": 160, "319": [131, 171], "3191": 177, "31dc": 136, "31m10": 177, "31m54": 177, "31x31": 177, "32": [16, 33, 34, 36, 40, 49, 51, 55, 59, 63, 121, 122, 131, 133, 135, 136, 144, 146, 148, 156, 160, 171, 174, 177, 178, 179, 180, 181, 182, 183, 185, 189, 201, 205], "320": [131, 171, 180], "3208": 182, "320879": 14, "3209": 182, "321": [131, 171], "3210": 176, "321004": 201, "32105794e": 203, "3212": [177, 182], "3216": 177, "322": [131, 171], "322715": [12, 14], "323": 171, "3230": 174, "32354": 177, "324": 171, "324129": 201, "3242": 177, "3246": 176, "3248": 177, "325": 171, "325394": 12, "326": 171, "3261": 182, "3263": 182, "326574": [12, 14], "3268": 183, "327": [171, 182, 183], "3275": 182, "3277": 178, "3278": 182, "328": 171, "3280": [175, 176], "3285697102546692": 177, "32857": 177, "328570": 177, "329": 171, "3295": [184, 185], "3298": 182, "329871": 12, "32k": 135, "32m1": 177, "32m519": 177, "33": [14, 16, 31, 33, 49, 61, 68, 79, 95, 96, 103, 105, 121, 122, 131, 150, 157, 171, 172, 174, 181, 183], "330": [51, 171], "3301": 182, "3307": 182, "3308": 181, "33094796e": 203, "331": 171, "33114510e": 203, "331191": 64, "33142653": 154, "332": 171, "33205527e": 203, "3323": 182, "333": [54, 61, 97, 171], "3333": [184, 185], "333333": 172, "33333333": [53, 156, 157], "333333333333333": 97, "333333333333333481363069950020872056484222412109375": 82, "3333333333333335": 82, "334": 171, "3345": 182, "334694": 18, "3349": 181, "335": 171, "3350": 176, "33516842e": 203, "3352": 178, "3353": 182, "336": 171, "33662976e": 203, "3367": [175, 177], "337": 171, "3371": [178, 184, 185], "3372": 182, "3374": 182, "33768743e": 203, "3377": [176, 177, 182], "3378": 178, "338": 171, "3380": 176, "3383": 181, "33856867e": 203, "338695217273813": 157, "339": 171, "3393": 177, "3399": 177, "33it": 185, "34": [41, 50, 61, 68, 82, 97, 103, 121, 155, 157, 171, 172, 174, 177, 182, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "340": [49, 50, 171], "3400": [179, 181, 184, 185], "3401": 174, "3407": 177, "340730": 13, "3409": 177, "340909": 171, "341": 171, "3410": 182, "3412": 178, "3417": 176, "342": 171, "3420": 175, "34238": 61, "342380": 61, "3428": 182, "343": [50, 171], "343280": 12, "343750": 171, "3438": 182, "344": [14, 171], "344095": [12, 14], "34422627": 121, "34425779": 122, "34435993e": 203, "3448": [176, 182], "345": 171, "345081": 16, "3451": 177, "3452": 180, "3454": 181, "3456": 41, "345673": 41, "3456789": 54, "3457": [54, 183], "3458": 182, "346": 171, "3463551998138428": 175, "3464": 182, "347": [63, 171], "348": [63, 171], "3483": 181, "3486": [177, 182], "3487": 180, "348722": 177, "349": [63, 171, 177], "3492": 180, "3493": 177, "349540": 15, "3496": 182, "35": [9, 34, 41, 49, 51, 54, 55, 64, 67, 94, 121, 150, 155, 171, 172, 178, 180, 189, 198, 199, 200, 201], "350": [20, 63, 122, 171, 180], "350000": [151, 189], "351": [63, 171], "3512": 183, "3513": 175, "352": 171, "35266299": 154, "352682": 12, "353": 171, "3535e": 176, "3539": 176, "354": 171, "3547": 183, "354839": 171, "35488217e": 203, "3549": 176, "355": 171, "3551": 181, "355280": [12, 14], "356": [41, 171], "3560": 175, "356651": [12, 14], "3567": 182, "3568": 181, "357": 171, "3570": 182, "35713": 177, "357143": 171, "357150": 14, "3572": 182, "35731444e": 203, "357765": 12, "358": 171, "3581": 182, "3582": 177, "359": 171, "3594": 182, "35994688e": 203, "35c": 174, "35it": 185, "36": [37, 49, 50, 51, 54, 59, 76, 96, 121, 122, 133, 150, 171, 177, 189, 192], "360": 171, "36000": 172, "3606": 182, "3608": 177, "360856": 199, "3609": 177, "361": [67, 171], "3610895313": 133, "361467": 12, "36149": 177, "362": [67, 171], "3620": 181, "362012": [12, 14], "3622237": 183, "3624": 177, "362880": 30, "363": 171, "363636": 171, "364": 171, "3649": 174, "36492380e": 203, "365": [54, 171], "366": [62, 63, 67, 171], "3662": 177, "3664": 182, "36699927e": 203, "367": 171, "367007": [12, 14], "3673": 177, "3677": 182, "36782780e": 203, "368": 171, "3681b3969e27": 74, "36880": 172, "369": 171, "36938945e": 203, "3694": 177, "36m0": 177, "37": [16, 40, 49, 50, 146, 160, 161, 171, 172, 176, 180, 205], "370": 171, "3700": [175, 182], "3702": 182, "37028": 172, "370370": 171, "3705": 181, "371": 171, "3711": 181, "3712": 185, "37144872e": 203, "3715": 176, "37181743e": 203, "372": 171, "3723": 176, "3726": 182, "3727": [177, 182], "373": [171, 180], "3733": 177, "3736": [177, 182], "3738": 178, "37380679e": 203, "374": 171, "3741": 182, "3742": 182, "3743": 174, "3745": [177, 181], "3749": 183, "375": [70, 171], "375000": [16, 171], "3752": 177, "3757": [176, 183], "3759": 177, "376": 171, "37644": 194, "377": [12, 14, 50, 133, 171], "3770514": 183, "3776": 182, "37796264e": 203, "378": [133, 171], "3781": 182, "378594": 177, "37859424920129": 177, "3787": 182, "379": [133, 171], "379273": 12, "379510": [12, 14], "38": [16, 65, 150, 171, 176, 177, 178, 194, 199, 201, 203, 205], "380": [133, 171, 182], "3801": 176, "381": [133, 171], "382": [133, 171], "3820": 182, "38209653": 154, "38223": 194, "38224839e": 203, "382612": [12, 14], "382817": [12, 14], "3829": [174, 183], "383": [133, 171], "38336447": 157, "3835": 177, "38385823e": 203, "384": [133, 171, 178], "3840": 175, "38400": 177, "3841": 177, "384232": 16, "38429280e": 203, "3843": 177, "384398": 12, "384399": [12, 14], "384403": [12, 14], "3849": 177, "385": [136, 171], "385399": [12, 14], "38568225e": 203, "38575866e": 203, "385965": 171, "385970": [12, 14], "386": 171, "3860": 176, "3862": 181, "3864": 174, "3867": [184, 185], "387": 171, "3870": 177, "387097": 171, "38787858e": 203, "388": 171, "3882": 177, "3889": 181, "389": [133, 171], "3890561": 156, "389559": 14, "3897": 183, "39": [49, 54, 61, 68, 141, 150, 171, 178, 189, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "390": [133, 171], "3904": 174, "3906": [181, 182], "3909": 181, "391": [122, 133, 171, 180, 181], "39119225e": 203, "3913": 182, "3915": 183, "39169378e": 203, "392": [133, 171], "392857": 171, "393": [133, 171], "393174": 12, "3934": 182, "393413": 201, "3937": 176, "39373073": 176, "393731": 176, "3938": 177, "394": 171, "3945": [179, 181, 184, 185], "3946": 176, "39461": 183, "395": 171, "39594634e": 203, "396": 171, "3961": 178, "397": 171, "3970": 122, "39764517e": 203, "39771": 177, "398": 171, "3980": [175, 182], "39801": 41, "398040": 16, "3982": [175, 182], "3984": [180, 181, 182], "3984375": 181, "39878883": 154, "399": [55, 171], "39957927e": 203, "3bfaa309574d": 58, "3blue1brown": [8, 175], "3d": [9, 12, 26, 155, 174, 177], "3da34cc7641": 54, "3e": 182, "3e859d37287a": 90, "3ec8c6652eef": 80, "3f": [54, 96, 177, 178, 180, 184, 185], "3j": [26, 53, 93, 94, 104], "3m": [121, 122, 131, 144, 182], "3mabout": 122, "3mbelow": 144, "3misl": 121, "3mlook": 122, "3mnull": 131, "3mselect": 122, "3msystem": 148, "3mthere": 122, "3muse": 133, "3mwrite": [121, 133, 148], "3myour": 133, "3n": 33, "3pm": 131, "3rd": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 55, 78, 80, 146, 148, 153, 193], "3x2": 174, "4": [4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 89, 90, 91, 92, 94, 95, 96, 97, 100, 104, 105, 108, 113, 121, 122, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 163, 165, 167, 169, 171, 175, 176, 177, 178, 179, 180, 181, 184, 185, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214], "40": [13, 16, 30, 31, 49, 51, 59, 68, 73, 79, 94, 96, 97, 122, 133, 142, 146, 150, 155, 162, 171, 174, 175, 176, 178, 180, 185, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "400": [0, 8, 122, 133, 136, 140, 141, 147, 171, 175, 176, 177, 194], "4000": [146, 151, 177, 178], "400000": [151, 172, 189], "40015831": 154, "400770": [12, 14], "4008": 182, "4009": 182, "401": 171, "4012e": 177, "402": 171, "4023": 182, "4027": 176, "403": [12, 171], "4032": 178, "4033": 182, "403509": 171, "403846": 171, "4039": 178, "404": 171, "404206": 15, "404240": 16, "4044": 182, "4049": 175, "405": 171, "4054": 177, "405706": [12, 14], "406": [171, 180, 181, 182, 183], "40603744": 157, "4061": 176, "40636423e": 203, "4064": 177, "406469": 9, "407": 171, "4071": 174, "4078": 178, "408": 171, "408520": 9, "408781": 12, "409": [171, 180, 198], "40904134e": 203, "409091": 171, "4092": 177, "4094": 177, "4096": 182, "40960": 172, "4097": 133, "40it": 185, "41": [34, 49, 50, 67, 68, 141, 150, 171, 172, 176, 177, 178, 180, 183, 203], "410": [171, 198], "4102": 185, "410458": [12, 14], "41083552e": 203, "411": [171, 198], "411377": 16, "4114": 177, "4115": 182, "4116": 175, "412": [171, 198], "4120": [175, 182], "41276190e": 203, "4128131430": 131, "4129": 182, "41292267e": 203, "413": [171, 198], "41315": 172, "4131591": 156, "4133": [184, 185], "4134": 176, "414": 171, "41405704e": 203, "41406033e": 203, "414062": 178, "4141": [178, 185], "41421356": 156, "414368": 203, "4147": 176, "415": 171, "4151": 164, "4152": 164, "4153": 164, "4154": [164, 176], "4155": 164, "4157": 177, "416": 171, "41614684": 156, "416667": 171, "417": 171, "4175e": 177, "4178": 182, "418": 171, "4184": 175, "4186": 164, "4187": 164, "4188": [164, 182], "4189": 164, "419": 171, "4190": 164, "4196": [177, 178], "419745": 14, "42": [49, 51, 61, 68, 105, 135, 157, 171, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 195], "420": 171, "421": [131, 171], "422": [12, 131, 171], "4224": 174, "4227": 181, "4228": 177, "4229": 182, "423": [131, 171], "4235": 178, "423522": 13, "423851": 16, "424": [131, 171], "4242": 181, "4245": 183, "42477796076938": 82, "42499377e": 203, "425": [131, 171], "4251": 175, "42530": 200, "42538101e": 203, "4256": 177, "425781": 178, "4258": [178, 182], "426": 171, "4260": 175, "42612988": 157, "426227": [12, 14], "42651757188499": 177, "426518": 177, "427": 171, "4271": 177, "4272": 182, "427426": [12, 14], "4275": 177, "4277": 177, "4279": 176, "428": 171, "428571": 171, "42857143": 156, "4286f4": 150, "428939": [12, 14], "429": 171, "4290": 183, "43": [18, 20, 34, 49, 50, 68, 146, 156, 171, 176, 177, 178, 183], "430": 171, "430182": [12, 14], "4306": 164, "4307": 164, "4308": 164, "4309": 164, "430905": 14, "431": 171, "4310": 164, "4312": 176, "4318": 175, "43186c7d3555": 90, "4319": 177, "43196619e": 203, "432": 171, "433": 171, "4330": 177, "4332": 176, "433627": 12, "434": 171, "4340020aef34": 104, "4344": 181, "43469003": 157, "435": 171, "4353": 178, "4355": 183, "435540": [12, 14], "43563027": 154, "435633": 61, "435866": 189, "436": 171, "4364": 177, "4366": 182, "4368": 182, "437": [133, 171], "4372": 177, "437500": 171, "4378": 182, "438": [133, 171], "4381": 183, "4386": 175, "4388": [177, 183], "439": [133, 171], "439305": 16, "43e7": 136, "44": [31, 67, 68, 171, 177, 178, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "440": [133, 171], "4400": [184, 185], "4404": 181, "441": [133, 171], "4411": 177, "44120621e": 203, "4414": 177, "4417": 177, "442": [131, 171], "4422": 176, "44220765": 176, "442208": 176, "4422102": 177, "44225798": 154, "442308": [160, 171], "4428": [174, 182], "443": [131, 171, 183], "443572": [12, 14], "443705": 16, "4439": 167, "444": [131, 171], "4440": 167, "4441": [167, 176], "4442": 167, "4443": 167, "444444": 171, "44444444": 157, "445": [131, 171], "4451": 177, "4453": 175, "4455": 177, "4458": 181, "446": [131, 171], "4462": 181, "44666284e": 203, "4469": 174, "447": [131, 171], "4474": 183, "44794755e": 203, "448": [131, 171, 180], "4482": 182, "449": [131, 171, 178], "4492": 182, "4493": 177, "449489742783178": 82, "4496": 198, "4497": 198, "4498": 198, "4499": 198, "45": [15, 16, 49, 50, 51, 68, 82, 91, 99, 122, 148, 150, 168, 171, 174, 176, 178, 189, 198, 205], "450": [131, 171, 174, 178, 183], "4500": [17, 198], "45000": 160, "451": [131, 171, 178], "4510": 177, "45103300e": 203, "4515": 182, "452": [171, 178], "4520": 175, "4522": 182, "453": [171, 178], "4533": [184, 185], "4535": 182, "45359369": 154, "454": [171, 178], "4540": 182, "45400": 172, "45409876e": 203, "454545": 171, "45468093e": 203, "455": 171, "45503": 177, "455357": 171, "4555": 181, "4559": 176, "456": [54, 95, 171, 178, 180, 181, 182, 183], "456140": 171, "4566": 174, "4569": 177, "457": [171, 178], "4570": 182, "4575": 181, "458": 171, "4583": 199, "458333": 171, "4584": 182, "458614": 15, "4588": [175, 177], "459": 171, "4592": 182, "45d582f31548": 104, "46": [16, 42, 68, 76, 122, 150, 171, 172, 174, 176, 178, 181, 198, 205], "460": [171, 174], "4601": 177, "46063092e": 203, "46075265e": 203, "4609": 177, "461": [171, 185], "4618": 175, "462": 171, "462272": [12, 14], "463": 171, "4631": 182, "4637": 136, "464": 171, "4640": 181, "4641": 157, "4644": 182, "4647": 177, "465": 171, "4651": 176, "4653": 183, "4654131651654516546": 121, "465640": 16, "465794806718": 53, "4658": 182, "466": 171, "466366": 14, "4666666666666668": 191, "4667": [177, 178, 184], "466b90e7ef2f": 94, "467": 171, "4678": 181, "468": 171, "468750": 171, "4688": 174, "469": [12, 14, 171], "4691": 175, "469388": 171, "4694": 182, "46be": 136, "47": [49, 50, 61, 68, 171, 172, 176, 178, 183, 189, 198], "470": 171, "47016730e": 203, "4702": 181, "470490": [12, 14], "470689": 14, "471": [136, 171], "4714": 174, "4717": 182, "472": 171, "4722": 182, "4726e": 176, "473": 171, "473137c03db7": 90, "4732": 182, "47320909e": 203, "474": 171, "4740": 176, "474232": 18, "4744512": 177, "4745": 177, "475": 171, "475540": [12, 14], "476": 171, "476004": 16, "47633": 177, "4764": 175, "47663894295692444": 177, "476639": 177, "47664": 177, "477": 171, "4770": 177, "4771": 182, "477273": 171, "477699": [12, 14], "4777": [169, 174], "4778": 169, "4779": 169, "477962": 16, "477f": 136, "478": 171, "4780": 169, "4781": [169, 182], "478125": 201, "478162": [12, 14], "4784": 177, "4785": 182, "4787": 182, "479": 171, "479139": 12, "479204": [12, 14], "4794": 181, "4795": 176, "479556": [12, 14], "479646": 176, "47989": 177, "4799": 177, "47e4": 136, "48": [33, 49, 51, 61, 68, 97, 105, 122, 161, 163, 170, 171, 172, 174, 176, 178, 183, 198], "480": 171, "48013283e": 203, "48048431": 154, "480633": [12, 14], "4807": [174, 177], "481": 171, "48106518387794495": 175, "48122198e": 203, "481349": [12, 14], "4814": 177, "482": 171, "482383": [12, 14], "4824": 177, "4825": 182, "483": 171, "4830": 177, "4836": 175, "48383283e": 203, "484": 171, "4840": 182, "4844": 183, "484415": [12, 14], "4846": 177, "485": [171, 180, 181, 182, 183], "4854": 176, "4858414": 141, "486": 171, "4863": 178, "4868": 182, "487": [131, 171], "4873": 177, "48755100e": 203, "4876": 177, "488": [131, 171], "488215": 14, "488412": 12, "4886": 181, "489": [131, 171], "4895": 37, "489796": 160, "48df7f551452": 136, "49": [49, 50, 51, 57, 59, 67, 68, 82, 136, 171, 172, 176, 178], "490": [131, 171, 177], "490625": 194, "4908": 181, "4909": [175, 183], "490946": 12, "491": [131, 171], "491228": 171, "4915": 182, "4917": 177, "491723": 17, "4919": 174, "492": [171, 180], "4920": 182, "492727": 12, "492754": 171, "4928": 182, "49291": 194, "493": [14, 171], "4930": [181, 182], "49332966e": 203, "4937": 183, "494": [12, 14, 171], "494387": [12, 14], "495": [135, 171, 174], "4950701": 177, "4951": 177, "49521424": 157, "49529338e": 203, "49574452": 157, "4958": [174, 182], "49587": 194, "496": 171, "4961": 181, "496714": 160, "49690158e": 203, "497": [131, 171], "4970": 182, "4972": 182, "49769501e": 203, "4977199": 141, "49798680e": 203, "498": [131, 171], "4980": 177, "4982": 175, "4982726": 141, "49890664e": 203, "499": [131, 171, 174], "4999": 20, "49e421f2057c": 95, "4a9f159cd120": 54, "4b26ab49e29c": 36, "4c10": 136, "4c669126467b": 54, "4c6e": 136, "4d": 177, "4d4a0e714c73": 90, "4ed3868a9a2": 55, "4f": [15, 16, 17, 18, 19, 20, 54, 178, 179, 181, 184, 185], "4fd1": 136, "4k": [144, 146], "4m": 150, "4n": 30, "4oz": 121, "4th": [55, 56], "4x": 183, "5": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 100, 104, 105, 106, 108, 113, 121, 122, 125, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214], "50": [11, 41, 45, 49, 50, 51, 53, 54, 57, 59, 65, 68, 70, 77, 82, 99, 121, 133, 137, 148, 150, 156, 157, 160, 162, 163, 171, 172, 174, 175, 176, 178, 181, 189, 193, 194, 196, 198, 199, 200, 201, 203, 205], "500": [12, 13, 14, 131, 133, 135, 137, 162, 171, 175, 176, 203], "5000": [10, 18, 20, 74, 122, 136, 203], "50000": [13, 150], "500000": [151, 160, 171, 172, 189], "500005": [12, 14], "5003": 177, "5006": 183, "501": [131, 171], "5012": 177, "502": 171, "502190": 16, "502418": 13, "503": 171, "5032": 182, "503945": [12, 14], "504": [12, 14, 171], "505": 171, "5050": [76, 183], "5054": 175, "50547116e": 203, "506": 171, "50628105e": 203, "5069": 182, "507": 171, "507192": 18, "5078": 176, "508": 171, "5081": 182, "5085": 182, "50882884": 122, "509": 171, "5095": 181, "50954": 177, "5098": [177, 178], "50b154750974": 90, "50th": 160, "51": [13, 68, 122, 150, 171, 172, 176, 199], "510": 171, "5100": 177, "510042": [12, 14], "51026454": 154, "511": 171, "5111": 185, "5113": 182, "5114": 177, "5116": 183, "512": [50, 55, 59, 81, 171, 176, 177, 178], "5120": 182, "51200": 177, "5127": 175, "512x512": 178, "513": 171, "5132": 177, "513250": 16, "513433": 203, "513890": 16, "514": 171, "51479": 13, "5148": 177, "515": [171, 174], "5157": 174, "5158": 182, "515941f58fe7": 78, "516": 171, "51601397e": 203, "516129": 171, "5166": 177, "51681": 194, "516912": [12, 14], "517": 171, "5176": 181, "51782e52f201": 73, "517857": 171, "518": 171, "518519": 171, "5188": 182, "519": [97, 171, 177], "5197": 177, "5199": 177, "52": [33, 68, 137, 150, 160, 161, 171, 172, 176, 178], "520": 171, "5200": [175, 184], "5202": 181, "52037": 13, "52063": 194, "521": 171, "522": [12, 14, 171], "5220": 174, "523": 171, "5239": 183, "524": 171, "524770": 16, "525": [14, 171], "5255": 177, "5257e": 176, "52580": 194, "526": 171, "526373": 205, "527": [12, 171], "5272": 175, "527393": 61, "527542": [12, 14], "5276": 182, "528": 171, "5283": 182, "5285": 174, "529": 171, "529412": 171, "5299914": 140, "53": [49, 50, 57, 62, 63, 66, 68, 171, 172, 176, 189, 198, 199, 201], "530": 171, "53037048e": 203, "530624": 14, "5308": 182, "5309": 176, "531": 171, "531250": 171, "5313": 177, "531874": 13, "532": 171, "5326": 177, "533": 171, "5333": [177, 178], "5334": 182, "53341062e": 203, "533524": [12, 14], "53360752e": 203, "534": 171, "5347": 182, "5348": 172, "5349": 182, "535": 171, "535714": 171, "53590397e": 203, "536": 171, "536747": 12, "536997": 16, "537": [12, 14, 171], "53783010e": 203, "538": 171, "5384": 177, "5387": 183, "5388": 176, "539": 171, "53901780e": 203, "53909609": 154, "5394": 182, "5396": 177, "5397727272727273": 181, "5398": [180, 181], "5398e": 176, "5399": 177, "53mib": 174, "54": [49, 50, 51, 61, 68, 81, 92, 103, 133, 150, 156, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 176, 183, 199], "540": 171, "540222": 17, "540247": [12, 14], "54030231": 156, "5404": 177, "5406e": 177, "5409": 177, "541": 171, "5412": 178, "54143": 176, "5416": 182, "541667": 171, "5417": 182, "5418903291546293": 197, "542": 171, "5425": [181, 200], "542734": 203, "54275813": 154, "543": 171, "5432": 182, "54321": 49, "5435": 181, "5439": 176, "544": 171, "545": 171, "54507446": 174, "54510477e": 203, "5455131": 200, "5458": 176, "546": 171, "546523": 15, "5467": 185, "54682": 200, "547": 171, "547083": 203, "547509": 12, "54777888": 154, "5478": 182, "548": [171, 180, 181], "5480": 182, "548052": 16, "54808": 200, "548195": [12, 14], "5483": 174, "5485": 182, "5486": 177, "5489": 177, "549": 171, "54902750e": 203, "5493": 174, "5494": [182, 183], "55": [49, 50, 61, 68, 76, 82, 133, 157, 162, 164, 167, 171, 176, 178, 197, 205], "550": [140, 141, 171], "551": 171, "551020": 171, "55109787e": 203, "551122": [12, 14], "5513833499989991": 197, "551695": 122, "551792": 13, "552": 171, "5521": 181, "5523": 182, "55283762": 154, "5529": [177, 178], "553": 171, "5531": 176, "553519": 201, "55360672": 154, "55382448e": 203, "554": 171, "555": [50, 54, 99, 171], "5550161930871431": 157, "5551779866218567": 175, "55555556": 157, "5557": 182, "5558": 177, "555816": 201, "556": 171, "5566": 181, "557": 171, "5570": 182, "5573": 181, "558": 171, "5581": 182, "5589": [164, 177], "559": 171, "5590": 164, "5591": 164, "5592": 164, "5593": 164, "5595": 177, "55965906e": 203, "5599": [176, 177], "56": [26, 30, 48, 49, 51, 61, 65, 68, 82, 133, 146, 160, 161, 163, 170, 171, 172, 176, 180, 183, 205], "560": [171, 180], "5604": 183, "5606": 182, "56077258e": 203, "5608": 178, "561": 171, "5610": 177, "5611": 181, "561772": [12, 14], "562": 171, "5622": 181, "562500": 171, "563": 171, "5630": 177, "56348096e": 203, "564": 171, "5644": 185, "5645": 182, "5646e": 177, "5647": [177, 178], "5649": 183, "564980": [12, 14], "565": 171, "56580759e": 203, "566": [63, 171], "56650192e": 203, "567": [63, 171, 182], "56705": 13, "5671": 182, "5676": 181, "5678": 182, "5679": 181, "568": [63, 171], "5686": [177, 178], "569": [63, 171], "5692": 182, "5696": 176, "5698": 200, "57": [14, 34, 66, 68, 133, 150, 160, 161, 171, 172, 183], "570": [63, 135, 171], "57057605": 157, "5706": [179, 181, 184, 185], "571": [171, 182], "571429": 171, "572": [171, 180], "5720": 182, "572094": 14, "5721": 182, "5722": 182, "5724": 182, "5725": [177, 178], "5728": 181, "57292499e": 203, "573": 171, "57330710e": 203, "57367853e": 203, "5739": 182, "5739762187004089": 175, "574": 171, "5745": 174, "575": 171, "5750": 182, "5753": 182, "5755": 183, "5757": 182, "576": 171, "5764": 182, "5765": 178, "5767": 177, "576700": 9, "5768": 182, "577": 171, "5778": 185, "578": [122, 171], "5783": 182, "5784": 175, "5785": 182, "57861": 176, "579": [95, 171], "5790": 182, "5793": 182, "57953b0b580c": 40, "5796": 182, "5798": 181, "5799": 176, "58": [12, 61, 62, 67, 68, 131, 133, 150, 160, 161, 171, 172, 176, 181, 205], "580": 171, "5804": 178, "5808771025513102": 197, "58099293e": 203, "581": 171, "5810": 183, "5816": 182, "581728": [12, 14], "582": [122, 171], "5822": 184, "5823": 182, "5824": 182, "5826": 182, "5828025": 67, "583": 171, "584": 171, "5843": [178, 182], "5844": 176, "5845": 182, "5847": 182, "5849": 182, "585": 171, "5850": 182, "5853": 182, "585384": [12, 14], "5854679515581645": 53, "58556641e": 203, "586": 171, "5866": 177, "58662330e": 203, "5867": 184, "5868": 182, "5869": 183, "587": [171, 180], "5870": [181, 182], "5876": [182, 183], "5877": 182, "58776": 13, "588": 171, "5880": 182, "5882": [177, 178], "588235": 171, "5885": 176, "588767": 12, "5888": 182, "58883361": 157, "58899709e": 203, "589": 171, "58900": 172, "5897": [181, 182], "58it": 177, "59": [12, 19, 61, 62, 63, 65, 67, 68, 133, 160, 161, 171, 172, 176, 178, 182, 193, 196, 198, 199, 200, 201, 205], "590": 171, "5900": 182, "59039": 177, "59068226": 157, "591": 171, "5918": 176, "592": 171, "5920": 177, "5924": 177, "592799": 183, "593": 171, "59302": 177, "5932": 177, "5935": 183, "5936": 174, "59362951e": 203, "59371929e": 203, "594": 171, "594445": [12, 14], "5949": [177, 181], "595": 171, "5951": 176, "596": 171, "5961": 178, "59621339e": 203, "597": 171, "5975": 176, "598": 171, "5980": 181, "59815003": 156, "599": 171, "5990": 176, "5997": 177, "5998": 176, "59b7b8cc9b5b": 104, "5_epoch": 181, "5aa728677edf": 82, "5b2db8c64782": 54, "5b50fb5d02c4": 79, "5c": [131, 133], "5e2": 93, "5f": [176, 177], "5f195de51d93": 106, "5k": [135, 146], "5m": 150, "5th": [54, 55], "5x": [133, 183], "6": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 30, 31, 33, 34, 36, 37, 38, 40, 42, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 108, 133, 136, 138, 141, 143, 144, 145, 147, 150, 153, 154, 155, 156, 157, 160, 161, 163, 167, 171, 174, 176, 177, 178, 180, 181, 182, 187, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214], "60": [13, 46, 49, 50, 51, 59, 79, 82, 96, 98, 133, 150, 160, 161, 162, 171, 172, 174, 175, 176, 177, 178, 185, 194, 195, 197], "600": [50, 97, 133, 140, 141, 171, 175, 176, 180], "6000": [17, 20, 151], "60000": [10, 17, 18, 19, 20, 103, 150, 177], "600000": 189, "60000000000001": 40, "6002": 174, "60059908": 157, "6009": 174, "601": 171, "6010": 176, "60124": 194, "60154": 194, "6016": 176, "601607": [12, 14], "602": 171, "6020": 176, "6022": 181, "603": 171, "60332219e": 203, "603704": 201, "6039": [177, 178], "604": 171, "605": 171, "605370": 189, "6055": 174, "6058": 177, "6059": 177, "606": 171, "60600": 183, "60631cbc73b0": 77, "60683359e": 203, "607": 171, "6078": 177, "60786967": 154, "608": 171, "60811794e": 203, "60818266e": 203, "609": [12, 171], "609060": 18, "60966": 13, "61": [57, 67, 133, 160, 161, 171, 172, 174, 177, 178, 193, 196, 198, 199, 200, 201, 205], "610": [50, 121, 171], "610574": [12, 14], "611": [14, 171], "6111": 181, "611101": [12, 14], "611172": 201, "6117": 176, "6118": 177, "612": 171, "6127": 181, "612924": [12, 14], "613": 171, "614": 171, "614062": [12, 14], "614349": 13, "61440440e": 203, "614655": 16, "615": 171, "6150": 182, "61500": 172, "616": 171, "616463": [12, 14], "6167": 181, "61670566e": 203, "61675899e": 203, "6168": 174, "617": 171, "617722": 13, "6177e": 177, "61784629": 154, "617951": [12, 14], "618": [133, 171], "6186": 176, "619": [133, 171], "6194": 174, "6197751905438615": 82, "62": [76, 171, 172, 176, 177, 200], "620": [133, 171], "6200": 181, "620071": [12, 14], "6203": 181, "621": [133, 171], "621415": 201, "62145": 176, "622": [133, 171], "622030": [12, 14], "622167": 201, "6223": 177, "62242956e": 203, "6227": 181, "623": 171, "62311335e": 203, "6235": 177, "62362": 176, "624": 171, "625": 171, "62500": 160, "62503489e": 203, "6254": 180, "626": 171, "6260": 180, "626007": [12, 14], "62636": 194, "6267": 185, "627": 171, "627163": [12, 14], "6274509803921569": 194, "62792336e": 203, "628": 171, "6286": 174, "6289": 177, "629": 171, "629630": 171, "62996541e": 203, "62it": 136, "62x62": 177, "63": [49, 51, 72, 73, 76, 95, 96, 122, 171, 198, 205], "630": 171, "63033250e": 203, "6306": 177, "631": 171, "6311": 184, "6314": 177, "631579": 171, "63158859": 154, "6317": 183, "6319": 176, "632": 171, "63212579e": 203, "63238643": 157, "6325": 181, "632m": 182, "633": [79, 171], "6335": 177, "6338": 172, "633974": 14, "634": 171, "6345": 177, "63465586e": 203, "635": [14, 171], "635423": [12, 14], "635457": 17, "635574": 16, "636": 171, "637": 171, "6372": 180, "6377": 172, "638": 171, "6380": 177, "6386": 177, "639": 171, "6392": [177, 178], "63it": 177, "64": [17, 18, 19, 20, 26, 49, 50, 51, 55, 59, 81, 156, 171, 174, 176, 177, 178, 179, 180, 184, 185, 205], "640": 171, "64000": 150, "64034418e": 203, "6404": 181, "641": 171, "64154651": 200, "642": 171, "643": 171, "6430": 182, "6431": 177, "6436": 177, "64387910e": 203, "644": 171, "6445": 181, "645": 171, "645161": 171, "6454": 177, "646": 171, "647": 171, "6471": 178, "64757": 176, "647689": 160, "648": 171, "6485e": 177, "6488": 172, "649": [171, 182], "6494": 176, "64x64": 178, "65": [45, 46, 47, 54, 95, 122, 161, 163, 170, 171, 176, 177, 178, 205], "650": 171, "65000": 150, "650667": 14, "651": 171, "6510": 177, "651253": 205, "65160": 176, "652": [14, 171], "65235094": 157, "653": 171, "65364362": 156, "6538": 174, "654": 171, "6541": [174, 177], "6542": 182, "6545": 181, "654593": 66, "6549": 177, "654x": 180, "655": 171, "65575249e": 203, "65596512e": 203, "656": [171, 182], "6562": 181, "65625": 181, "65628077": 154, "656404": 201, "657": 171, "6575": 172, "6579": 176, "658": 171, "6585": 183, "6588": 177, "659": 171, "65903086e": 203, "66": [48, 49, 54, 78, 96, 131, 171, 172, 178, 193, 196, 198, 199, 200, 201, 205], "660": 171, "66000": 150, "660125": 16, "6608": 174, "661": 171, "6610": 181, "6611852": 200, "6612": 177, "662": 171, "6627": 177, "663": 171, "66322": 176, "664": 171, "665": 171, "666": [57, 171], "666451": 9, "66659": 176, "66666667": 157, "6667": 177, "667": 171, "6673": 181, "667565": 201, "668": 171, "669": 171, "6698": 181, "6698453426361084": 181, "6699": 176, "67": [50, 54, 122, 131, 156, 171, 172, 176, 205], "670": 171, "67027": 177, "670396": 205, "6705": 174, "6706": [177, 178], "671": 171, "672": 171, "6722926497459412": 181, "6723": 181, "67285": 176, "673": 171, "6737": 177, "67391582": 122, "674": 171, "6745": [177, 178], "6746": 181, "6746167540550232": 181, "675": 171, "67515": 176, "67526014e": 203, "676": 171, "67631096e": 203, "676366": 9, "676435": 176, "6766": 183, "6768": 182, "6769": 181, "6769256368279457": 181, "677": 171, "67761063e": 203, "678": [133, 171], "6784": [177, 178], "6785": 172, "678571": 171, "679": [133, 171], "67941": 176, "67it": 177, "68": [131, 150, 164, 167, 171, 172, 174, 193, 196, 198, 199, 200, 201, 203, 205], "680": [133, 171], "680027": 14, "681": [133, 171], "68102": 176, "681159": 171, "682": [133, 171], "682091": 205, "6826": 174, "683": [171, 178], "6833": 17, "68334519e": 203, "683673": 171, "6839": 177, "684": 171, "68411": 176, "684211": 171, "684940": 16, "685": 171, "68500": 177, "6850008964538574": 177, "685001": 177, "6851": 181, "68517": 176, "6852": 176, "68572271": 157, "686": 171, "68602648": 154, "68603251e": 203, "6863": 177, "68671849e": 203, "687": 171, "68723": 176, "68744134": 154, "68747069e": 203, "68795": 176, "688": 171, "6881": [177, 181], "689": 171, "6891": 176, "68940": 176, "6894e": 176, "68977": 176, "69": [49, 131, 161, 171, 172, 205], "690": 171, "69001671e": 203, "6902": 177, "691": 171, "69102": 176, "69115": 176, "6918": 172, "692": 171, "692250": 16, "69258130e": 203, "69261": 176, "69272794e": 203, "69288277": 176, "692883": 176, "6928e": 177, "6929": 176, "69295": 176, "69298": 176, "69299": 176, "6929e": 176, "693": [171, 178], "69301": 176, "69302": 176, "69303": 176, "69305": 176, "69308": 176, "6931471805599453": 82, "69319": 176, "69343173": 154, "69349": 176, "693597": 14, "69361323e": 203, "69379": 176, "69396": 176, "694": 171, "6940": 177, "6941": 177, "69432": 176, "69437": 176, "69458": 176, "69465": 176, "69467": 176, "69468": 176, "695": 171, "69537": 176, "69543": 176, "69551": 176, "69563": 176, "69583": 176, "696": 171, "69623": 176, "69659": 176, "6968": 175, "697": 171, "69714": 176, "69736459e": 203, "69791535": 154, "698": 171, "6980": 177, "6984": 176, "698874": 16, "699": [131, 171], "69901020e": 203, "6992": 181, "69942": 176, "699560": 16, "6ab0f28c63a7": 74, "6ac8e81b6f0c": 72, "6f47904706aa": 156, "6f8260f6f5bb": 77, "6j": [53, 94, 104], "6k": 133, "6m": 150, "6p": 96, "6th": 54, "6x": 183, "7": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 34, 36, 40, 42, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 65, 67, 68, 72, 73, 76, 77, 78, 79, 81, 82, 91, 92, 93, 94, 95, 96, 97, 104, 105, 106, 108, 121, 122, 133, 135, 136, 137, 138, 143, 144, 147, 150, 154, 155, 156, 157, 160, 161, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 214], "70": [45, 47, 49, 51, 59, 79, 131, 133, 143, 148, 150, 161, 163, 168, 170, 171, 172, 174, 175, 176, 193, 194, 205], "700": [121, 131, 171, 175, 176, 204], "700557": 16, "7008": 174, "701": [131, 171], "7010": 177, "7011": 177, "70166723e": 203, "702": [131, 171], "7020": 177, "7023": 183, "70291": 176, "703": [131, 171], "703704": 171, "704": [131, 133, 171], "7043": 177, "7044": 176, "704545": 171, "705": [131, 171, 181, 183], "70542": 176, "7055": 177, "705882": 171, "7059": 177, "706": [131, 171], "706461": 14, "7064960040152073": 181, "7065": 181, "706585": 12, "707": 171, "707107": 160, "7076": 181, "708": 171, "70805473e": 203, "709": 171, "7091468499697177e": 191, "7097": 181, "70974533": 9, "7098": [177, 178], "7099": 177, "71": [122, 131, 171, 172, 177, 193, 199, 200, 201], "710": [171, 180], "7108": 180, "711": 171, "7113": 183, "712": 171, "713": 171, "7134": 177, "7137": [177, 178], "714": 171, "71400": 172, "714286": 172, "71432477e": 203, "715": 171, "7150": 181, "715070": 199, "716": 171, "71671100e": 203, "7168": 176, "717": [171, 180], "7173": 177, "7175": [181, 183], "71755233e": 203, "7176": 177, "718": 171, "71828": [82, 84], "718281828459045": 82, "71828183": 156, "71875": 181, "7188": 181, "719": 171, "7191": [177, 181], "7196": 182, "7197": 176, "72": [30, 49, 51, 76, 122, 131, 142, 160, 163, 171, 178, 183, 205], "720": [53, 80, 82, 171], "7200": 177, "7205": 177, "72090": 176, "721": 171, "7216": 178, "7219": 177, "72196": 176, "722": 171, "72223991e": 203, "72227": 177, "72247358e": 203, "7227": 182, "723": 171, "72352380e": 203, "724": 171, "724490": 171, "724638": 171, "725": 171, "7255": 177, "726": 171, "72638167e": 203, "727": [171, 182], "72708198e": 203, "727273": 171, "72765023e": 203, "728": 171, "7280": 177, "7283": 177, "72888392e": 203, "729": [50, 81, 171], "7294": 177, "72964213e": 203, "7298": 181, "73": [41, 131, 171, 177], "730": 171, "730464": 183, "730982": 13, "731": 171, "731755": 189, "7318": 177, "732": 171, "73205081": 156, "733": 171, "7333": 177, "73370838": 157, "734": [171, 182], "7342": 177, "734673": 205, "7347": 176, "735": 171, "73524094": 157, "7359b7dba965": 50, "736": 171, "7360": 182, "7367": 176, "737": 171, "73712819e": 203, "7373": 177, "738": 171, "739": 171, "74": [122, 171, 176], "740": 171, "7402e": 177, "7408": 183, "7409": 177, "74098031e": 203, "741": 171, "741152": 9, "7412": 177, "74149939e": 203, "741935": 171, "742": 171, "7426e": 176, "7427": 182, "743": 171, "74304829e": 203, "74307119e": 203, "74371246e": 203, "744": 171, "74400348e": 203, "744281": 205, "7444": 182, "744415": 12, "74486871e": 203, "745": 171, "74509907e": 203, "7451": [177, 178], "746": 171, "746011": 205, "74609375": 181, "7461": 181, "7463": 180, "74663": 122, "7469": 174, "746921": 183, "747": 171, "748": 171, "7489": 182, "749": 171, "7490": 177, "7498": 182, "74m": 183, "75": [68, 135, 150, 157, 160, 161, 171, 174, 176, 177, 178, 183, 184, 185, 189, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "750": [171, 178, 183], "7500": 183, "750000": [160, 171, 172, 194, 205], "750615": 199, "75075a70c90": 155, "7507bdc665d5": 39, "751": 171, "7511": 181, "751712": 13, "752": 171, "75209323e": 203, "7524": 177, "7529": 177, "753": 171, "7532": 183, "7539": 180, "754": 171, "7542": 176, "754246": 176, "75424625": 176, "7548e": 177, "755": 171, "755102": 205, "7553": 177, "756": 171, "75615888": 176, "756159": 176, "7562": 176, "75665366e": 203, "7568025": 156, "7569": [177, 178], "757": 171, "75750": 183, "7578": 181, "758": [171, 182], "758000": 189, "7589": 182, "759": 171, "75986": 176, "75th": 160, "76": [41, 121, 157, 171, 200, 205], "760": [171, 182], "7601": 176, "7604": 181, "7608": 177, "76093000e": 203, "761": 171, "761378": 13, "762": 171, "762238": 189, "762329": 205, "7624": 182, "76249894": 157, "763": 171, "763270": 9, "76344": 13, "764": 171, "7642": 176, "7645": 175, "7647": 177, "7648": 180, "765": 171, "765298": 189, "765539": 12, "7656": 181, "766": [157, 171], "7661": 176, "766294": 15, "7665": [176, 182], "767": 171, "7670": 183, "768": [171, 182, 183, 189], "7685": 183, "7686": 177, "7687": 174, "769": 171, "769231": 171, "7695": 181, "76a0a5ce1450": 68, "76bf7a927991": 79, "77": [49, 79, 94, 96, 155, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 180, 193, 200], "770": 171, "7705221": 183, "7708": 182, "771": 171, "7711": 176, "7712": 177, "7714": 176, "771513": 176, "772": 171, "77237368": 157, "7725": 177, "772579": 17, "772900": 18, "773": [99, 171, 174], "7736742424242425": 181, "7737": 181, "774": 171, "775": [17, 18, 171], "7754": 177, "775403": 14, "776": [17, 18, 146, 171], "7765": 177, "7767": 181, "77678046e": 203, "777": [17, 18, 171], "7773": [180, 181], "77777778": 157, "777778": 171, "778": [17, 18, 171], "779": [17, 18, 171], "78": [81, 121, 135, 157, 160, 171, 177, 178, 193, 205], "780": [17, 18, 171], "7804": 177, "780573": 13, "781": [17, 18, 171], "78101": 177, "7812": 181, "781250": 171, "782": [17, 18, 171], "782dbd1412fe": 167, "783": [17, 18, 171], "7833": 177, "7837507526079813": 181, "7838": 181, "7839": 177, "784": [10, 17, 18, 19, 20, 171, 177], "7843": 177, "784433": 16, "7849e": 177, "785": [10, 17, 18, 19, 20, 171], "7852": 180, "785269": 200, "785280": 200, "785714": 171, "786": 171, "7860": 183, "7861e": 177, "78673234e": 203, "787": 171, "7870": 177, "788": 171, "78883111e": 203, "789": [54, 171], "7898": 172, "78993856e": 203, "79": [160, 171, 172, 176], "790": 171, "7900723": 174, "79018354e": 203, "79025614": 157, "791": 171, "7912": 180, "792": 171, "7922": 177, "792566": [12, 14], "79270929e": 203, "793": 171, "7930": [180, 181], "793456": 176, "7935": 177, "7936": 174, "794": [171, 189], "795": 171, "795455": 171, "795521": 16, "7956": 177, "796": 171, "7961": 177, "7963": 177, "796667": [12, 14], "79671774e": 203, "797": 171, "797101": 171, "7975": [160, 161, 172], "7978": 177, "798": 171, "79823164": 154, "7986e": 176, "799": 171, "7993": 176, "7994": 176, "7995": [160, 161, 172], "79998373e": 203, "79rhbrct01": 143, "7c9145eb11e9": 97, "7e786bcbd078": 74, "7fce570bf337": 94, "7m": 183, "7w": 174, "7x": 133, "8": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 32, 33, 34, 36, 39, 40, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 89, 91, 92, 94, 95, 96, 101, 104, 106, 108, 121, 122, 132, 133, 136, 137, 141, 143, 145, 146, 147, 150, 154, 155, 156, 157, 160, 161, 163, 164, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214], "80": [12, 14, 17, 18, 19, 20, 47, 49, 51, 59, 133, 135, 138, 140, 141, 147, 150, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 180, 183, 185, 194, 198, 202, 205], "800": [144, 146, 171, 175, 176, 182, 183, 194], "8000": [18, 20, 151, 177], "80000": 160, "800000": [171, 189], "8008": 181, "801": 41, "801005": 13, "8016": 174, "803349": 176, "8036360430009386": 53, "8037": 181, "803724929690361": 181, "8039": 177, "804460": 183, "8049": 181, "8049242424242425": 181, "806452": 171, "8069e": 177, "807018": 171, "8078": 177, "8080e": 176, "8086": 181, "809158": [12, 14], "80966303e": 203, "8099": 181, "81": [45, 49, 50, 51, 57, 59, 76, 95, 160, 161, 171, 172], "810696": [12, 14], "8111": 177, "8112": 176, "8117": 177, "8118": 177, "8125": 181, "812500": 171, "8127": 177, "8138": 181, "8141": 175, "8144": 181, "814809": 203, "8153": [180, 181], "81539193": 176, "815392": 176, "8154": 176, "8157": 177, "816327": 171, "816653826391969": 108, "816760": [12, 14], "81788758": 157, "8189": 172, "81893678": 154, "81945073e": 203, "8196": 177, "82": [160, 161, 171, 172, 177, 178], "8201e": 176, "8206": 177, "821429": 171, "822132": 9, "8235": 177, "8236": 177, "8242": 181, "8256": 175, "8258": 181, "82636160e": 203, "82647438e": 203, "82701252e": 203, "827153": 203, "8275": 177, "828066": 189, "82974801e": 203, "83": [18, 76, 160, 161, 171, 174, 177], "8300": 175, "8303a512b8c1": 136, "830770": 201, "830875": [12, 14], "83098322e": 203, "8314": 177, "831415": 12, "83161031e": 203, "831681": 183, "8324": 182, "83263141": 9, "83288998e": 203, "83319662e": 203, "8333333333333334": 97, "833552": [12, 14], "834558": [12, 14], "8346": 177, "83464298e": 203, "835299": 194, "8353": 177, "8354": 181, "8365": 177, "8372": 175, "83727878e": 203, "83770503": 154, "83847501e": 203, "8392": 177, "84": [105, 160, 171], "8400": 176, "840201": 12, "84147098": 156, "8421": 177, "8424": 182, "84254180e": 203, "843": [180, 181, 183], "8431": 177, "843333": 189, "8436": 177, "843750": 171, "8438": [181, 183], "843887": [12, 14], "8446": 177, "8458": 181, "8466": [177, 181], "846939": 171, "846976": 201, "847": 99, "8471": 177, "8474": 174, "8479": 181, "8484": 177, "8488": 175, "84915141e": 203, "85": [12, 96, 138, 150, 154, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 182, 183, 194, 195, 202], "8500": 181, "850000": 194, "85051737e": 203, "8510": 177, "8515": 177, "8515625": 181, "8516": 181, "851852": 171, "8524": 177, "853181": 9, "8549": 177, "85505447": 154, "8551": 174, "855366": 14, "8560606060606061": 181, "8561": [180, 181], "8563": 177, "8564": 177, "857142857142854": 96, "857143": 171, "85800963": 183, "858131": [12, 14], "8588": 177, "858904": 15, "859": 184, "85956433e": 203, "85mb": 183, "86": [65, 160, 161, 171, 172, 177, 182, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "8600": 175, "8603": 175, "8604": [181, 183], "8608": 184, "8613": 174, "8615": 183, "8620": 174, "8625": 199, "8627": 177, "86299475e": 203, "863636": 171, "864": 180, "8646": 181, "8652": 185, "8655": [176, 180, 181], "86635ab2cc7": 104, "8665": 182, "8667": 177, "868809": 16, "869565": 171, "8698": 176, "86m": 182, "87": [122, 133, 143, 150, 160, 161, 163, 170, 171, 172, 177, 178, 200], "8705": 177, "8706": 177, "8711": [177, 181], "871429": 171, "8717": 180, "8719": 175, "872": 12, "87236687": 154, "87285499e": 203, "87380356": 157, "8739": 175, "8743": [179, 184, 185], "8745": 177, "8747": 181, "875000": 171, "8759": [181, 182], "87646883e": 203, "8769": 181, "8771": [181, 183], "8778": [172, 182], "87786341e": 203, "877976": 177, "878": 177, "8784": 177, "87853325e": 203, "87970769e": 203, "88": [16, 103, 133, 150, 157, 160, 161, 168, 171, 172, 176, 177, 183, 193, 202], "8804": 177, "8812": 183, "88165065e": 203, "8823": 174, "8824": 177, "8835": 175, "884058": 171, "8843": 182, "8854": 181, "8856": 177, "8859": 131, "885bc9be9cd": 177, "88618684": 157, "8863": 177, "8863636363636364": 181, "8864": 181, "8867": 181, "8873": 181, "8878": 175, "8883": 182, "88888889": 157, "8896": [181, 183], "88d1d80d": 136, "89": [13, 19, 41, 50, 82, 133, 143, 150, 160, 171, 172, 200], "8902": 177, "8904402624046048": 197, "8913": 184, "891691": 9, "8917": 183, "8935": 177, "8938": 181, "89380846e": 203, "8941": 177, "8948": 176, "894992": 203, "8950": 175, "8958": 183, "8959": 183, "89632087": 154, "8967": 176, "896723": 176, "89672343": 176, "8974628075957298": 181, "8975": 181, "8977": [181, 182], "8979": 181, "8980": 177, "8983": 177, "8984": 181, "8985": [179, 184, 185], "8988": 174, "899084": 9, "8994": 185, "8b5cab780f33": 77, "8c3c435d663c": 136, "8cc0f1bdc5ed": 92, "8de2d37fa505": 136, "8f0bbdfdf6e5": 55, "8f1c": 136, "8oz": 121, "8th": 56, "9": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 33, 34, 36, 37, 38, 39, 42, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 68, 72, 73, 74, 76, 77, 78, 79, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 108, 121, 122, 131, 133, 135, 136, 143, 147, 150, 153, 154, 155, 156, 157, 160, 161, 163, 167, 168, 169, 171, 174, 176, 177, 180, 181, 182, 183, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 214], "90": [13, 17, 30, 34, 47, 49, 50, 51, 54, 59, 76, 77, 79, 92, 93, 96, 98, 103, 122, 133, 136, 138, 146, 148, 150, 161, 163, 168, 170, 171, 174, 175, 176, 181, 182, 183, 194, 198, 202], "900": [77, 103, 135, 175, 176, 180, 183], "900000": 189, "900000e": 54, "9007": 177, "90093797e": 203, "9013": 177, "901514": 16, "9018": 175, "9020": 177, "90264482e": 203, "90328251e": 203, "903846": 171, "9042": 181, "9062": 183, "906250": 171, "9066": 175, "9072": 181, "907975": 12, "9081": [181, 182], "90891100e": 203, "909091": 171, "90929743": 156, "9096": 177, "909784": 14, "9098": 177, "90m": 177, "91": [13, 95, 133, 150, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 178, 189], "910": 178, "9104": [181, 183], "91174698": 157, "9131": 183, "9132757981618246": 181, "9133": [180, 181], "91348997e": 203, "9137": 177, "9138": 176, "9141": 181, "9143": 176, "9145": 182, "914559": 14, "914701": 9, "9150": 174, "9155": 137, "9157": 175, "91703708e": 203, "9176": [177, 181, 182], "9179": 176, "917c66cfdb68": 136, "9182": 175, "9186": 181, "919264": 17, "91940167": 154, "92": [13, 150, 171, 202], "9200": 174, "9216": 177, "9217": 181, "922403": 9, "922826": 18, "9239": 136, "924": 178, "9247": 181, "9250": [181, 199, 201], "9255": 177, "925579": 14, "925926": 171, "9260": 182, "9269": 177, "9271": 181, "927536": 171, "9280": [181, 182], "928539": 14, "928571": 171, "9290": 183, "9293": 183, "9294": 177, "9296": 175, "92fab552c144": 82, "93": [18, 20, 49, 150, 171, 177, 202], "930": 122, "93054890e": 203, "93082264e": 203, "93102691": 154, "9312": 177, "93143051": 154, "932169": 14, "932537": 14, "932585": 17, "9331e": 176, "9333": 177, "9336": 181, "9346": 174, "9347": 183, "935": 178, "9352": 176, "9354": 177, "9369": 174, "9373": 177, "9375": 183, "9381": 183, "9384": [181, 182], "9396": 181, "93fed76e63a5": 177, "94": [150, 160, 161, 171, 172, 177, 202], "9401": 177, "9408": 174, "9409": 183, "9412": [19, 177], "9416": 177, "9436": 175, "9443": 183, "944681": 12, "9451": 177, "9453": 182, "9456e": 177, "946429": 171, "947368": [171, 194], "9478274870593494": 83, "948141": 16, "9485": 177, "9486": 177, "9489": 181, "9490": 177, "9492": 181, "9499": 183, "95": [13, 138, 150, 160, 171, 172, 174, 176, 183, 192, 193, 200, 201, 202, 203], "9500": 183, "9508": 176, "952": 180, "9521": 176, "9529": 177, "9531": 182, "9534": 183, "9536": 174, "9537": 177, "9539e": 177, "954": 192, "9542": 183, "95501935e": 203, "9552": 184, "9557": 181, "956": 12, "9560342718892494": 83, "9563": 183, "95636": 177, "9565": 135, "9569": 177, "9570": 182, "9571": 177, "9575": 175, "9576": [176, 177], "9577": 181, "95892427": 156, "9591": 185, "9593": 174, "95966987": 154, "96": [13, 15, 17, 19, 46, 47, 48, 49, 50, 57, 72, 73, 79, 92, 103, 133, 150, 160, 171, 183, 193], "9602": 183, "96052f3c0c69": 54, "9608": 177, "96139878e": 203, "9618232": 67, "96238081e": 203, "96248829": 157, "9625": 183, "963": [182, 183], "963404": 199, "964286": 171, "9646": 183, "9647": 177, "965323": 18, "9663": 174, "966365e": 54, "96652011": 157, "9666": [174, 176], "96671753e": 203, "966907": 16, "96875": 183, "9688": 183, "9693": 183, "97": [13, 54, 70, 160, 161, 171, 172, 202], "9704": 182, "97087710e": 203, "971014": 171, "9714": 175, "9716": 174, "9717076499418887": 191, "97187673e": 203, "9722": 183, "9725": 177, "9727": 182, "97305419e": 203, "9739": 176, "9752e": 177, "9753e": 176, "9754": 174, "976073": 201, "9765": 177, "9766": 182, "977": 180, "9771": 183, "97739775e": 203, "9775": 177, "977733270": 183, "977974": 18, "978": 181, "9784": 183, "9785208702087402": 183, "9792": 183, "97964329e": 203, "97mib": 174, "98": [40, 54, 160, 171, 183, 196, 205], "9804": 177, "980769": 171, "981": 76, "9812": 183, "98237187e": 203, "9830": 181, "9831": 16, "9833": 183, "9834262422606419": 197, "9838": 174, "9839": 182, "9844": 182, "984659090909091": 183, "9847": 183, "98514058e": 203, "9854": 175, "98547": 200, "9856": 183, "986095083415364e": 9, "986e6d871071": 42, "987": 50, "98749888": 154, "9883": 182, "9893": 183, "9894": 176, "9899925": 156, "98a1ccc168e9": 79, "99": [31, 33, 46, 49, 54, 57, 62, 63, 91, 93, 94, 96, 133, 154, 160, 161, 171, 172, 176, 183, 193, 196, 197, 198, 199, 200, 201, 205], "9909e": 176, "9924": 177, "99262966e": 203, "9932": 177, "9933": 183, "994": [181, 198], "994177": 65, "9942": 176, "994667": 14, "995": 198, "9950": 176, "996": [182, 198], "9960": 174, "9961": 185, "9966e": 176, "997": 198, "9971": 183, "99714633e": 203, "9976563219": 42, "997677": 205, "99771051": 9, "998": 198, "9986": [177, 185], "9988e": 176, "999": [54, 57, 77, 78, 157, 182], "9992e": 177, "9995": [160, 161, 172], "999703": 205, "9999": [19, 61, 67, 82], "999926": 205, "999999": [62, 63, 96], "999999999999998": 50, "999999999999999": 156, "9b450cb47d30": 55, "9b9247988596": 72, "9d80": 136, "9dea": 136, "9df797f83624": 54, "9e77": 136, "9e95083e441a": 54, "9mib": 174, "9th": 133, "9yzf8kj6rp": 143, "A": [0, 1, 2, 8, 9, 10, 19, 20, 21, 26, 33, 34, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 68, 70, 71, 72, 73, 76, 77, 79, 80, 82, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 108, 121, 125, 130, 131, 132, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 157, 160, 161, 163, 164, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 197, 198, 199, 200, 201, 202, 203, 205, 206], "AND": [106, 122, 130], "AS": 0, "And": [1, 21, 36, 37, 54, 73, 93, 97, 121, 122, 133, 137, 146, 148, 161, 162, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "As": [26, 27, 29, 34, 36, 38, 40, 41, 42, 49, 50, 53, 56, 57, 68, 72, 73, 76, 78, 79, 85, 86, 95, 97, 100, 103, 104, 108, 113, 133, 135, 136, 139, 142, 143, 146, 147, 160, 161, 162, 163, 165, 166, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 191, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206], "At": [41, 98, 100, 108, 121, 133, 135, 137, 140, 141, 143, 144, 146, 148, 178, 182, 190, 194, 201, 203, 205], "BUT": [192, 194, 197, 199, 200, 201, 203], "Be": [19, 20, 36, 143, 144, 148, 174], "Being": 58, "But": [0, 5, 6, 8, 11, 21, 27, 37, 38, 39, 44, 47, 50, 51, 53, 54, 56, 58, 59, 73, 79, 81, 82, 87, 91, 92, 94, 96, 97, 103, 104, 106, 113, 121, 122, 132, 133, 135, 136, 137, 140, 142, 143, 148, 160, 161, 162, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 191, 192, 193, 194, 200, 201, 202, 203], "By": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 49, 50, 51, 61, 64, 80, 82, 104, 108, 133, 136, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 174, 178, 179, 181, 182, 185, 192, 194, 199, 200, 201, 203], "For": [4, 5, 6, 8, 13, 15, 16, 17, 18, 21, 22, 25, 26, 27, 30, 31, 33, 34, 37, 39, 40, 41, 42, 44, 48, 49, 50, 51, 53, 54, 63, 67, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 96, 97, 98, 100, 103, 104, 105, 106, 110, 113, 121, 122, 131, 133, 135, 136, 138, 140, 141, 143, 144, 147, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "IN": 144, "IT": [96, 104, 138, 161], "If": [0, 2, 5, 6, 7, 21, 26, 29, 30, 36, 37, 39, 41, 44, 45, 46, 47, 49, 50, 51, 54, 56, 58, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 91, 92, 96, 98, 100, 103, 104, 105, 108, 111, 120, 121, 122, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 146, 147, 148, 153, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 210], "In": [0, 1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 105, 106, 108, 120, 121, 122, 132, 133, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "Into": 135, "It": [0, 1, 8, 10, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 66, 70, 71, 72, 73, 76, 78, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 100, 103, 104, 105, 106, 108, 110, 121, 122, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 195, 196, 197, 200, 202, 203, 204, 205, 206, 212], "Its": [8, 19, 20, 24, 26, 122, 133], "NO": 58, "NOT": [11, 97, 106, 192, 193], "Near": 183, "No": [1, 41, 45, 49, 50, 72, 76, 91, 94, 100, 121, 122, 133, 140, 141, 143, 146, 148, 160, 161, 164, 167, 174, 182, 183, 193, 196, 198, 199, 200, 201, 205], "Not": [55, 56, 57, 73, 83, 84, 97, 100, 106, 108, 133, 138, 141, 143, 148, 153, 154, 166, 176, 177, 178, 180, 181, 183, 189, 198, 213, 214], "OF": [143, 146, 147], "OR": [41, 97, 106, 136, 189, 200], "Of": [136, 176, 182, 183], "On": [5, 9, 17, 18, 19, 20, 36, 38, 50, 57, 58, 70, 77, 79, 82, 100, 104, 133, 136, 153, 174, 183, 194, 201, 205], "One": [0, 1, 8, 30, 37, 40, 54, 61, 68, 82, 85, 91, 92, 103, 108, 121, 122, 133, 136, 137, 142, 147, 148, 155, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 199, 201, 203], "Or": [8, 50, 122, 135, 143, 167, 168, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 191, 203], "Such": [8, 19, 20, 39, 50, 160, 161, 164, 168, 178, 181, 183], "THE": 144, "TO": [39, 143, 171, 203], "That": [0, 7, 26, 38, 44, 54, 56, 70, 73, 106, 111, 121, 133, 135, 136, 137, 143, 146, 148, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 198, 200, 201, 202, 204, 205, 206, 210], "The": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 44, 47, 48, 49, 50, 51, 53, 58, 59, 61, 62, 63, 67, 68, 71, 74, 76, 77, 78, 79, 80, 81, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 111, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 160, 162, 163, 172, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 214], "Their": [133, 174, 197], "Then": [0, 2, 21, 51, 64, 65, 66, 68, 74, 77, 78, 82, 92, 93, 103, 104, 105, 121, 122, 132, 133, 135, 136, 137, 142, 143, 146, 147, 148, 161, 175, 176, 177, 178, 179, 182, 183, 192, 198, 199, 200, 203, 205], "There": [1, 5, 26, 27, 33, 36, 37, 40, 41, 42, 44, 49, 50, 54, 55, 56, 58, 64, 65, 70, 72, 79, 82, 86, 93, 97, 104, 106, 108, 113, 121, 122, 133, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 160, 161, 163, 164, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 205], "These": [0, 1, 15, 16, 17, 18, 25, 39, 40, 53, 54, 68, 72, 73, 79, 80, 82, 83, 91, 98, 103, 106, 133, 135, 137, 139, 141, 142, 143, 144, 147, 167, 174, 176, 177, 178, 180, 182, 183, 189, 192, 193, 194, 197, 199, 201, 203], "To": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 36, 37, 40, 41, 42, 44, 46, 50, 51, 53, 54, 58, 59, 61, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 82, 84, 86, 91, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 122, 123, 131, 133, 135, 139, 140, 141, 148, 153, 154, 156, 157, 161, 162, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 195, 196, 197, 199, 201, 202, 204, 205], "Will": [79, 176, 178, 181], "With": [0, 1, 6, 7, 26, 45, 56, 59, 73, 106, 111, 133, 147, 157, 174, 175, 176, 177, 180, 181, 182, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 204, 205, 210], "_": [29, 30, 31, 32, 33, 37, 40, 82, 90, 92, 99, 103, 104, 105, 131, 133, 167, 181, 182, 183, 198, 200, 204], "_0": 182, "_1": 32, "_2": [32, 34], "__": [103, 104, 106], "___________": 143, "__add__": 106, "__and__": 106, "__bases__": 104, "__builtins__": [61, 72, 82], "__cached__": [61, 82], "__call__": [39, 131, 133], "__class__": [73, 103, 104, 131, 177], "__closure__": 38, "__d": 105, "__dict__": [40, 86, 104], "__div__": 106, "__doc__": [61, 76, 82, 91, 104], "__eq__": 106, "__file__": [61, 82], "__floordiv__": 106, "__ge__": 106, "__get_result": 133, "__getitem__": [49, 160, 178], "__gt__": 106, "__iadd__": 106, "__idiv__": 106, "__imod__": 106, "__imul__": 106, "__init__": [36, 37, 40, 74, 85, 86, 103, 104, 105, 106, 133, 175, 176, 177, 178, 179, 182, 184, 185, 198], "__invert__": 106, "__ipow__": 106, "__isub__": 106, "__iter__": [36, 37], "__le__": 106, "__len__": 178, "__loader__": [61, 82], "__lshift__": 106, "__lt__": 106, "__main__": [86, 103, 104, 105, 106, 108, 178], "__maxpric": 103, "__mod__": 106, "__module__": 104, "__mro__": 105, "__mul__": 106, "__name__": [61, 82, 104, 177, 198], "__ne__": 106, "__next__": [36, 37], "__or__": 106, "__package__": [61, 82], "__peg_parser__": 90, "__pow__": 106, "__pycache__": 183, "__rshift__": 106, "__salari": 103, "__secretcount": 104, "__spec__": [61, 82], "__str__": [74, 106], "__sub__": 106, "__truediv__": 106, "__version__": [86, 153, 158, 174, 175, 177, 178, 180, 181, 182, 183], "__weakref__": [86, 104], "__xor__": 106, "_acal": 133, "_add_numeric_oper": 160, "_age": 92, "_age_": 167, "_arun": 131, "_ax": 198, "_backward_hook": 178, "_base": 133, "_build": 214, "_call": [131, 133], "_call_impl": [177, 178], "_classname__attrnam": 104, "_completion_with_retri": [133, 143], "_condit": 133, "_conv_forward": 178, "_decor": [167, 192, 198], "_drop_axi": 164, "_epoch": 181, "_except": 133, "_forward_hook": 178, "_forward_pre_hook": 178, "_gener": 133, "_get_action_request": 131, "_get_input": 133, "_get_sess": 131, "_global_backward_hook": [177, 178], "_global_backward_pre_hook": 177, "_global_forward_hook": [177, 178], "_global_forward_pre_hook": [177, 178], "_if": 92, "_indentation_": 44, "_init_": 73, "_input": 138, "_interpret_respons": 133, "_interpret_response_lin": 133, "_io": 70, "_justcounter__secretcount": 104, "_make_request": 131, "_marks_": 167, "_maxlin": 131, "_name_": 167, "_output": 32, "_p": 32, "_pair": 178, "_prompt": 133, "_raise_timeout": 131, "_read_statu": 131, "_reversed_padding_repeated_twic": 178, "_run": 131, "_should_continu": 131, "_sinplot_": 190, "_sock": 131, "_sslobj": 131, "_state": 133, "_strptime": 63, "_strptime_datetim": 63, "_take_next_step": 131, "_temperatur": 40, "_timeout_occur": 131, "_transform_index": 167, "_y": 201, "a04242241123": 54, "a1": 197, "a2": 197, "a3": 197, "a4372dda": 136, "a46e692b8bdd": 177, "a8dfd56d4d8": 72, "a_": 33, "a_0": 29, "a_copi": 155, "a_g_": 92, "a_n": 29, "aa": 41, "aabbcc": 150, "aabc": 41, "aaron": 133, "ab": [26, 41, 55, 61, 70, 158, 182, 195, 201, 204], "ab123csd": 41, "abacu": 41, "abandon": 133, "abbrevi": [62, 63, 64, 168, 192, 198, 199], "abc": [41, 49, 55, 56, 96, 144], "abc12d": 41, "abc12de23f456": 41, "abcdef": 150, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 82, "abhai": 144, "abil": [54, 103, 105, 122, 136, 140, 141, 143, 146, 176, 179, 181, 182, 183, 198], "abl": [5, 8, 25, 36, 38, 79, 95, 98, 105, 122, 133, 135, 136, 144, 146, 148, 175, 176, 178, 180, 182, 183, 185, 190, 193, 197, 199, 200, 201, 203, 204], "abnorm": 51, "abomasnow": 171, "abomasnowmega": 171, "abort": 51, "about": [0, 7, 8, 9, 11, 21, 22, 26, 27, 32, 36, 38, 39, 40, 41, 42, 44, 49, 53, 54, 55, 56, 57, 58, 59, 61, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 84, 86, 90, 91, 92, 93, 96, 98, 103, 104, 105, 106, 108, 110, 111, 113, 121, 122, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 154, 155, 157, 160, 161, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 210, 213, 214], "abov": [5, 6, 8, 21, 26, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 95, 98, 103, 104, 105, 106, 108, 121, 133, 135, 136, 141, 143, 146, 147, 153, 155, 160, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "abra": 171, "abraham": 178, "abruptli": [49, 50], "absenc": 53, "absol": 171, "absolmega": 171, "absolut": [26, 32, 38, 40, 44, 76, 84, 133, 148, 175, 176, 177], "absolute_url": [140, 141], "absolute_valu": 76, "absorpt": 0, "abstract": [72, 103, 121, 122, 133, 135, 140, 143, 148, 182, 197, 199, 200, 203], "abund": 133, "abus": 38, "abxz": 41, "abyss": 41, "ac": 41, "academ": [122, 161], "acc": [155, 176, 177, 183], "accademia": 133, "acceler": [144, 174, 175, 177, 178, 180, 181, 182, 183, 185], "accelgor": 171, "accent": 195, "accent_r": 195, "accept": [54, 74, 104, 110, 133, 140, 141, 142, 148, 177, 182, 183, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "access": [26, 38, 40, 47, 58, 62, 67, 70, 72, 76, 77, 78, 81, 82, 84, 85, 86, 91, 94, 97, 98, 103, 105, 108, 121, 133, 140, 141, 143, 144, 153, 154, 155, 160, 161, 162, 163, 174, 175, 179, 180, 182, 183, 192, 193, 200, 213], "access_level": 47, "accessor": 160, "accid": 133, "accident": 103, "acco": 171, "accomod": 174, "accompani": 133, "accomplish": [54, 58, 59, 64, 143], "accord": [47, 76, 87, 97, 106, 121, 133, 182, 203, 205, 206], "accordingli": [50, 70, 98, 177, 181, 183, 190, 192, 193, 194, 203], "account": [16, 39, 131, 133, 137, 140, 148, 180, 181, 182, 183, 197, 201], "accounts_to_mim": 143, "accum": 177, "accumul": [175, 176, 177, 178, 179, 184, 185], "accur": [1, 5, 6, 12, 14, 17, 18, 19, 20, 46, 53, 84, 94, 133, 136, 144, 146, 148, 174, 194], "accuraci": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 133, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "accuracy_fn": [176, 177], "accuracy_scor": 176, "acd": 41, "acdbea": 41, "ach": 41, "achiev": [51, 96, 103, 106, 121, 143, 146, 168, 174, 176, 178, 180, 181, 182, 183, 190, 191, 194, 195, 200, 203], "achiv": 54, "acm": [99, 148], "acme_co_v2": 148, "acmico": 148, "acn": 148, "aco": [82, 84], "acombine_doc": 133, "acompletion_with_retri": 133, "acordingli": 203, "acosh": [82, 84], "acquaint": [193, 194, 202, 203, 204, 205], "acquir": [103, 105, 136, 182], "acquisit": 136, "acrobat": 133, "acronym": 182, "across": [1, 108, 122, 133, 141, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205], "act": [0, 26, 39, 44, 77, 86, 97, 103, 104, 122, 147, 198, 204], "action": [1, 44, 56, 73, 76, 103, 108, 121, 122, 130, 133, 135, 141, 142, 143, 144, 160, 174, 177, 178, 180, 182, 183, 191, 205], "action_id": 131, "activ": [8, 19, 20, 26, 66, 132, 133, 135, 140, 141, 143, 144, 148, 174, 177, 178, 180, 181, 182, 183, 205, 212], "actual": [11, 15, 16, 17, 18, 19, 20, 36, 37, 39, 40, 54, 68, 70, 74, 79, 92, 94, 104, 105, 106, 108, 122, 133, 135, 136, 137, 142, 143, 146, 148, 151, 156, 160, 168, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "actviat": 176, "ad": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 26, 39, 40, 41, 49, 51, 53, 55, 56, 58, 66, 72, 76, 95, 96, 105, 121, 133, 156, 157, 160, 161, 162, 168, 170, 174, 176, 177, 178, 179, 180, 182, 184, 185, 189, 190, 191, 193, 198, 199, 200, 201, 203], "ad7c0de6": 136, "ada": [121, 137], "adam": [175, 176, 178, 179, 180, 181, 182, 183, 184, 185], "adapt": [131, 143, 180, 181, 182, 196, 200, 203, 204, 205], "adaptiveavgpool2d": [180, 181], "add": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 38, 39, 41, 42, 46, 49, 50, 56, 58, 59, 72, 73, 76, 78, 79, 81, 82, 87, 91, 93, 95, 96, 97, 103, 104, 105, 106, 121, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 148, 150, 151, 153, 156, 157, 160, 161, 162, 167, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 190, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207], "add_": [27, 113], "add_6_and_3": 90, "add_ai_messag": 121, "add_binari": 86, "add_collect": 198, "add_docu": 136, "add_graph": 181, "add_legend": [204, 205], "add_legend_data": 198, "add_patch": 197, "add_prefix": 167, "add_scalar": 181, "add_skil": 103, "add_subplot": 177, "add_suffix": 167, "add_ten": [38, 76], "add_two_num": 59, "add_two_numb": [76, 79], "add_user_messag": 121, "add_video_info": 147, "addbackward0": 182, "adder": 42, "addict": 136, "addit": [8, 12, 13, 14, 15, 16, 17, 18, 26, 28, 31, 42, 53, 73, 76, 79, 81, 86, 92, 95, 96, 97, 103, 105, 106, 121, 122, 133, 136, 148, 153, 174, 182, 190, 191, 193, 194, 198, 200, 203, 208], "addition": [25, 103, 136, 194, 201, 203, 204, 205], "additional_kwarg": [121, 134, 140, 142], "additoinal_kwarg": 142, "addmmbackward0": [174, 182], "address": [5, 6, 49, 57, 148, 201], "adher": [133, 181], "adienc": 204, "adject": 133, "adjust": [8, 97, 135, 141, 146, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 197, 198, 199, 202, 203], "admin": 47, "administr": 138, "admir": 133, "admiss": 133, "admit": 146, "adopt": 183, "adorn": 133, "adrish": 182, "adult_mal": [199, 201], "advanc": [11, 26, 51, 79, 92, 121, 122, 125, 133, 141, 143, 176, 177, 181, 182, 183, 190, 201, 214], "advantag": [11, 36, 100, 121, 122, 133, 136, 140, 141, 146, 147, 190, 200], "adventur": 133, "advers": 201, "adversari": 212, "advic": [133, 136, 146, 147, 201], "advis": [82, 133, 136, 146, 147, 194, 201], "advisor": [133, 147], "advisori": 147, "aegislashblad": 171, "aegislashshield": 171, "aerodactyl": 171, "aerodactylmega": 171, "aesthet": [183, 189, 191, 192, 193, 194, 198, 201, 203, 205, 208], "af0f59439c9b": 38, "affect": [77, 133, 147, 160, 194], "affili": [122, 144], "afford": [133, 144, 190], "afhuu987u3": 143, "afmhot": 195, "afmhot_r": 195, "afoo": 41, "afootbal": 41, "afootest": 41, "after": [1, 8, 21, 33, 36, 47, 49, 50, 51, 53, 54, 56, 67, 68, 70, 72, 73, 76, 77, 78, 79, 82, 86, 90, 91, 92, 94, 95, 100, 104, 106, 108, 121, 122, 133, 140, 141, 143, 144, 146, 148, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 195, 200, 205], "afternoon": 143, "afterward": [133, 136, 148], "ag": [42, 46, 49, 57, 72, 73, 76, 79, 82, 86, 92, 96, 103, 104, 105, 108, 121, 133, 137, 150, 160, 161, 163, 164, 165, 166, 167, 169, 170, 176, 177, 189, 191, 194, 198, 199, 201, 205], "again": [0, 45, 50, 68, 70, 72, 74, 80, 82, 103, 105, 106, 108, 122, 133, 136, 142, 143, 146, 148, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "against": [21, 41, 133, 138, 146, 156, 161, 168, 177, 191, 193, 194, 198, 204, 205], "agarw": 144, "age_": 92, "agenc": [121, 122, 138, 144], "agenda": [189, 191, 193, 200, 203], "agent": [1, 125, 133, 149], "agent_executor": 135, "agent_toolkit": 131, "agentexecutor": [121, 122, 131], "agg": [160, 172], "aggfunc": 160, "aggreg": [8, 133, 203], "aggron": 171, "aggronmega": 171, "agil": [144, 148], "agnost": [148, 174, 175, 176, 179, 180, 181, 182, 183, 185], "ago": [121, 133, 139], "agonistc": 182, "agre": [122, 133, 191], "agricultur": [138, 174], "ah": 132, "ahead": [137, 148, 183, 191, 194], "ai": [0, 26, 120, 122, 133, 134, 140, 144, 146, 147, 148, 174, 179, 180, 181, 182, 183, 201, 213, 214], "ai_respons": 121, "ai_response_messag": 142, "aid": [122, 133, 146, 147, 183, 204], "aim": [1, 4, 11, 122, 143, 147, 160, 164, 202, 213, 214], "aimessag": [121, 134, 138, 140, 142, 148], "aimessageprompttempl": [132, 134, 148], "aipom": 171, "air": [133, 135, 138, 143], "airbnb": 147, "airlin": [138, 206], "airmark": 146, "airport": 136, "airtabl": 147, "ak": 182, "akin": [1, 178], "al": 182, "ala": 133, "alakazam": 171, "alakazammega": 171, "alammar": 182, "alan": [49, 50, 76, 79, 161], "alan99": 51, "alan99whit": 50, "alarm": 133, "album": 121, "alchemi": 121, "alexhormozi": 143, "alfa": [160, 161, 172], "algebra": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 153, 194, 212], "algorithm": [1, 3, 5, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 30, 31, 49, 105, 135, 144, 174, 175, 182, 193, 204, 212, 213, 214], "alia": [41, 183], "alic": 141, "alien": 133, "align": [1, 27, 29, 30, 31, 33, 34, 54, 113, 151, 160, 180, 182, 194], "alina": 150, "aliv": [199, 201], "all": [0, 1, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 53, 56, 58, 61, 62, 63, 68, 70, 71, 72, 73, 74, 76, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 108, 111, 121, 122, 130, 131, 133, 135, 136, 138, 140, 141, 142, 143, 144, 146, 147, 148, 153, 154, 155, 156, 157, 160, 161, 162, 163, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 214], "all_even": 37, "all_kei": 57, "alla": 121, "allan": 54, "allclos": 158, "allianc": [121, 133], "alliter": 134, "alll": 151, "alloc": [81, 103, 203], "allow": [12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 38, 39, 40, 41, 42, 44, 47, 49, 50, 53, 55, 56, 72, 73, 78, 79, 91, 92, 93, 97, 103, 104, 105, 106, 108, 110, 121, 122, 131, 133, 134, 142, 143, 144, 147, 155, 156, 160, 161, 167, 168, 169, 174, 176, 178, 179, 180, 181, 182, 183, 185, 192, 195, 199, 200, 204, 205, 213, 214], "allus": 143, "almost": [26, 133, 143, 174, 175, 176, 178, 179, 180, 181, 182, 183, 193, 202, 203], "aloha": 189, "alomomola": 171, "alon": [133, 135, 182, 197, 199, 201], "along": [9, 11, 12, 15, 16, 39, 49, 72, 73, 76, 79, 81, 82, 86, 105, 108, 121, 133, 142, 143, 153, 154, 156, 174, 176, 178, 182, 183, 190, 193, 195, 197, 198, 200, 202, 203, 213], "alongisd": 175, "alongsid": [134, 176, 177, 178, 183], "alot": 182, "alow": 51, "alp": 133, "alpha": [9, 19, 20, 33, 34, 83, 92, 183, 192, 194, 195, 196, 197, 198, 200, 205], "alphabet": [30, 31, 50, 51, 54, 78, 93], "alphanumer": 54, "alpin": 133, "alreadi": [9, 25, 38, 39, 54, 55, 58, 70, 72, 82, 87, 100, 108, 122, 133, 135, 136, 137, 138, 143, 147, 148, 160, 161, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205], "alright": [175, 176, 177, 178, 180, 182, 183, 196], "also": [0, 1, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 36, 37, 38, 39, 40, 44, 45, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 89, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 108, 111, 113, 121, 122, 130, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 148, 151, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213], "alt": 122, "altaria": 171, "altariamega": 171, "alter": [39, 44, 94, 160, 178, 182, 183, 190, 193, 195, 197, 198, 200, 201, 202, 203], "altern": [29, 31, 33, 38, 54, 70, 79, 82, 93, 122, 133, 164, 167, 182, 183, 200, 203, 205], "although": [5, 13, 30, 31, 38, 76, 77, 81, 85, 97, 98, 104, 133, 135, 176, 183, 190, 191, 192, 198, 199, 203, 204], "altman": [121, 133, 135], "altspel": 122, "alu": 70, "alumni": 133, "alwai": [21, 26, 29, 31, 36, 44, 45, 73, 74, 76, 82, 83, 84, 87, 90, 91, 95, 97, 98, 104, 105, 108, 133, 135, 136, 140, 141, 148, 155, 160, 174, 175, 176, 178, 180, 181, 182, 183, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203], "alzheim": 143, "am": [0, 39, 41, 54, 62, 63, 77, 86, 96, 108, 143, 147, 148, 178, 190, 193, 195, 197, 198, 199, 200, 201, 203, 205], "amateurish": 133, "amaura": 171, "amax": [19, 20], "amaz": [53, 180, 205], "amazingli": 134, "amazon": 183, "amazonaw": 177, "amber": 192, "ambigi": 122, "ambigu": 87, "ambipom": 171, "ambit": 133, "ambiti": 133, "amd": [100, 142, 181], "amd64": 26, "amelia": 108, "america": [61, 65, 122], "american": [121, 133, 189], "ami": [42, 49, 104, 140], "amid": 133, "amin": [19, 20], "among": [47, 68, 104, 133, 146, 192, 193, 201, 202, 205], "amongst": 178, "amoonguss": 171, "amount": [0, 1, 44, 46, 74, 94, 100, 133, 136, 140, 141, 142, 148, 153, 174, 175, 176, 177, 180, 181, 182, 183, 194, 198, 199, 200, 205], "amp": 138, "ampharo": 171, "ampharosmega": 171, "ampl": 203, "amusingli": 133, "an": [0, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 30, 31, 33, 34, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 62, 66, 67, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 108, 121, 122, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 153, 154, 155, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "anaconda": [82, 153, 190], "anaconda3": [63, 82, 121, 122, 131, 133, 135, 136, 164, 167, 168, 169, 189, 192, 196, 198], "analog": [85, 160], "analogi": 146, "analys": [6, 15, 16, 17, 18, 100, 120, 190], "analysi": [0, 1, 4, 5, 6, 13, 15, 16, 17, 18, 66, 100, 122, 160, 161, 164, 171, 172, 183, 189, 190, 192, 193, 197, 198, 199, 201, 202, 203, 205, 206, 212], "analyst": [0, 160, 168, 191], "analyt": [1, 141, 160, 193, 213, 214], "analyz": [0, 8, 73, 100, 145, 150, 151, 160, 161, 162, 165, 166, 168, 171, 172, 197, 205, 213, 214], "analyze_list_overlap": 145, "anana": 41, "anathema": 136, "anatomi": 122, "ancient": 133, "andorra": 122, "andreessen": [121, 146], "andrej": 174, "android": 183, "anduril": 147, "angel": [121, 133, 136], "angl": 84, "angri": 133, "ani": [0, 5, 7, 8, 19, 20, 21, 24, 26, 29, 33, 34, 36, 37, 39, 40, 48, 49, 50, 51, 53, 54, 56, 58, 59, 66, 72, 73, 77, 78, 79, 80, 81, 82, 86, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 111, 121, 122, 130, 133, 136, 137, 140, 141, 143, 144, 146, 147, 148, 153, 154, 156, 157, 160, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210], "anim": [8, 19, 20, 105, 133, 148, 182], "anisotrop": [30, 31], "ankl": [18, 20, 177], "ann": [8, 19, 20], "anniversari": 41, "annoi": [136, 157], "annot": [183, 191, 200, 201, 204], "annotate_ax": 198, "announc": 133, "annual": [26, 161, 194], "anoint": 133, "anomal": 2, "anomali": [3, 135, 139, 212], "anomaly_detect": 9, "anon": 133, "anonym": [24, 37, 59, 88], "anorith": 171, "anoth": [4, 8, 21, 24, 30, 31, 33, 34, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 64, 70, 72, 76, 77, 78, 82, 85, 86, 90, 91, 93, 95, 96, 97, 98, 103, 104, 105, 121, 122, 131, 133, 135, 136, 140, 141, 142, 143, 148, 150, 155, 156, 160, 161, 162, 169, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "anscomb": [193, 195], "ansi": 133, "answer": [53, 121, 130, 132, 133, 135, 136, 139, 143, 144, 146, 177, 178, 179, 180, 181, 182, 183, 185, 203], "answer_kei": 122, "antialia": [178, 181, 182, 184, 185], "antibiot": 49, "antiqu": 133, "anuko": 54, "anukool": [0, 54, 71, 76, 103], "any_fun": 86, "anybodi": 148, "anymor": [133, 204], "anyof": 142, "anyon": [54, 133, 140, 141, 146, 181, 183], "anyth": [26, 45, 54, 76, 104, 108, 121, 122, 133, 141, 146, 148, 164, 167, 169, 170, 174, 175, 176, 177, 178, 181, 182, 183, 190, 197, 200, 205], "anytim": [182, 191], "anywai": [46, 133, 136, 146, 178, 183, 199, 200, 204], "anywher": [41, 133, 140, 141, 174, 181, 183, 195], "aord": 136, "ap": 148, "apart": [5, 26, 55, 133, 136, 147, 156, 194, 197, 203], "apex": 133, "api": [121, 125, 133, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 164, 167, 174, 180, 181, 182, 183, 214], "api_bas": 133, "api_doc": 122, "api_kei": [133, 137, 142, 146], "api_requestor": 133, "api_resourc": 133, "api_typ": 133, "api_vers": 133, "api_wrapp": 131, "apichain": 122, "apolog": 133, "app": [132, 133, 137, 140, 141, 146, 147, 148, 177, 178, 179, 180, 181, 192], "appart": 51, "appdata": 82, "appeal": [133, 135, 190, 191, 201], "appear": [54, 77, 78, 81, 86, 91, 105, 122, 133, 141, 176, 177, 182, 183, 190, 192, 193, 194, 201, 205], "appen": 157, "append": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 49, 59, 70, 73, 76, 81, 82, 86, 96, 103, 135, 143, 146, 147, 153, 157, 160, 167, 169, 172, 175, 177, 178, 179, 181, 183, 184, 185, 193, 195, 196, 197, 198, 205], "appendex": 182, "appendix": 182, "appet": 134, "appl": [41, 49, 55, 57, 58, 93, 94, 97, 104, 122, 133, 134, 162, 183, 201], "apple_pi": 183, "appli": [26, 33, 34, 39, 40, 72, 81, 122, 133, 135, 136, 144, 146, 147, 163, 164, 166, 167, 168, 170, 174, 176, 177, 178, 180, 182, 192, 193, 197, 200, 202, 203, 204, 205], "applic": [0, 1, 24, 30, 31, 33, 34, 53, 54, 66, 82, 85, 103, 121, 122, 123, 130, 133, 136, 140, 141, 143, 147, 156, 161, 167, 174, 175, 179, 182, 183, 185, 197, 212], "appreci": [133, 143], "approach": [8, 28, 103, 122, 133, 143, 146, 147, 156, 164, 167, 175, 181, 204, 205], "appropri": [1, 6, 15, 16, 17, 18, 45, 46, 47, 48, 53, 63, 76, 180, 181, 182, 183, 192, 197], "approx": 34, "approxim": [5, 6, 53, 131, 133, 135, 182, 202, 203], "apr": 89, "apredict": 133, "april": [51, 122, 133, 136, 141, 178, 183], "apython": [41, 81], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 111, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 154, 155, 156, 157, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 214], "ara": 122, "arang": [9, 30, 31, 150, 153, 155, 156, 158, 174, 175, 176, 205, 206], "arbitrari": [29, 57, 58, 73, 108, 134, 155, 160, 178, 192], "arbok": 171, "arc": [84, 133], "arcanin": 171, "arcco": 34, "arceu": 171, "arch": 133, "archen": 171, "archeop": 171, "architectur": [8, 133, 177, 178, 179, 180, 181, 182, 183, 184, 185], "architecur": 182, "architecutur": 180, "architetur": 182, "archiv": [178, 182], "arctan2": 158, "arcx": 54, "arcxarcx": 54, "area": [1, 76, 103, 105, 121, 122, 135, 143, 148, 178, 182, 183, 194, 200, 203, 204], "area_of_circl": 76, "aren": [59, 133, 135, 136, 137, 142, 147, 148, 174, 175, 177, 178, 180, 181, 182, 183, 199, 201, 203], "arg": [39, 43, 51, 63, 73, 79, 108, 131, 133, 167, 176, 177, 178, 179, 181, 182, 183, 184, 185, 192, 195, 198, 204], "arg1": [59, 79], "arg2": 59, "arg3": 59, "argentina": 150, "argmax": [158, 174, 176, 177, 178, 179, 180, 183, 184, 185], "argmin": [135, 158, 174], "argpars": [179, 185], "argpartit": 158, "argsort": 158, "argu": [122, 146, 176], "arguabl": 133, "argument": [24, 36, 37, 39, 40, 41, 42, 54, 58, 59, 61, 62, 63, 67, 68, 70, 71, 72, 74, 77, 81, 82, 86, 88, 92, 104, 108, 121, 122, 131, 133, 135, 140, 142, 150, 154, 157, 177, 178, 179, 180, 190, 191, 192, 193, 194, 196, 199, 203, 205], "argument1": 82, "argument2": 82, "argument_list": 81, "argv": 82, "ariado": 171, "aris": [39, 50], "arithmet": [40, 53, 72, 76, 103, 106, 156], "arm": [100, 189], "armaldo": 171, "arnold": 189, "aromatiss": 171, "aron": 171, "around": [54, 79, 86, 94, 122, 130, 131, 133, 135, 136, 137, 143, 146, 147, 148, 174, 180, 183, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "arr": [154, 156], "arrai": [15, 16, 19, 20, 21, 24, 26, 27, 30, 31, 32, 33, 34, 49, 54, 57, 59, 113, 133, 135, 159, 160, 174, 176, 178, 193, 194, 195, 197, 203, 204, 205, 206], "arrang": [0, 33, 71, 133, 143, 171, 174, 193, 198, 201, 202], "array_equ": [153, 158], "arriv": [133, 197, 200], "arrow": [72, 182], "arrrai": 160, "arsen": [203, 204, 205], "art": [1, 51, 133, 138, 144, 176, 177, 178, 179, 180, 182, 183], "arthur": [39, 42, 47, 49, 57, 76, 79, 96, 103, 104, 105], "arthurhunt": 42, "arti": 133, "articl": [0, 10, 18, 20, 50, 68, 78, 79, 108, 122, 133, 135, 139, 160, 161, 164, 166, 167, 176, 182, 183, 194, 213, 214], "article1": 214, "article2": 214, "article3": 214, "article4": 214, "articuno": 171, "artif": 16, "artifici": [1, 8, 13, 16, 19, 20, 133, 143, 144, 174, 177, 178, 183, 201, 212], "artificial_intellig": 201, "artist": [122, 133, 181, 198], "arxiv": 182, "as_cmap": 192, "as_retriev": [121, 122, 136, 139, 145, 146], "as_strid": 158, "asabeneh": [26, 70], "asarrai": 178, "ascend": [133, 160, 171, 172], "ascii": [54, 70], "ascii_lett": 82, "ascontiguousarrai": 158, "asian": 189, "asid": [133, 134, 174, 201], "asin": [82, 84], "asinh": [82, 84], "ask": [0, 21, 26, 37, 44, 53, 74, 121, 122, 125, 133, 135, 136, 139, 142, 144, 146, 147, 148, 149, 176, 178, 179, 180, 182, 183, 203], "asp": 133, "aspect": [103, 121, 122, 143, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 202, 203, 204, 205], "aspra": 133, "assaria": 189, "assemblyai": 146, "assert": [72, 73, 90, 91, 177, 179, 180, 181, 182, 183, 184, 185], "assert_same_host": 131, "assertionerror": 72, "assess": 202, "asset": [122, 144, 146], "assign": [4, 8, 18, 20, 21, 38, 39, 40, 49, 54, 55, 56, 57, 58, 59, 64, 72, 77, 78, 79, 81, 86, 91, 93, 94, 95, 98, 99, 103, 106, 108, 122, 136, 143, 160, 161, 164, 167, 169, 170, 176, 178, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205], "assist": [133, 142, 146, 148, 192, 204], "associ": [1, 10, 18, 20, 30, 31, 57, 82, 86, 91, 98, 104, 122, 131, 133, 191, 194, 198, 199, 203, 205], "assosci": [180, 183], "assum": [2, 5, 8, 12, 14, 40, 121, 133, 135, 136, 164, 178, 183, 192], "assumpt": [133, 146, 194, 203], "assur": [133, 182, 197, 199, 203], "asterisk": [42, 79, 82], "asterix": 133, "asthenospher": 130, "astonish": 133, "astrai": 133, "astyp": [153, 157, 158, 160, 200, 205], "async": [90, 131, 133], "atan": [82, 84], "atan2": [82, 84], "atanh": [82, 84], "ate": 143, "ateli": 133, "ath": 41, "atk": 171, "atlanta": [105, 122], "atlanti": 42, "atleast": 195, "atleast_2d": 158, "atmospher": [143, 191], "atol": 177, "attach": [38, 40, 51, 92, 103, 133, 160, 174, 180, 182, 191, 192, 193, 194, 195, 198, 200, 202, 203, 205], "attachment_count": 131, "attack": [171, 189], "attain": 201, "attempt": [133, 180, 183, 191, 199, 203], "attend": [133, 146], "attent": [133, 136, 146, 178, 183, 198, 200, 205], "attic": 133, "attir": 133, "attitud": 143, "attn_dropout": 182, "attn_output": 182, "attr": [104, 105], "attract": [96, 133, 190], "attrib": 70, "attribut": [38, 39, 40, 41, 58, 61, 67, 72, 74, 76, 82, 84, 91, 96, 103, 105, 108, 130, 136, 143, 145, 156, 164, 167, 174, 177, 178, 180, 181, 182, 183, 185, 195, 197, 198, 203], "attributeerror": [58, 103, 104, 105, 198, 203], "attributeinfo": 136, "attributemethod": 91, "au": 34, "audi": [160, 161, 172], "audienc": [133, 204], "audino": 171, "audinomega": 171, "audio": [26, 146, 174, 175, 177, 178, 180, 183, 205], "aug": 89, "augment": [130, 177, 180, 181, 183], "augmentedassign": 91, "august": 133, "auli": 182, "auroru": 171, "australia": [12, 14, 150, 194], "australian": 148, "austrian": 133, "auth": [143, 147], "authent": [140, 141], "author": [121, 122, 133, 136, 143, 182], "authorit": 143, "authors_str": 143, "authors_tone_descript": 143, "auto": [122, 142, 146, 171, 172, 177, 178, 179, 181, 182, 183, 184, 185], "auto_transform": 180, "autogener": [121, 122], "autogpt": 122, "autograd": 175, "autom": [0, 1, 26, 49, 50, 122, 135, 140, 141, 142, 144], "automat": [0, 1, 8, 36, 37, 40, 53, 82, 92, 95, 103, 104, 108, 121, 132, 135, 140, 141, 144, 160, 175, 176, 178, 180, 182, 183, 190, 191, 194, 196], "automatic_transform": 181, "automobil": 160, "automobile_data": [160, 161, 172], "automobile_data1": 172, "autonom": [122, 143], "autonotebook": 137, "autopct": [150, 151], "autoregress": 203, "autoreload": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "autumn": [121, 189, 195], "autumn_r": 195, "ava": 70, "avail": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 53, 54, 55, 56, 58, 70, 82, 84, 86, 91, 93, 94, 96, 98, 105, 106, 121, 122, 133, 135, 136, 144, 148, 156, 160, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 192, 193, 194, 200, 201, 203, 204, 205], "availalbl": 175, "avalanch": 133, "avalugg": 171, "averag": [2, 5, 49, 76, 122, 133, 136, 143, 148, 151, 160, 161, 177, 178, 179, 180, 181, 183, 184, 185, 194, 199, 203, 205], "averaged_perceptron_tagg": 139, "avg": 171, "avgpool": 180, "avgpool2d": 177, "aviat": 138, "avocado": 97, "avoid": [38, 47, 48, 51, 58, 59, 70, 80, 85, 95, 103, 133, 136, 148, 154, 164, 174, 177, 182, 194, 203], "avov": [194, 195], "aw": [121, 133, 140, 141, 174, 183], "awai": [12, 13, 14, 15, 16, 17, 18, 21, 26, 41, 133, 148, 177, 181, 185, 190, 193, 194, 199, 201], "await": [90, 183, 191], "awar": [19, 20, 70, 133, 136, 142, 148, 174, 175, 177, 182, 183, 194, 198], "award": 203, "awesom": [26, 121, 122, 132, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 195, 213], "awk": 26, "ax": [9, 12, 15, 16, 27, 32, 113, 133, 164, 167, 174, 177, 178, 182, 183, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "ax1": [204, 206], "ax2": 204, "ax4": 204, "ax5": 204, "ax6": 204, "ax_joint": 194, "axarr": 151, "axes_styl": [190, 201], "axessubplot": [189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 206], "axew": 171, "axhlin": 205, "axi": [12, 15, 16, 17, 18, 19, 20, 29, 32, 133, 135, 150, 151, 153, 154, 156, 157, 160, 166, 171, 174, 177, 178, 180, 182, 183, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "axiomat": 133, "axis_nam": 164, "axisgrid": [191, 193, 194, 195, 196, 199, 202, 203, 204, 205], "axz": 41, "az": 189, "azelf": 171, "azumaril": 171, "azur": [174, 183], "azuril": 171, "b": [12, 32, 39, 47, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 70, 73, 76, 77, 78, 79, 82, 83, 84, 86, 92, 93, 94, 96, 97, 98, 104, 105, 106, 108, 131, 136, 140, 141, 144, 150, 153, 154, 155, 156, 160, 161, 163, 164, 165, 166, 167, 170, 174, 175, 182, 183, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "b1": 106, "b2": 106, "b2b": [122, 144, 148], "b3ac65e67ae9": 77, "b4c816180ad9": 96, "b712": 136, "b72af0bfcd83": 55, "b8ab82a1062c": 79, "b8eab4452d4b": 104, "b902": 133, "b942612e6b6a": 55, "b951d4fef2c8": 73, "b977fb738e16": 103, "b_0": 29, "b_n": 29, "ba": 182, "baat": 143, "baby_back_rib": 183, "babyagi": 122, "babydog": 105, "bac": 41, "back": [0, 9, 21, 54, 71, 79, 100, 106, 120, 121, 122, 131, 133, 135, 136, 138, 140, 141, 142, 143, 144, 146, 147, 153, 160, 164, 167, 168, 169, 170, 171, 175, 177, 178, 181, 182, 183, 191, 198, 199, 200, 201, 202, 203], "backbon": [180, 181, 182], "backend": [174, 190, 193, 205], "background": [37, 121, 147, 175, 182, 190, 192, 194, 200, 201, 203], "backlash": 41, "backlog": 144, "backoff": [140, 141], "backpropag": [19, 20, 175, 176], "backquot": 135, "backslash": [54, 71, 91, 93], "backspac": 54, "backtick": 135, "backward": [40, 50, 54, 71, 94, 108, 175, 176, 177, 178, 179, 180, 183, 184, 185, 200], "bacon": 134, "bad": [73, 133, 135, 136, 140, 143, 146, 148, 160, 175, 177, 180, 183, 199], "bad_str": 121, "badli": 133, "baevski": 182, "bag": [18, 20, 92, 177], "bagon": 171, "bai": 148, "baidu": [79, 92], "baklava": 183, "balanc": [133, 136, 147, 176, 180], "bald": 133, "ball": [49, 57, 93, 132], "baltoi": 171, "ban": 133, "banana": [41, 49, 55, 73, 93, 94, 96, 97, 122, 162], "band": [121, 122, 133, 203], "bandwidth": [196, 200, 203], "banett": 171, "banettemega": 171, "bang": 174, "bangladesh": 194, "bank": [0, 122, 131, 133, 183, 198], "baptisteri": 133, "bar": [41, 55, 57, 78, 142, 177, 178, 191, 197, 198, 199, 200, 202, 203, 205, 208], "bar1": 201, "bar2": 201, "bar3": 201, "barbaracl": 171, "barboach": 171, "barcelona": 150, "barchart": 150, "bare": [133, 176], "barebon": 177, "bargain": 133, "barh": 177, "bark": 105, "barn": 42, "barplot": [190, 197, 201, 202], "barrier": 143, "basculin": 171, "base": [1, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 18, 19, 20, 26, 29, 33, 34, 49, 50, 51, 53, 54, 59, 61, 62, 63, 67, 72, 73, 74, 80, 82, 84, 85, 95, 96, 100, 103, 104, 105, 108, 111, 120, 121, 122, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 157, 160, 161, 163, 164, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 192, 194, 195, 200, 201, 203, 205, 206, 209, 210], "base1": 105, "base2": 105, "base_compressor": 136, "base_retriev": 136, "baseclass": [103, 105], "baseexcept": [131, 133], "basel": 31, "baselin": [182, 201], "basement": 133, "basemodel": [121, 140], "basesslerror": 131, "baseto": 82, "basi": [26, 54, 55, 146, 180, 182, 193, 195, 196, 197, 199], "basic": [21, 25, 30, 31, 34, 39, 40, 41, 51, 53, 67, 74, 78, 82, 103, 121, 133, 137, 138, 146, 156, 160, 175, 176, 178, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214], "basicconfig": 136, "basicli": 56, "basicmethod": 91, "basil": 121, "basin": 133, "basketbal": 136, "bastiodon": 171, "bat": 105, "batch": [133, 138, 144, 178, 179, 180, 181, 182, 183, 184, 185], "batch_first": 182, "batch_messag": 134, "batch_siz": [177, 178, 179, 180, 181, 182, 183, 184, 185], "batchmat": 133, "batchnorm2d": 180, "bath": 133, "bathingsoap": 151, "bathingsoapsalesdata": 151, "bathroom": 174, "batteri": 21, "battl": 54, "bayleef": 171, "baz": 55, "bb": 41, "bb99b9cebaa8": 57, "bbb1": 136, "bbox_inch": 32, "bc9e07fcbe69": 58, "bcaaeab6bf17": 95, "bce": 135, "bceloss": [175, 176], "bcelosswithlogit": 176, "bcewithlogitsloss": 176, "beach": [121, 183], "beak": 49, "bear": [46, 133], "bearabl": 133, "beartic": 171, "beat": 183, "beaten": 121, "beauti": [41, 133, 143, 147, 148, 178, 181, 182, 183, 189, 203], "beautifi": 70, "beautifli": 171, "beautifulli": [133, 183, 198], "beautifulsoup": [26, 140, 141, 147], "becam": [0, 121, 122, 133], "becasu": 90, "becauas": 137, "becaus": [8, 21, 26, 29, 37, 39, 49, 50, 51, 54, 62, 72, 73, 76, 77, 78, 79, 81, 90, 91, 92, 93, 94, 95, 97, 103, 104, 105, 108, 121, 122, 130, 133, 135, 136, 139, 141, 142, 143, 146, 147, 148, 161, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "becom": [0, 21, 37, 40, 49, 50, 54, 77, 108, 121, 122, 133, 136, 139, 143, 160, 161, 162, 175, 176, 183, 203], "becuas": 143, "bed": 133, "bedroom": [1, 133, 174], "bee": 197, "beedril": 171, "beedrillmega": 171, "beef_carpaccio": 183, "beef_tartar": 183, "been": [4, 8, 15, 16, 17, 18, 19, 20, 41, 51, 54, 55, 56, 57, 70, 72, 73, 86, 92, 108, 120, 121, 122, 133, 135, 136, 137, 139, 142, 145, 146, 158, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 194, 197, 198, 200, 202, 203, 204, 205], "beeswarm": [197, 198], "beet_salad": 183, "befor": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 40, 42, 49, 50, 53, 59, 61, 67, 68, 71, 73, 77, 78, 79, 81, 86, 95, 100, 104, 105, 108, 122, 133, 134, 136, 143, 144, 147, 148, 157, 160, 161, 162, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 205], "beforehand": 50, "began": 205, "begin": [27, 29, 30, 31, 33, 34, 40, 49, 54, 55, 56, 67, 70, 82, 86, 91, 92, 104, 106, 108, 113, 121, 122, 131, 133, 136, 146, 147, 169, 170, 171, 174, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205], "beginn": [24, 100, 183, 193, 199, 200], "begun": [133, 136], "behav": [70, 93, 106, 108, 156], "behavior": [1, 29, 53, 86, 103, 104, 105, 108, 165, 169, 170, 174, 180, 193], "behaviour": [29, 97], "beheeyem": 171, "behind": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 80, 81, 122, 143, 148, 174, 175, 177, 178, 181, 182, 197, 200, 202, 205], "behold": 133, "beignet": 183, "being": [1, 8, 15, 16, 19, 20, 26, 29, 40, 41, 50, 55, 57, 58, 76, 79, 94, 103, 105, 110, 122, 132, 133, 135, 136, 139, 143, 146, 147, 148, 174, 175, 176, 177, 178, 180, 181, 182, 183, 190, 193, 194, 195, 197, 199, 201, 203, 204], "bel": [122, 133], "beldum": 171, "belgium": [122, 150, 194], "belief": 133, "believ": [133, 135, 136, 141, 144, 146, 198, 203], "bell": [54, 121], "bella": [49, 103, 104, 108], "belli": 133, "bellossom": 171, "bellsprout": 171, "belong": [4, 11, 53, 93, 94, 103, 104, 133, 176, 182], "belov": 133, "below": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 37, 40, 45, 46, 49, 50, 51, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 76, 79, 80, 82, 85, 86, 89, 90, 92, 93, 96, 97, 103, 105, 106, 121, 122, 133, 135, 136, 137, 140, 141, 143, 144, 146, 147, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 183, 190, 194, 196, 204, 205, 206], "ben": 103, "bench": 133, "benchmark": [10, 18, 20, 176, 178, 180, 182, 183], "bend": [133, 193], "beneath": 133, "benedictevan": 143, "benefici": [135, 163, 180], "benefit": [54, 82, 105, 140, 141, 176, 177, 178, 179, 180, 182, 183, 184, 185], "benevol": 122, "bengaluru": 140, "benignli": 133, "bent": 133, "benz": 172, "beret": 181, "bergman": 121, "bergmit": 171, "bergum": 183, "berkelei": 144, "bert": [182, 212], "bertop": 146, "besid": [121, 122, 133, 136, 143, 153], "best": [1, 2, 5, 26, 37, 39, 49, 51, 54, 55, 70, 87, 100, 121, 122, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 151, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 192, 193, 194, 195, 197, 200, 203, 213, 214], "best_match": 122, "best_model": 181, "best_model_path": 181, "bet": [121, 133], "beta": [33, 83, 178, 180, 182, 193], "beta_": 182, "betavari": 83, "betoken": 133, "better": [12, 14, 21, 38, 41, 49, 50, 68, 86, 91, 100, 105, 106, 108, 121, 133, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 160, 174, 175, 176, 178, 180, 181, 182, 183, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 212], "betw": 12, "between": [0, 1, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 31, 49, 50, 51, 53, 54, 55, 56, 58, 66, 80, 82, 83, 86, 97, 104, 108, 121, 122, 133, 136, 138, 141, 143, 145, 146, 147, 148, 156, 157, 160, 174, 175, 176, 177, 179, 180, 181, 182, 183, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206], "bewar": [178, 181, 182], "beyond": [176, 199, 203], "bfa": 133, "bfc5aa62a0ff": 97, "bfee": 136, "bfoo": 41, "bia": [8, 143, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 212], "bias": [175, 181], "bibarel": 171, "bibimbap": 183, "bibl": 191, "bicub": [180, 181, 183], "bidirect": 182, "bidoof": 171, "big": [0, 12, 13, 14, 121, 122, 133, 136, 143, 145, 146, 147, 148, 175, 177, 178, 180, 181, 182, 184, 203, 204, 205, 212, 214], "bigger": [5, 8, 9, 11, 17, 18, 19, 20, 40, 46, 96, 135, 143, 155, 181, 182, 183, 195, 197, 204], "biggest": [133, 136, 143, 154, 177, 178, 180, 181, 182, 183, 190], "biggr": 29, "bilinear": [178, 181, 182, 184, 185], "bill": [39, 49, 54, 76, 79, 133, 143, 193, 194, 197, 198, 199, 200, 203, 205], "billgat": 143, "billion": 174, "billionair": 133, "bin": [86, 97, 139, 150, 174, 183, 191, 194, 196, 200, 201, 205], "binacl": 171, "binari": [6, 15, 16, 17, 18, 21, 53, 54, 70, 86, 91, 93, 96, 97, 100, 175, 176, 177, 195], "binary_r": 195, "binary_sum": 86, "bind": [98, 104, 198], "binder": [0, 26], "binomi": 194, "biographi": 121, "biolog": [8, 19, 20], "biologi": [122, 143], "bird": [103, 105, 121, 133], "birth": [41, 133, 194], "birth_year": [76, 79, 92], "birthdai": 76, "bisharp": 171, "bit": [5, 6, 9, 11, 17, 18, 19, 20, 26, 56, 83, 97, 100, 121, 133, 134, 135, 136, 140, 141, 142, 146, 147, 148, 174, 175, 176, 178, 180, 181, 182, 183, 191, 195, 206], "bitter": [180, 181], "bitwis": [91, 106], "bivarait": 194, "bivari": [196, 202, 205], "bizarr": 133, "bject": 70, "blab": 146, "black": [0, 8, 11, 121, 189, 197, 198, 201], "blackwel": 133, "blank": [86, 147], "blastois": 171, "blastoisemega": 171, "blaziken": 171, "blazikenmega": 171, "bleakest": 133, "blend": 205, "blind": 192, "blissei": 171, "blister": 133, "blitzl": 171, "blob": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 176, 183, 204], "blobmodel": 176, "block": [7, 21, 44, 45, 46, 47, 48, 49, 50, 51, 70, 73, 76, 91, 103, 111, 133, 135, 147, 160, 174, 175, 178, 183, 196, 203, 206, 210], "block_1": [177, 184, 185], "block_2": [177, 184, 185], "blog": [0, 66, 108, 144, 146, 147, 179, 181, 182, 183, 213, 214], "blood": [105, 133, 203], "blood_pressur": 203, "bloom": 133, "bloomberg": 144, "blow": 133, "blown": 133, "blu": 103, "blue": [49, 91, 122, 133, 141, 150, 174, 175, 177, 181, 183, 192, 193, 195, 198, 206], "blueprint": [103, 104, 108], "blues_r": 195, "blurt": [133, 136], "bm25": 136, "bm25_retriev": 136, "bm25retriev": 136, "bmatrix": [30, 31, 33, 34], "bmv": 172, "bmw": [105, 141, 172], "board": [140, 141], "board_token": [140, 141], "boat": 133, "bob": [92, 122, 141], "bobbi": 141, "bodi": [36, 45, 46, 47, 48, 49, 50, 51, 76, 77, 81, 103, 105, 122, 131, 135, 160, 161, 171, 172, 182, 189], "body_camera": 189, "body_plain": 131, "body_po": 131, "bog": 182, "bogot\u00e1": 122, "boi": 133, "boil": 121, "bokeh": 194, "bold": [133, 150, 182, 200, 201, 203, 205], "bolder": 205, "boldor": 171, "bolt": 146, "bonafid": 122, "bonapart": 135, "bond": [54, 96, 133], "bone": 195, "bone_r": 195, "bonefi": [140, 141], "bonsli": 171, "bonu": [141, 148, 183, 201], "book": [0, 7, 22, 27, 92, 106, 110, 111, 113, 121, 122, 125, 133, 136, 143, 146, 149, 183, 187, 192, 201, 209, 210, 213], "bookmark": 202, "bool": [104, 105, 177, 178, 181], "bool_a": 155, "bool_idx": 155, "boolean": [17, 18, 19, 20, 39, 47, 54, 82, 91, 104, 142, 153, 154, 160, 164, 165, 166, 167, 169, 170], "boom": 133, "boost": [56, 177], "booster": 191, "boot": [18, 20, 141, 177], "boot_trac": 203, "bootstrap": [147, 201, 203], "border": 122, "bore": [51, 133, 136, 183], "born": [41, 73, 121, 182], "boss": 133, "boston": [121, 122, 133, 142], "bot": [34, 121, 122, 125, 140, 143, 147, 148, 149], "both": [0, 17, 18, 19, 20, 37, 39, 41, 46, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 67, 70, 71, 73, 77, 78, 82, 91, 93, 97, 98, 103, 105, 108, 110, 121, 122, 133, 136, 139, 147, 156, 160, 161, 162, 164, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 198, 200, 201, 205], "bother": [133, 182, 191, 193], "bottl": 136, "bottleneck": [144, 177, 181], "bottom": [17, 18, 19, 20, 26, 121, 133, 140, 141, 155, 160, 176, 177, 183, 191, 199, 201, 203], "bottom_plot": 201, "bottombar": 201, "bottomrow": 163, "bouffal": 171, "bought": [133, 136, 178], "bounc": 133, "bound": [30, 31, 38, 39, 72, 83, 100, 104, 133, 160, 175, 198], "boundari": [6, 10, 176], "bowl": 121, "bowlder": 133, "box": [110, 121, 122, 140, 141, 146, 200, 201, 202, 203, 205, 208], "boxen": 203, "boxenplot": 203, "boxplot": [150, 190, 192, 197, 198, 199, 200, 203, 205], "boxprop": [150, 197], "boyc": 122, "bp": 150, "br": [140, 141], "bra": 122, "brace": [54, 57, 58, 91, 94, 96, 133], "bracket": [37, 45, 49, 50, 54, 55, 56, 57, 59, 91, 93, 138, 154, 155, 174], "braden": 131, "brain": [8, 19, 20, 133, 143, 204], "braixen": 171, "branch": 133, "brand": [136, 141, 148, 205], "bratwurst": 134, "brave": 122, "braviari": 171, "brazil": 150, "brbg": 195, "brbg_r": 195, "bre": 122, "bread": [54, 138, 183], "bread_pud": 183, "break": [8, 24, 36, 44, 52, 73, 74, 76, 82, 90, 91, 93, 96, 121, 131, 133, 143, 175, 176, 177, 178, 181, 182, 183, 204, 205], "breakdown": [183, 186, 187, 197], "breakeven": 133, "breakfast_burrito": 183, "breakthrough": 143, "breathless": 133, "breez": 199, "breloom": 171, "breviti": [155, 181, 182], "brew": 192, "brewer": 192, "brex": 147, "brg": 195, "brg_r": 195, "brick": 182, "bridg": [133, 182, 183], "brief": [29, 30, 31, 67, 70, 83, 84, 104, 144, 146, 157], "briefli": [133, 134, 192], "bright": [133, 192], "brighten": 133, "brighter": 143, "brilliant": [54, 136], "bring": [54, 70, 121, 122, 132, 133, 136, 137, 143, 147, 174, 177, 182, 193, 195, 199, 201, 205], "british": 133, "broad": 182, "broader": [198, 203], "broadli": 72, "brochur": 148, "brock": 189, "broke": 133, "broken": [40, 80, 133, 139], "bronzong": 171, "bronzor": 171, "brooklyn": 198, "broswer": 183, "broth": 134, "brother": [103, 121, 141], "brought": 133, "brown": [121, 141, 189, 192], "brows": [122, 214], "browser": [26, 133, 183, 192], "brrrr": [178, 182], "bruce": 79, "brush": 133, "brute": 21, "bruyn": 150, "brv": 135, "bs4": [140, 141, 147], "bsd": [160, 171, 172], "btw": [121, 153], "bu": 174, "bubbl": 133, "buchheit": 135, "buck": 189, "bucket": 192, "bud": 139, "budew": 171, "budget": 133, "bue": 206, "buffer": [70, 131], "bug": [131, 133, 136, 171], "bugn": 195, "bugn_d": 201, "bugn_r": 195, "bui": [133, 136], "build": [0, 9, 12, 14, 15, 16, 21, 26, 37, 40, 41, 103, 104, 110, 121, 122, 132, 133, 134, 135, 136, 139, 140, 141, 144, 146, 147, 148, 160, 174, 180, 182, 190, 196, 198, 212, 214], "builder": 133, "built": [7, 26, 36, 38, 40, 49, 51, 53, 59, 70, 73, 74, 76, 81, 86, 87, 89, 91, 96, 98, 103, 105, 106, 111, 122, 132, 133, 144, 146, 148, 151, 160, 164, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 210], "builtin": [26, 86, 174], "builtwith": [140, 141], "buizel": 171, "bulbasaur": 171, "bulk": [146, 197], "bulldoz": 133, "bullet": [135, 146, 147, 148, 178], "bullet_point": 148, "bullshit": 137, "bunch": [1, 54, 121, 122, 133, 136, 143, 147, 174, 175, 176, 177, 178, 180, 181, 183, 191], "buneari": 171, "bunnelbi": 171, "bupu": 195, "bupu_r": 195, "bureaucrat": 133, "burger": 140, "buri": 133, "burlington": 189, "burmi": 171, "burn": [133, 143], "burndown": 144, "bush": 133, "busi": [1, 26, 122, 133, 136, 143, 144, 146, 147, 148, 160, 193, 198, 201], "bussi": 26, "butter": [54, 134], "butterfre": 171, "button": [133, 148], "buyer": 133, "bw": [200, 202], "bwr": [195, 202], "bwr_r": 195, "bx": 194, "bye": 148, "bylaw": 133, "byo": 122, "bypass": 51, "byte": [70, 71, 160, 181, 182, 183], "bytetensor": 178, "c": [0, 9, 11, 24, 26, 31, 40, 41, 47, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 70, 71, 72, 73, 76, 81, 82, 84, 90, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 108, 133, 135, 139, 143, 150, 151, 154, 155, 156, 157, 160, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 189, 192, 194, 196, 197, 198, 199, 201, 206], "c0": [191, 192], "c00e5d7d3c3": 72, "c014293b63c7478c": 121, "c02acf54079b": 172, "c1": [104, 105, 192], "c2": 192, "c3": 192, "c3f637926d7e": 70, "c4": 192, "c454c1331524": 74, "c5": 192, "c6": 192, "c7": 192, "c761920b81b0": 73, "c8": 192, "c8f749f7a9ca": 172, "c9": 192, "c92d9f2b36de": 94, "c_name": 105, "ca": [41, 121, 122, 142, 144, 189], "cab": [41, 203], "cabbag": 73, "cabin": 133, "cabxz": 41, "cach": [121, 183, 198], "cacnea": 171, "cacturn": 171, "cacul": [175, 176], "cad": 26, "cadenc": [140, 141], "caffein": 136, "cake": [133, 183], "calcuat": 176, "calcul": [5, 8, 9, 12, 14, 29, 34, 45, 49, 51, 53, 66, 76, 84, 91, 96, 97, 103, 105, 108, 133, 160, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 190, 192, 194, 196, 197, 198, 200, 201, 203], "calcula": 25, "calculate_ag": [76, 79], "calculate_area": 103, "calculu": [133, 212], "calculus_fourierseries__util": 29, "calendar": [131, 144, 203], "califonya": 121, "california": [121, 133], "californian": 133, "call": [2, 8, 9, 19, 20, 21, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 68, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 122, 125, 131, 133, 135, 137, 138, 139, 143, 144, 146, 149, 155, 162, 163, 164, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 192, 198, 200, 201, 203, 204, 205, 206], "callabl": [36, 39, 82, 167, 198, 200], "callablemethod": 91, "callback": [134, 140, 141], "callback_manag": [131, 133, 134], "callbackmanag": 134, "caller": 37, "calm": 133, "calul": 175, "cambridg": [133, 200], "came": [21, 122, 133, 137, 142, 178, 180], "camelcas": 92, "camera": [133, 177, 189], "camerupt": 171, "cameruptmega": 171, "can": [0, 1, 5, 7, 8, 12, 14, 19, 20, 21, 24, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 111, 113, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 181, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 213, 214], "canada": [12, 14, 122, 150], "canadian": 122, "canb": 32, "canberra_dist": 32, "cancellederror": 133, "cancer": 133, "candi": [104, 133], "candid": 183, "canidaefamili": 105, "cannot": [37, 39, 40, 42, 49, 51, 53, 54, 56, 57, 58, 63, 70, 72, 73, 77, 78, 79, 81, 82, 90, 92, 93, 94, 95, 96, 97, 100, 103, 108, 157, 161, 164, 166, 174, 178, 189, 195, 201], "canon": [26, 133], "canva": 133, "canvas": 133, "cap": [174, 178, 201], "capabl": [1, 121, 142, 174, 175, 176, 177, 178, 180, 182, 183, 205], "capac": [143, 176, 183], "caper": 133, "capit": [32, 54, 82, 92, 121, 122, 133, 136, 146], "capita": [12, 14], "capital_c": 92, "capitalinfo": 122, "capitalis": 54, "capitalist": 136, "capres": 121, "capsiz": 201, "captial": 54, "caption": 177, "captur": [21, 73, 83, 97, 141, 182, 185], "capword": [82, 92], "car": [1, 8, 104, 105, 121, 122, 133, 141, 160, 161, 174, 177, 180, 182, 183, 189], "car_horsepow": 172, "car_info": 105, "car_manufactur": 172, "car_park": 174, "car_pric": 172, "caramel": 134, "carbink": 171, "carbonara": 121, "card": [122, 133, 176], "care": [36, 70, 133, 135, 136, 138, 141, 143, 156, 160, 174, 178, 181, 182, 193, 194, 203, 206], "career": [0, 1, 140, 141, 144, 146, 213, 214], "carefulli": 51, "carnegi": [8, 133], "carnivin": 171, "carolin": 121, "carpricedf": 172, "carracosta": 171, "carri": [53, 58, 97, 106, 122, 133, 136, 170], "carriag": 54, "carrot": [73, 134, 183], "cars_schema": 141, "carsdf": 172, "carsdf1": 172, "carsdf2": 172, "carshorsepowerdf": 172, "carson": [79, 133], "cart": 133, "carter": [103, 143], "cartesian": 12, "cartoon": 133, "carvanha": 171, "cascoon": 171, "case": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 38, 39, 41, 45, 46, 49, 51, 53, 54, 57, 58, 68, 72, 73, 82, 90, 91, 92, 93, 96, 97, 98, 100, 103, 105, 108, 121, 125, 133, 135, 136, 138, 139, 140, 141, 144, 147, 148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 183, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 212], "cash": [122, 147], "cast": [133, 154], "castform": 171, "cat": [8, 49, 93, 94, 108, 176, 177, 182, 195], "cat1": 108, "cat2": 108, "cat_po": 198, "catalyz": 143, "catbackward0": 182, "catch": [44, 74, 133, 141, 200, 205], "cateat": 150, "categor": [1, 6, 15, 16, 17, 18, 82, 146, 160, 161, 189, 192, 193, 196, 199, 200, 201, 202, 203, 204, 205, 208], "categori": [11, 15, 16, 18, 20, 44, 53, 72, 94, 121, 135, 140, 142, 146, 171, 176, 183, 189, 192, 195, 197, 201, 204], "categoricalindex": 160, "category_point": [193, 195], "caterpi": 171, "cathi": 49, "catplot": 203, "caught": [36, 51, 73], "caus": [39, 40, 51, 58, 70, 72, 73, 74, 133, 136, 176, 178, 183], "caution": 146, "cautiou": 205, "cayenn": 134, "cb": [140, 141], "cb8ac02fbcd3": 72, "cbar": 206, "cbook": 198, "cca2": 122, "cca3": 122, "ccn3": 122, "cd": [82, 183], "cde": 41, "cdn": 150, "cdot": [29, 30, 31, 33, 34, 174, 176, 182], "cdotp": 32, "ce": [122, 146], "ceil": [17, 18, 19, 20, 82, 84, 133, 158], "ceil_mod": [177, 178, 184, 185], "celebi": 171, "celebr": [140, 141], "celeri": 134, "cell": [17, 18, 19, 20, 26, 38, 57, 58, 77, 105, 122, 174, 175, 177, 178, 181, 182, 183, 186, 190, 206], "cell_cont": 38, "celsiu": [40, 121, 142], "center": [29, 54, 73, 96, 133, 135, 141, 143, 157, 176, 182, 191, 196, 199, 200, 201, 204], "centimet": [10, 11, 15], "centimetr": 189, "centr": 193, "central": [143, 177, 189, 193, 197, 199, 200, 201, 203], "centric": 147, "centroid": [4, 11, 135], "centroid_id": 11, "centuri": [62, 63, 121, 133], "ceo": [130, 133, 136, 146, 148], "cert": 131, "certain": [2, 12, 13, 14, 15, 16, 17, 18, 33, 41, 44, 51, 54, 56, 63, 65, 72, 73, 82, 87, 133, 142, 160, 174, 176, 177, 178, 180, 181, 183, 190, 199], "certainli": [133, 182, 183, 191, 194, 197, 200, 201, 203, 204], "certainti": 133, "cezann": 133, "ch": 49, "chaang": 171, "chain": [21, 47, 92, 97, 105, 122, 125, 130, 131, 133, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 161, 164, 165, 170], "chain_new": 122, "chain_typ": [121, 122, 133, 135, 137, 139, 144, 146, 147, 148], "chain_type_kwarg": 146, "chair": 133, "chairman": 203, "challeng": [0, 54, 143, 147, 177, 181, 182, 183, 204], "champion": 148, "chanc": [21, 133, 143, 174, 175, 176, 177, 178, 181, 182, 185], "chandelur": 171, "chandler": 189, "chang": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 39, 45, 49, 50, 53, 58, 59, 66, 72, 73, 76, 77, 78, 79, 82, 94, 95, 96, 100, 103, 104, 105, 106, 121, 122, 133, 135, 136, 140, 141, 142, 143, 150, 154, 155, 157, 160, 163, 164, 165, 166, 167, 169, 175, 176, 177, 178, 179, 182, 183, 184, 185, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "changabl": 183, "change_to_upp": 39, "changelog": 176, "channel": [131, 133, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185], "chansei": 171, "chaotic": 133, "chapter": [54, 143, 179, 180, 181, 182, 183], "char": [37, 49, 93], "charact": [26, 44, 49, 50, 51, 62, 63, 70, 82, 89, 91, 92, 94, 96, 122, 132, 133, 135, 137, 143, 146, 167, 190], "character": 143, "characterist": [1, 6, 8, 58, 103, 171, 172, 183, 203], "charactertextsplitt": 122, "charcter": 54, "charg": [133, 183], "charizard": 171, "charizardmega": 171, "charm": [121, 133], "charmand": 171, "charmeleon": 171, "chart": [144, 201, 203, 204], "chase": [133, 136, 189], "chat": [122, 125, 132, 133, 140, 141, 142, 143, 146, 147, 148], "chat_histori": 122, "chat_model": [121, 122, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148], "chat_prompt": [132, 134, 146, 148], "chat_prompt_combin": [146, 148], "chat_prompt_map": [146, 148], "chat_prompt_with_valu": 134, "chatbas": 122, "chatbot": [142, 144], "chatcomplet": 142, "chatgener": 134, "chatgpt": [121, 125, 135, 142, 146], "chatmessag": [134, 142], "chatmessagehistori": 121, "chatopenai": [121, 122, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148], "chatot": 171, "chatpdf": 122, "chatprompttempl": [121, 122, 132, 134, 138, 146, 148], "chaturvedi": [0, 76, 103], "chdir": 82, "che": [41, 122], "cheap": [121, 133, 136], "cheaper": [140, 141], "cheapli": 133, "cheat": [152, 159, 173, 175], "cheatham": 133, "cheatsheet": 175, "cheb": 32, "chebyshev_dist": 32, "check": [0, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 58, 59, 62, 63, 70, 73, 76, 78, 82, 94, 97, 104, 105, 113, 121, 122, 132, 133, 135, 136, 137, 140, 141, 143, 146, 147, 148, 157, 160, 165, 169, 174, 176, 177, 178, 179, 180, 181, 184, 185, 190, 192, 194, 195, 198, 203, 205], "check_latest_vers": [121, 135, 136], "checkbox": 26, "checkout": [174, 182], "checkpoint": 171, "checkr": 147, "chees": 121, "chef": 181, "chelsea": 205, "chemistri": 143, "cher": 41, "cherbourg": [199, 201], "cherrim": 171, "cherubi": 171, "chesnaught": 171, "chespin": 171, "chess": 146, "chevrolet": 172, "chicago": 122, "chicken": [134, 176, 177], "chikorita": 171, "child": [70, 103, 105, 136, 137, 199], "child_splitt": 136, "childbirth": 143, "childmethod": 105, "children": [133, 137, 143, 146, 201], "chimchar": 171, "chimecho": 171, "chinchou": 171, "ching": 41, "chingl": 171, "chip": [143, 183], "chirag": 104, "chocol": 183, "choic": [0, 47, 53, 82, 83, 121, 122, 133, 134, 136, 142, 143, 158, 178, 192, 193, 194, 196, 197, 198, 199, 203], "choos": [2, 9, 73, 122, 133, 135, 140, 141, 142, 146, 154, 160, 161, 175, 176, 177, 180, 181, 183, 192, 193, 198, 199, 201, 203, 204, 206], "choose_colorbrewer_palett": 192, "choose_cubehelix_palett": 192, "chop": 121, "chopper": 133, "chore": 133, "chose": [1, 26, 133, 135, 180, 182, 194], "chosen": [83, 133, 181, 198, 205], "chp": 54, "chracter": 96, "christina": 148, "christma": 137, "chroma": [121, 136, 145], "chromadb": 139, "chronometri": 203, "chunk": [76, 121, 122, 131, 133, 135, 136, 144, 145, 146, 147, 148, 171, 177, 182, 192, 193, 199, 203], "chunk_overlap": [121, 122, 133, 135, 136, 137, 139, 144, 145, 146, 147, 148], "chunk_siz": [121, 122, 133, 135, 136, 137, 139, 144, 145, 146, 147, 148], "chunk_summari": 135, "chunksiz": 171, "church": 133, "churn": 133, "chw": [177, 178], "ci": [174, 193, 195, 201, 202, 203], "ci_band": 203, "ci_bar": 203, "cider": 134, "cinccino": 171, "cioc": 122, "cir": 103, "circl": [84, 103, 133, 151, 181], "circlemodelv0": 176, "circlemodelv1": 176, "circlemodelv2": 176, "circu": 133, "circular": 176, "circumfer": 84, "circumst": [73, 199], "cirqu": 133, "citi": [70, 73, 92, 103, 121, 122, 133, 141, 142, 146, 150, 161, 164, 189, 198], "citizen": [38, 133], "cividi": [192, 195, 198], "cividis_r": 195, "civil": 133, "cl": [63, 108, 133], "cl100k_base": 147, "claim": [133, 135, 189], "clamperl": 171, "clara": 133, "clarifi": [41, 73, 98, 141, 146, 190], "clariti": [135, 140, 141, 146, 182], "clark": [39, 76, 79, 96], "clasess": 16, "class": [10, 11, 15, 16, 17, 18, 19, 20, 26, 36, 37, 38, 39, 42, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 70, 72, 73, 82, 85, 90, 91, 92, 94, 95, 96, 98, 106, 108, 121, 122, 130, 133, 136, 138, 140, 141, 153, 154, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 177, 179, 180, 181, 184, 185, 193, 197, 199, 200, 201, 203, 204, 205, 206], "class1": 105, "class2": 105, "class_1": 178, "class_2": 178, "class_dict": [178, 184, 185], "class_embed": 182, "class_idx": 178, "class_nam": [177, 178, 179, 180, 181, 182, 184, 185], "class_names_found": 178, "class_suit": 103, "class_to_idx": [178, 184, 185], "class_token": 182, "class_token_embedding_expand": 182, "class_token_embedding_singl": 182, "class_token_posit": 182, "classic": [121, 134, 146, 178], "classif": [1, 11, 143, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 204, 212], "classifi": [1, 6, 11, 15, 16, 17, 18, 19, 20, 72, 176, 177, 178, 179, 180, 182, 183, 184, 185, 201], "classification_report": 176, "classifici": 176, "classinfo": 105, "classmethod": [61, 66], "classnam": [103, 178], "classon": 103, "classtwo": 103, "clauncher": 171, "claus": 150, "clawitz": 171, "claydol": 171, "clayton": 79, "clean": [1, 41, 70, 73, 80, 85, 91, 122, 125, 133, 138, 139, 140, 141, 142, 147, 148, 165, 166, 184, 212], "cleaner": [37, 156], "cleans": 203, "clear": [15, 16, 37, 58, 85, 108, 133, 136, 143, 177, 181, 191, 201], "clearer": [74, 91, 191, 205], "clearest": 133, "clearli": [40, 133, 174], "clefabl": 171, "clefairi": 171, "cleffa": 171, "clever": [133, 142], "clich": 41, "click": [0, 26, 133, 177, 183, 213, 214], "client": [131, 133, 204], "climat": 143, "climax": 143, "climb": 133, "clip": 182, "clipboard": 160, "cllose": 193, "clni": 32, "cloak": 171, "clock": [62, 63, 203], "clone": [133, 180, 181, 182, 183], "close": [5, 38, 72, 73, 86, 100, 105, 122, 131, 133, 135, 137, 138, 139, 142, 143, 147, 148, 160, 175, 176, 177, 178, 181, 182, 183, 191, 194, 197, 198, 200, 201, 202, 203, 204], "closer": [36, 95, 108, 133, 136, 175, 176, 178, 194], "closest": [133, 135, 138, 183], "closest_centroids_id": 11, "closest_index": 135, "closest_indic": 135, "closeup": 133, "closur": [24, 39, 43, 133], "closure_result": 38, "clot": 133, "cloth": [6, 8, 18, 20, 136, 177], "cloud": [122, 140, 141, 146, 148, 174, 179, 182, 183, 203, 214], "cloudi": [6, 133], "clove": 121, "cloyster": 171, "cls_name": 178, "club": [133, 136, 150, 205], "clue": 143, "clung": 122, "clunki": 133, "cluster": [1, 4, 135, 176, 199, 200, 204, 206, 208, 212], "cluster_centers_": 135, "cluster_std": 176, "clustergrid": 207, "clustermap": 207, "cm": [11, 15, 27, 113, 176], "cmap": [17, 18, 19, 20, 27, 113, 176, 177, 192, 195, 198, 204, 206, 207], "cmap_cycl": 195, "cmath": 84, "cmd": 181, "cmo": 148, "cmp": [55, 56, 57], "cmrmap": 195, "cmrmap_r": 195, "cmu": 133, "cn": 192, "cnn": [178, 179, 182, 184, 185], "cnt": 49, "co": [29, 34, 53, 82, 84, 98, 122, 143, 144, 147, 148, 153, 156, 180, 183, 189, 205], "coach": 144, "coars": 133, "coast": [133, 136], "coat": [8, 18, 20, 177, 181], "coatofarm": 122, "coats_of_arm": 122, "cobalion": 171, "code": [0, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 59, 61, 67, 70, 71, 73, 76, 77, 79, 80, 81, 82, 85, 86, 87, 90, 91, 93, 96, 97, 103, 105, 108, 111, 121, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 153, 156, 174, 175, 176, 179, 180, 183, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 210], "codeobject": 91, "coeffici": [29, 153, 191, 193, 204], "coefici": 29, "coerc": [53, 206], "coercion": 53, "coexist": 194, "cofagrigu": 171, "coffe": [137, 201], "cofound": 133, "cognat": 133, "coher": 143, "coin": [135, 178], "coinbas": 147, "col": [122, 155, 160, 164, 167, 169, 171, 177, 191, 193, 195, 197, 199, 200, 202, 203, 205], "col1": [160, 161, 162, 164, 165, 168], "col2": [160, 161, 162, 164, 165, 168], "col3": 160, "col_clust": 207, "col_fil": 170, "col_l": 197, "col_label": [160, 162, 164], "col_label1": 169, "col_label2": 169, "col_level": 170, "col_nam": [164, 180, 181, 182, 183, 202], "col_ord": [193, 202, 205], "col_posit": 160, "col_r1": 155, "col_r2": 155, "col_var": 202, "col_width": [180, 181, 182, 183], "col_wrap": [193, 195, 202, 205], "colab": [0, 25, 26, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185], "cold": [27, 54, 113, 133, 136], "coldest": 133, "coldest_th": 40, "collabor": [0, 1, 131, 133, 144], "collar": 133, "colleagu": [133, 146], "collect": [1, 8, 26, 36, 49, 50, 57, 58, 68, 71, 72, 82, 94, 98, 104, 133, 135, 139, 140, 141, 146, 158, 168, 176, 178, 180, 182, 197, 198, 205], "collection_nam": 136, "collector": [70, 146], "colleg": [103, 121, 133, 135, 136, 146], "collid": [85, 98], "collison": 133, "colombi": 122, "colombia": 122, "colombian": 122, "colombien": 122, "colombienn": 122, "colon": [45, 54, 55, 56, 57, 72, 76, 133], "coloni": 133, "color": [4, 8, 12, 27, 49, 103, 104, 113, 130, 131, 133, 135, 140, 141, 147, 150, 151, 177, 178, 182, 184, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208], "color_channel": [174, 177, 178, 180, 181, 182, 184, 185], "color_cod": [195, 205], "color_map": [17, 18, 19, 20, 131], "color_palett": [192, 201], "colorbrew": 192, "colormap": [192, 201, 207], "colosseum": 121, "colour": [174, 176, 177, 180, 181, 182, 183, 204, 206], "colour_channel": 174, "column": [0, 9, 13, 15, 16, 17, 18, 19, 20, 21, 33, 49, 59, 70, 121, 122, 150, 153, 154, 155, 156, 157, 171, 174, 177, 180, 182, 183, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207], "column_1": 205, "column_2": 205, "column_current_nam": 167, "column_label": [160, 168], "column_nam": 160, "column_on": 160, "column_posit": 160, "col\u00f4mbia": 122, "com": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 76, 79, 92, 99, 121, 122, 131, 133, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185], "comb": 82, "combe": 171, "combin": [5, 9, 11, 12, 14, 15, 21, 54, 55, 56, 73, 90, 92, 97, 105, 121, 122, 133, 134, 135, 136, 144, 146, 147, 148, 154, 162, 169, 174, 175, 176, 177, 180, 181, 183, 196, 197, 200, 202, 203, 205], "combine_doc": 133, "combine_docu": 133, "combine_prompt": [135, 144, 146, 147, 148], "combine_prompt_templ": [135, 144, 147], "combusken": 171, "come": [21, 26, 37, 40, 50, 51, 53, 54, 59, 73, 76, 87, 98, 106, 108, 114, 115, 116, 117, 118, 121, 122, 130, 133, 135, 136, 139, 142, 143, 147, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 196, 198, 200, 201, 203, 204, 205], "comedi": 139, "comfort": [39, 59, 133, 146, 202], "comic": [133, 150], "comma": [55, 56, 57, 58, 76, 94, 143, 174, 180, 182], "command": [7, 26, 50, 73, 81, 82, 86, 100, 104, 111, 122, 130, 133, 141, 144, 153, 174, 179, 181, 183, 185, 190, 193, 210], "commenc": [202, 205], "comment": [24, 40, 76, 102, 121, 122, 132, 133, 146, 153, 174, 175, 178], "commentari": 175, "commerc": [26, 136], "commerci": [24, 144, 146], "commiss": [144, 203], "commit": [136, 183], "committe": [122, 148], "commod": 133, "common": [2, 8, 9, 30, 39, 55, 58, 61, 66, 70, 72, 82, 103, 104, 108, 121, 122, 130, 133, 135, 139, 140, 141, 146, 147, 155, 160, 162, 175, 176, 177, 178, 179, 180, 182, 183, 190, 192, 193, 197, 199, 201, 203, 204, 205], "commonli": [1, 30, 31, 41, 54, 55, 57, 58, 61, 67, 105, 122, 133, 177, 192, 193, 194, 195, 196, 201, 203], "commonmark": [22, 110], "commun": [121, 122, 133, 135, 138, 143, 144, 174, 182, 183], "communit": 121, "commut": [30, 31], "comonli": 205, "compact": [59, 133], "compani": [0, 57, 79, 105, 122, 133, 136, 140, 141, 147, 148, 151, 160, 161, 174, 179, 180, 182, 214], "companion": [133, 204, 205], "company_grp": 172, "company_info": 105, "company_inform": 144, "company_nam": 105, "company_path": 144, "company_sales_data": 151, "compar": [1, 11, 21, 24, 37, 46, 53, 54, 55, 56, 57, 97, 100, 106, 121, 122, 133, 136, 137, 143, 145, 175, 176, 180, 181, 182, 190, 191, 194, 196, 197, 200, 201], "compare_result": 177, "comparis": [191, 194], "comparison": [54, 91, 136, 145, 150, 161, 164, 175, 177, 181, 183, 199, 201, 204], "comparit": 197, "compat": [40, 95, 106, 108, 156, 161, 174, 178, 179, 182, 183, 200], "compatible_format": 86, "compens": [141, 180, 198], "compet": [146, 161, 202], "competit": [0, 147, 148, 191], "competitor": [133, 135], "compil": [0, 24, 26, 39, 41, 91, 102, 133, 178, 195, 203], "complain": [108, 137], "complement": [41, 97, 190, 198], "complementari": 84, "complet": [0, 49, 50, 51, 54, 58, 70, 82, 83, 86, 98, 105, 130, 132, 133, 140, 141, 147, 148, 151, 157, 172, 178, 181, 183, 197, 201, 203], "completion_token": [140, 141], "completion_with_retri": [133, 143], "complex": [1, 8, 19, 20, 26, 49, 50, 53, 80, 84, 91, 93, 94, 97, 104, 105, 120, 121, 130, 136, 143, 150, 151, 160, 161, 171, 172, 177, 191, 193, 204], "complex128": 157, "complex_number1": 93, "complex_number2": 93, "complexnumb": 104, "compli": 100, "complianc": 144, "complic": [104, 121, 122, 133, 135, 141, 160, 177, 178, 190, 192], "complier": 100, "compon": [12, 13, 14, 15, 16, 17, 18, 21, 33, 34, 76, 103, 122, 133, 176, 182, 183, 192, 193, 202, 203, 205], "compos": [55, 122, 178, 179, 180, 181, 182, 183, 184, 185], "composit": [133, 178], "composur": 150, "compound": [26, 97, 133], "comprehend": [199, 204], "comprehens": [36, 37, 49, 146, 183, 194, 214], "compress": [177, 178, 179, 182, 183, 184, 185], "compress_docu": 136, "compressed_doc": 136, "compression_retriev": 136, "compressor": 136, "compris": [178, 182, 194], "comput": [0, 1, 2, 19, 20, 21, 26, 33, 48, 53, 54, 58, 59, 68, 70, 73, 85, 91, 97, 100, 103, 105, 121, 133, 136, 139, 143, 144, 153, 156, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 194, 197, 198, 199, 200, 201, 203, 205, 214], "computation": [174, 177, 193], "comstock": 133, "con": [174, 178, 181, 183], "concat": [82, 160, 171, 172, 182, 195, 199, 204, 205], "concaten": [55, 56, 82, 96, 103, 106, 153, 160, 174, 177, 182, 199], "conceal": 192, "concentr": [136, 197], "concept": [0, 24, 25, 28, 74, 98, 105, 107, 121, 122, 133, 143, 146, 153, 176, 179, 182, 183, 192, 193, 194, 196, 199, 201, 203, 204, 205, 212, 213, 214], "conceptu": [85, 121, 122, 199, 200, 202], "concern": [146, 148, 182, 183, 191, 199], "concis": [8, 37, 55, 57, 59, 74, 81, 121, 132, 133, 135, 143, 144, 146, 148, 155, 156, 182], "conclud": [38, 133, 143, 201, 203, 205], "conclus": [108, 143, 180, 182], "concret": [182, 203], "concurr": [68, 133], "conda": [26, 153], "condens": [132, 179, 182, 184, 185], "condit": [33, 36, 37, 39, 45, 46, 47, 48, 49, 50, 51, 57, 58, 70, 72, 80, 81, 91, 95, 97, 133, 155, 164, 166, 203, 204, 205], "condition": 133, "condition_inn": 48, "conditon_out": 48, "conduct": [6, 15, 16, 17, 18, 100, 148, 182], "conf_mat": 177, "confer": 133, "confid": [143, 180, 181, 183, 193, 195, 197, 199, 200, 201, 203], "config": [78, 136], "configur": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "confin": 171, "confirm": [122, 176], "confis": 177, "conflict": [143, 160], "confluenc": 122, "confmat": 177, "confmat_tensor": 177, "confus": [37, 48, 85, 108, 122, 133, 174, 176, 183, 191, 192, 198, 199, 201, 204], "confusing_text": 122, "confusionmatrix": [176, 177], "congratul": [74, 120, 143, 182], "conjuct": 203, "conjunct": 96, "conkeldurr": 171, "conn": 131, "connect": [8, 73, 122, 131, 136, 141, 144, 174, 178, 180, 182, 183, 198, 199, 201, 203], "connection_object": 160, "connectionerror": 131, "connectionist": [8, 19, 20], "connectionpool": 131, "conscious": [133, 137], "consequ": 1, "consid": [5, 8, 13, 19, 20, 21, 29, 50, 54, 55, 57, 58, 62, 63, 73, 79, 85, 100, 106, 108, 146, 147, 148, 156, 157, 161, 165, 166, 175, 176, 177, 178, 179, 181, 182, 183, 191, 197, 199, 202, 204, 205], "consider": [11, 15, 26, 59, 133, 178, 181, 183, 193, 199, 203, 212, 214], "consist": [5, 8, 10, 11, 15, 17, 18, 19, 20, 33, 55, 57, 72, 86, 87, 91, 105, 135, 139, 141, 144, 155, 176, 177, 180, 181, 182, 193, 201, 206], "consol": [26, 96, 137, 146, 160], "consolid": 147, "conspicu": 133, "constant": [5, 6, 24, 31, 41, 84, 93, 102, 133, 154, 156, 182, 202, 203], "constantli": [135, 147, 202, 204], "constitut": [8, 19, 20], "constrain": 133, "constraint": [40, 133, 144, 177, 183], "construct": [39, 40, 46, 51, 73, 80, 85, 86, 103, 122, 138, 139, 154, 155, 160, 175, 176, 182, 183], "constructor": [61, 74, 86, 105, 176], "consult": 133, "consum": [138, 144, 146, 203], "consumpt": 183, "contact": [143, 144, 146, 148], "contain": [8, 10, 15, 16, 36, 37, 49, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 73, 81, 82, 85, 86, 92, 93, 95, 96, 98, 103, 104, 122, 133, 136, 141, 142, 146, 148, 151, 157, 160, 161, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 200, 201, 203, 206, 213], "contempl": [133, 143], "contend": 183, "content": [7, 22, 26, 41, 70, 71, 73, 82, 110, 111, 121, 122, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 160, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 210, 213, 214], "content_attr": 145, "contest": 26, "context": [54, 78, 106, 121, 133, 136, 137, 143, 146, 175, 177, 178, 179, 180, 184, 185, 190], "contextmanag": 91, "contextualcompressionretriev": 136, "contigu": [54, 199], "contin": 122, "continu": [2, 9, 24, 37, 44, 52, 73, 90, 91, 104, 105, 131, 133, 137, 143, 147, 174, 176, 180, 181, 182, 183, 184, 194, 198, 201, 202, 205, 214], "contour": [9, 15, 16, 192, 194, 195], "contract": [0, 133, 148], "contractor": 144, "contradict": 133, "contrast": [1, 133, 155, 182], "contrastingli": 1, "contribut": [5, 6, 141, 147, 182, 201, 212], "control": [8, 26, 37, 45, 46, 53, 54, 91, 103, 106, 108, 122, 133, 141, 144, 146, 182, 189, 191, 192, 194, 198, 199, 200, 201, 203, 205, 208], "conttinu": 195, "conv": [177, 178], "conv1d": 177, "conv2d": [178, 179, 180, 184, 185], "conv2dnormactiv": 180, "conv3d": 177, "conv_block_1": [178, 179, 184, 185], "conv_block_2": [178, 179, 184, 185], "conv_lay": 177, "conv_layer_2": 177, "convei": [143, 201, 203], "conveni": [5, 6, 30, 31, 133, 137, 153, 182, 191, 193, 194, 197, 200], "convent": [41, 86, 104, 108, 121, 122, 133, 164, 167, 175, 203], "convention": 104, "conver": 143, "converg": [4, 5, 30, 31, 133, 178, 193], "convers": [24, 54, 91, 102, 122, 133, 142, 143, 148, 192, 197, 200], "conversationbuffermemori": 122, "convert": [7, 8, 17, 18, 19, 20, 21, 33, 40, 53, 54, 55, 59, 61, 62, 63, 66, 70, 72, 84, 93, 95, 96, 100, 111, 122, 133, 135, 137, 140, 141, 146, 147, 153, 154, 157, 160, 161, 162, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 197, 201, 210], "convert_dictionary_to_python_object": 104, "convient": 160, "convinc": 133, "convini": [154, 157], "convnet": [157, 177], "convnext": 180, "convnext_smal": [180, 181], "convnext_tini": [180, 181], "convolu": 182, "convolut": [133, 180, 182, 212], "convolv": 177, "conwai": 133, "cook": [96, 121, 133, 134, 178, 181], "cool": [121, 122, 131, 133, 136, 142, 143, 147, 148, 157, 181, 182, 183, 192, 195], "cool_r": 195, "cooler": 37, "coolest": 133, "coolwarm": [27, 113, 195, 196, 199, 200, 201, 204], "coolwarm_r": 195, "coon": 133, "coordin": 106, "cop": 122, "cope": 73, "copi": [26, 54, 58, 71, 82, 103, 133, 135, 147, 156, 157, 160, 164, 165, 166, 167, 169, 170, 174, 175, 177, 178, 182, 183, 198, 214], "copper": [195, 201], "copper_r": 195, "copy2": 183, "copyreg": 86, "copyright": 26, "copysign": [82, 84, 158], "cord": 133, "core": [19, 20, 104, 133, 139, 147, 153, 158, 160, 164, 167, 168, 169, 177, 178, 182, 183, 184, 193, 200, 205], "coremltool": 183, "corg": 55, "cori": [49, 54, 76, 79], "cornel": [133, 200], "corner": [133, 155], "cornic": 133, "corpdev": 136, "corphish": 171, "corpor": 138, "corr": [160, 206], "corr_func": 204, "corrcoef": 153, "corrctli": [17, 18], "correct": [6, 8, 15, 16, 17, 18, 19, 20, 46, 50, 55, 72, 79, 82, 100, 122, 133, 136, 143, 157, 161, 162, 176, 177, 181, 182, 183, 191, 193, 199, 205], "correctli": [1, 5, 15, 16, 17, 18, 19, 20, 49, 74, 121, 176, 177, 181, 182, 183, 204], "correl": [1, 135, 153, 160, 191, 194, 195, 197, 202, 204, 205, 207], "correspond": [1, 8, 12, 21, 33, 34, 57, 67, 72, 74, 82, 98, 100, 104, 108, 121, 138, 155, 194, 197, 200, 201, 202, 203, 205], "correspondingli": 133, "corridor": 133, "corrupt": [12, 14], "corsola": 171, "cosh": [82, 84], "cosin": [29, 82, 84, 153, 182], "cosine_dist": 32, "coss": 32, "cost": [12, 13, 14, 15, 16, 17, 18, 19, 20, 133, 135, 136, 140, 141, 144, 146, 147, 174, 176, 177, 180, 181, 182, 183], "cost_histori": [12, 13, 14], "cottone": 171, "couch": 178, "could": [8, 9, 26, 36, 51, 54, 70, 73, 85, 87, 98, 103, 108, 121, 122, 133, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 156, 157, 164, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 191, 192, 197, 198, 200, 201, 203], "couldn": [0, 108, 133, 136, 174, 178, 180, 181, 182, 183, 195], "council": 148, "counsel": 148, "count": [8, 9, 41, 49, 50, 51, 54, 56, 90, 104, 108, 122, 133, 136, 140, 141, 143, 145, 147, 150, 160, 171, 174, 178, 182, 183, 189, 194, 197, 200, 203, 205, 208], "counter": [49, 50, 104], "counterbalanc": 133, "counterintuit": [37, 136], "counterpart": [37, 54, 84, 174], "counti": 72, "countless": 143, "countplot": [197, 200, 201], "countri": [5, 10, 12, 14, 39, 42, 49, 54, 70, 72, 73, 92, 103, 122, 133, 143, 148, 150, 194, 203], "countries_to_look_at": 150, "country_lst_on": 73, "country_lst_two": 73, "coupl": [5, 6, 122, 133, 146, 148, 176, 177, 178, 181, 182, 183, 192, 198, 199, 200, 201], "cours": [0, 21, 25, 26, 76, 82, 133, 136, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 191, 193, 194, 195, 197, 198, 199, 201, 203, 213], "course_nam": 76, "coursera": [0, 2, 4, 5, 6, 8, 10], "cous": [12, 13, 14], "cov": [193, 204], "covari": 193, "cover": [38, 39, 41, 70, 121, 122, 130, 133, 135, 146, 160, 161, 162, 166, 167, 169, 189, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 212], "coverd": 176, "coverg": 193, "covert": 100, "cow": 182, "cowork": 133, "cp1252": 70, "cplai": 26, "cpu": [133, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "cpu_count": [178, 179, 183, 185], "crack": 133, "cradili": 171, "craft": [143, 180, 181, 183, 197], "cram": 204, "cramer": 33, "cranido": 171, "crank": 133, "crap": 133, "crash": [73, 183], "crawdaunt": 171, "crawl": 133, "crazi": [121, 148, 174, 182], "cream": 140, "creat": [0, 1, 9, 12, 18, 20, 26, 27, 36, 38, 39, 40, 41, 49, 50, 53, 61, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 78, 80, 86, 87, 89, 90, 92, 93, 94, 98, 100, 103, 105, 106, 108, 113, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 153, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 172, 187, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "create_dataload": [179, 180, 181, 182, 183, 185], "create_docu": [121, 122, 135, 146, 147, 148], "create_effnetb0": 181, "create_effnetb2": 181, "create_effnetb2_model": 183, "create_extraction_chain": [141, 146], "create_extraction_chain_pydant": 140, "create_output": 133, "create_structured_output_chain": 121, "create_vit_model": 183, "create_writ": 181, "creation": [70, 121, 143, 154, 176, 178, 179, 182, 183, 212], "creativ": [21, 132, 134, 138, 144, 147, 176, 181], "creator": [108, 178], "credenti": 143, "credit": [26, 122, 133, 176, 190], "cresselia": 171, "cript": 70, "crisi": 146, "crisp": 133, "crispi": 134, "cristiano": 150, "criteria": [1, 38, 39, 148, 183], "criterion": [176, 177, 182], "critic": [73, 135, 203, 204], "crm": [121, 140, 141], "croagunk": 171, "crobat": 171, "croconaw": 171, "crop": 178, "crop_siz": [180, 181, 182, 183], "cross": [8, 80, 133, 175, 176, 203, 205], "crossentropi": 176, "crossentropyloss": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "crowd": 133, "crucial": [136, 143], "cruis": 141, "crush": 133, "crust": 130, "crustl": 171, "cruz": 133, "cryogon": 171, "crystal": 133, "crystallin": 133, "csjfqsk97xz704h7v3fzjqph0000gn": [131, 133], "css": [54, 103], "css4": 192, "csv": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 122, 138, 150, 151, 161, 168, 169, 170, 171, 181, 189, 194, 200, 201, 203, 205], "csv_exampl": 70, "csv_reader": 70, "ctitl": 32, "ctrl": [26, 50, 72], "cu102": 182, "cu113": [175, 178, 180, 181, 183], "cu116": 174, "cu118": [177, 182], "cub": 122, "cubchoo": 171, "cube": [38, 50, 59, 79, 81, 96, 133], "cubehelix": 195, "cubehelix_palett": 192, "cubehelix_r": 195, "cubic": 5, "cubon": 171, "cuda": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "cue": 133, "cuisin": [121, 134], "cultur": [130, 133, 141, 146], "cum": 54, "cumbersom": 193, "cumhuriyeti": 122, "cumsum": [153, 158], "cumul": [1, 153], "cup": [121, 201], "curat": [1, 121, 122, 182, 193, 213, 214], "curios": [0, 133], "curiou": [133, 148, 182, 193], "curious": 205, "curl": 133, "curli": [41, 54, 57, 58, 96], "currect": 122, "currenc": 122, "current": [0, 1, 4, 5, 6, 12, 13, 14, 19, 20, 21, 24, 38, 49, 50, 51, 62, 66, 67, 68, 69, 70, 73, 78, 82, 83, 86, 98, 103, 104, 105, 121, 122, 130, 133, 142, 143, 144, 146, 147, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 191, 192, 193, 195, 197, 205], "current_datetime_hostnam": 181, "current_examples_indic": 11, "current_file_nam": 71, "current_palett": 192, "current_salari": 92, "current_tim": 65, "current_year": [76, 79], "current_year_2021": 92, "curri": 103, "curriculum": [175, 177, 183], "cursor": [70, 143, 147], "curtain": 205, "curv": [12, 13, 14, 15, 16, 17, 18, 175, 181, 194, 200], "custom": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 82, 86, 121, 122, 125, 130, 133, 135, 140, 141, 143, 147, 149, 161, 175, 176, 177, 179, 183, 184, 190, 191, 192, 193, 195, 197, 198, 200, 201, 202, 203, 204, 205], "custom_imag": 178, "custom_image_path": [178, 180, 181, 182], "custom_image_pr": 178, "custom_image_pred_class": 178, "custom_image_pred_label": 178, "custom_image_pred_prob": 178, "custom_image_transform": 178, "custom_image_transformed_with_batch_s": 178, "custom_image_uint8": 178, "custom_lin": [27, 113], "customari": 133, "customerror": 74, "customis": [180, 181], "customiz": [144, 180, 183, 190, 203, 205], "cut": [10, 17, 18, 19, 20, 133, 135, 148, 176, 199, 200, 202], "cute": 148, "cyan": 192, "cycl": [133, 192, 195], "cycler": [27, 113], "cylind": [160, 161, 172], "cym": 122, "cyndaquil": 171, "cython": 198, "d": [1, 4, 32, 47, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 73, 76, 93, 94, 96, 104, 105, 106, 122, 131, 133, 135, 136, 140, 141, 142, 143, 144, 146, 148, 151, 154, 157, 160, 165, 166, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 194, 198, 200, 204, 206], "d1": [64, 105], "d2": 64, "d3": 64, "d4": 64, "d75c9779269a": 74, "d7cfabc8": 136, "d9e056c8": 136, "d_model": 182, "da": [32, 122, 201], "daaaat": 41, "daaat": 41, "daat": 41, "dad": [178, 180, 181, 182, 183], "daddi": 137, "dai": [0, 25, 41, 53, 54, 62, 63, 64, 65, 66, 67, 76, 78, 121, 132, 133, 143, 146, 148, 174, 180, 181, 182, 183, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205], "daili": [140, 141, 193], "dam": 133, "damn": 122, "dan": 133, "danc": [103, 122, 133, 146, 182], "dandelion": 133, "danger": [133, 134, 136], "daniel": [133, 174, 175], "dar": 130, "dark": [121, 133, 171, 177, 190, 192, 195, 201], "dark2": 195, "dark2_r": 195, "darken": 133, "darkest": 133, "darkgrid": [190, 197, 199, 200, 203], "darkrai": 171, "darmanitanstandard": 171, "darmanitanzen": 171, "darumaka": 171, "dash": 196, "dashboard": [197, 198], "dat": 41, "data": [0, 1, 5, 6, 8, 10, 26, 27, 36, 37, 38, 41, 42, 49, 50, 54, 55, 56, 57, 58, 63, 70, 71, 73, 76, 79, 82, 86, 92, 93, 95, 96, 97, 100, 103, 105, 113, 120, 121, 125, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 153, 155, 156, 163, 164, 165, 166, 167, 168, 170, 173, 187, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 213], "data1": [55, 160, 194], "data2": 194, "data_1": [70, 71], "data_10_perc": 181, "data_10_percent_path": 181, "data_20_perc": 181, "data_20_percent_path": [181, 183], "data_analysi": 201, "data_compli": [140, 141], "data_dir": 183, "data_fold": 178, "data_folder_1": 185, "data_folder_2": 185, "data_load": [177, 178], "data_path": [178, 179, 180, 181, 184, 185], "data_point": 196, "data_setup": [180, 181, 182, 183, 184, 185, 187], "data_str": 63, "data_transform": [178, 179, 184, 185], "data_typ": 161, "databas": [66, 70, 121, 122, 130, 160, 183], "datafam": 162, "datafram": [12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 122, 138, 150, 154, 171, 172, 173, 176, 177, 178, 181, 183, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "dataindepend": [131, 146, 148], "dataload": 175, "dataloader_nam": 181, "datalod": 181, "datapoint": [178, 184, 185, 191, 192, 197, 200, 202, 203, 205], "datasci": 77, "dataseri": 160, "dataset": [0, 1, 9, 11, 12, 13, 14, 16, 122, 125, 149, 150, 157, 160, 163, 164, 165, 166, 167, 168, 170, 171, 175, 176, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208], "datatyp": [24, 54, 56, 84, 94, 95, 102, 160, 161, 175, 178, 180, 205], "date": [12, 63, 65, 121, 122, 131, 160, 180, 181, 189, 193, 195, 203, 205], "date_object": [61, 63], "date_rang": 160, "date_str": [61, 63], "date_tim": 62, "date_time1": 62, "date_time2": 62, "dateclass": 61, "datetim": [24, 64, 69, 82, 140, 141, 160, 181], "datetime64": 158, "datetime_capi": 61, "datetime_london": [61, 65], "datetime_ni": [61, 65], "datetime_object": 61, "datetimeindex": 160, "daughter": 103, "dave": 99, "david": [79, 96, 144], "daviddeutschoxf": 143, "davinci": [121, 122], "dawn": 133, "dazzl": 133, "db": [32, 121, 122], "db_chain": 122, "dbb7": 136, "dbt": 147, "dct": 73, "dd": [61, 63, 64, 181], "dd6f749658a4": 40, "ddot": 33, "de": [29, 41, 122, 133, 150], "dead": [133, 136], "deadlin": 133, "deal": [28, 40, 51, 53, 54, 70, 95, 133, 136, 144, 146, 148, 157, 160, 174, 175, 176, 177, 182, 183, 189, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205], "dealer": 133, "dealt": [189, 193, 197], "dear": 144, "death": 133, "debat": [122, 177, 179, 183], "debug": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 72, 80, 87, 91, 141, 183], "debut": 121, "dec": [26, 39, 62, 63, 67, 89, 144], "decad": [133, 134, 143], "decai": [178, 182], "decemb": 66, "decend": 171, "decent": [133, 197, 200, 201], "decept": 199, "decid": [1, 5, 6, 9, 12, 14, 21, 40, 44, 57, 121, 122, 133, 136, 142, 167, 174, 176, 178, 183, 193, 194, 199, 200, 201, 203, 205], "decim": [40, 54, 62, 63, 86, 92, 93, 94, 97, 154, 181, 183], "decis": [1, 10, 21, 48, 121, 122, 148, 176, 181], "deck": [148, 199, 201, 205], "declar": [38, 50, 70, 72, 74, 76, 77, 78, 98, 103, 104, 108, 154, 193, 201, 203, 204, 205], "decliv": 133, "decod": [54, 72, 133], "decompos": [29, 87], "decomposit": [28, 156], "decor": [24, 38, 43, 108, 203, 205], "decorator_with_paramet": 39, "decreas": [8, 12, 13, 14, 15, 16, 17, 18, 50, 80, 178, 189, 192, 194, 199], "decrement": 106, "dedenn": 171, "dedic": [3, 133, 143, 144, 179, 185, 187, 205], "deduc": [193, 200], "dedupl": 146, "deel": 147, "deem": 137, "deep": [8, 21, 28, 51, 122, 133, 142, 153, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 212, 213, 214], "deepak": 82, "deeper": [61, 122, 175, 176, 182, 189, 193, 195, 200, 202, 203, 205], "deeplak": [121, 135, 136], "deepli": [51, 133, 193], "deerl": 171, "def": [32, 36, 37, 38, 39, 40, 42, 46, 47, 48, 51, 59, 68, 73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 87, 90, 91, 93, 96, 98, 103, 104, 105, 106, 108, 122, 131, 132, 133, 140, 141, 142, 143, 144, 145, 147, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 193, 195, 197, 198, 204, 205], "default": [7, 9, 11, 17, 18, 19, 20, 38, 41, 49, 54, 56, 61, 70, 76, 78, 80, 82, 84, 86, 89, 104, 105, 111, 121, 122, 133, 136, 137, 148, 150, 153, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 192, 193, 195, 196, 199, 200, 202, 203, 205, 206, 210], "default_ord": 54, "default_tim": [177, 178, 180, 183, 184, 185], "default_valu": 160, "defect": 177, "defens": [147, 171], "defer": 169, "defin": [1, 5, 6, 7, 19, 20, 24, 29, 33, 36, 37, 39, 40, 41, 42, 49, 50, 53, 54, 55, 56, 57, 59, 61, 67, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 98, 103, 105, 106, 111, 121, 122, 133, 135, 136, 139, 142, 157, 160, 164, 168, 175, 176, 177, 178, 180, 181, 182, 183, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210], "definit": [26, 34, 39, 49, 76, 79, 81, 82, 86, 91, 96, 103, 104, 105, 108, 133, 135, 140, 141, 146, 182], "defint": [176, 182, 183], "deflat": 183, "degrad": [108, 180, 181], "degre": [5, 12, 13, 14, 15, 16, 17, 18, 40, 82, 84, 121, 133], "dei": 182, "deino": 171, "del": [38, 54, 55, 56, 57, 90, 104], "delai": [67, 68, 133, 183, 191, 197], "delattr": 104, "delcatti": 171, "deleg": 105, "delelop": 26, "delet": [38, 40, 57, 71, 72, 91, 136, 146, 153, 160, 166, 169, 178], "delete_al": 146, "delete_collect": 136, "deliber": 72, "delibird": 171, "delici": [121, 134, 143, 183], "delight": [133, 143], "delimit": [70, 135, 157, 160, 171], "deliv": [144, 174], "delphox": 171, "delta": 182, "delv": [1, 190, 191, 194, 195], "demand": [37, 134, 135, 190], "demo": [3, 9, 10, 121, 133, 143, 148, 178, 182, 195], "demonstr": [36, 55, 105, 122, 162, 175, 179, 182, 185, 194, 197, 204, 205], "demonym": 122, "demor": 133, "den": 32, "deni": 47, "denim": [192, 198], "denmark": [12, 14, 73, 194], "denomin": 53, "denot": [30, 31, 40, 42, 54, 79, 80, 94, 103, 174], "dens": [136, 182], "densii": 200, "densiti": [9, 136, 191, 192, 194, 195, 196, 198, 200, 203], "deoxysattack": 171, "deoxysdefens": 171, "deoxysnorm": 171, "deoxysspe": 171, "depart": [104, 133, 140, 141, 203], "depat": 104, "depend": [1, 5, 6, 21, 26, 29, 38, 44, 51, 70, 74, 82, 83, 106, 110, 121, 133, 135, 136, 139, 140, 141, 146, 153, 160, 175, 176, 177, 178, 179, 180, 181, 183, 185, 189, 191, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214], "depict": [192, 197, 199, 203], "deploi": [132, 147, 174, 181, 182], "deploy": [182, 188, 212], "deposit": 133, "deprec": [122, 136, 168, 172, 174, 180, 181, 191, 196, 198], "deprecation_addendum": 198, "depress": 133, "depth": [80, 92, 105, 133, 178, 181, 189, 193, 194, 197], "deriv": [5, 6, 8, 73, 74, 103, 105, 108, 122, 133, 136, 203], "derived1": 105, "derived2": 105, "derivedclass": [103, 105], "desc": 177, "descend": 160, "descent": [8, 19, 20, 133, 175, 176, 177, 178, 182], "describ": [5, 6, 8, 15, 16, 17, 18, 33, 76, 79, 82, 97, 121, 122, 133, 135, 136, 141, 146, 148, 160, 174, 175, 176, 177, 182, 183, 189, 194, 199, 201, 202, 203, 204, 205], "describejob": [140, 141], "descript": [51, 54, 55, 56, 57, 58, 70, 76, 82, 83, 84, 86, 103, 104, 121, 122, 130, 131, 133, 135, 136, 138, 140, 141, 142, 144, 153, 160, 167, 174, 181, 182, 183, 189, 199, 203], "descriptor": [70, 86], "deseri": 175, "deserv": 200, "desgin": 93, "design": [0, 26, 39, 121, 122, 133, 138, 141, 144, 160, 176, 181, 182, 183, 193, 201, 202], "desir": [39, 51, 55, 121, 133, 143, 157, 174, 177, 178, 182, 183, 205, 212], "desk": [26, 133], "desktop": [26, 71, 133], "desper": [133, 147], "despin": [190, 200, 201, 202, 204, 205], "despit": [121, 133, 146, 178, 182, 183], "destin": [142, 181, 182, 183], "destination_path": 142, "destini": 133, "destroi": [37, 77, 104, 133, 136, 146], "destruct": [104, 133], "destructur": 73, "det": [33, 156], "detach": [70, 175, 182], "detail": [1, 7, 37, 40, 67, 72, 79, 96, 103, 104, 105, 111, 121, 133, 142, 146, 155, 160, 162, 164, 169, 170, 174, 181, 182, 183, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205, 209, 210], "detect": [1, 3, 5, 6, 19, 20, 72, 146, 155, 177, 183, 192, 212], "determin": [1, 21, 58, 130, 133, 136, 165, 166, 170, 193, 194, 195, 197, 199, 201, 203, 204, 205], "determinist": [83, 122], "detour": 121, "deu": 122, "dev": [179, 181], "dev20220620": [180, 181], "dev20220824": 183, "devcon": 174, "develop": [0, 11, 15, 24, 26, 74, 85, 92, 100, 108, 121, 122, 123, 133, 135, 136, 139, 140, 141, 143, 144, 147, 174, 179, 180, 181, 183, 213, 214], "deviat": [2, 9, 153, 157, 160, 180, 182, 199, 201], "devic": [96, 100, 140, 141, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185], "device_count": 174, "devis": 0, "devop": [144, 183, 214], "dewgong": 171, "dewott": 171, "df": [122, 138, 150, 151, 160, 164, 167, 168, 169, 170, 171, 172, 183, 189, 191, 193, 195, 198, 200, 203, 205, 206], "df1": [160, 194], "df2": [160, 194], "df6ce7ede1dc": 72, "df_compani": 144, "df_xlsx": 171, "dfca0b041b3d": 74, "dharmesh": 143, "dhl": 54, "di": [41, 49, 121, 122, 133], "diag": [158, 204], "diag_ax": 204, "diag_indic": 204, "diag_kind": [195, 204], "diag_kw": 195, "diag_sharei": 204, "diagnol": 176, "diagnost": 122, "diagon": [33, 177, 195, 204], "diagram": [98, 163, 167, 170, 182, 196], "dial": 132, "dialect": [133, 139], "dialga": 171, "dialogu": [49, 143], "diamet": [84, 133], "dianci": 171, "dianciemega": 171, "dice": [121, 134], "dichotom": [6, 15, 16, 17, 18], "dict": [26, 42, 58, 70, 73, 76, 82, 93, 94, 95, 104, 122, 133, 145, 150, 162, 163, 164, 165, 166, 167, 169, 170, 172, 175, 177, 178, 179, 181, 183, 184, 185, 191, 200, 205, 207], "dict1": [49, 57], "dict2": 49, "dict_1": 104, "dict_item": 57, "dict_kei": [57, 178], "dict_valu": 57, "dictat": 174, "diction": 143, "dictionair": 183, "dictionari": [21, 24, 26, 39, 40, 42, 54, 55, 56, 58, 60, 72, 76, 86, 91, 93, 95, 97, 104, 122, 140, 141, 143, 145, 147, 160, 162, 167, 172, 175, 177, 178, 179, 181, 182, 183, 184, 185, 190, 192, 205], "dictionaryliter": 91, "did": [0, 37, 39, 45, 72, 73, 77, 96, 97, 103, 105, 121, 133, 135, 136, 139, 146, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 203], "didn": [0, 54, 103, 106, 121, 122, 133, 136, 137, 174, 176, 177, 178, 183, 190, 199, 200, 205], "die": [136, 205], "diet": [202, 203], "diff": [12, 14, 65], "differ": [0, 8, 9, 12, 19, 20, 21, 38, 39, 41, 42, 44, 49, 50, 51, 53, 54, 55, 56, 57, 62, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 81, 82, 85, 87, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 108, 110, 121, 122, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 155, 156, 160, 161, 162, 165, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "difference_upd": 58, "differenti": [90, 143], "differnt": 180, "difficult": [0, 100, 122, 133, 190, 197, 198, 199, 200, 201], "difficulti": [133, 135, 174], "dig": [61, 174, 203, 205], "digest": 122, "diggersbi": 171, "digit": [6, 8, 17, 18, 19, 20, 30, 31, 49, 54, 63, 82, 86, 90, 92, 97, 103, 140, 141, 157, 177, 203], "digit_label": [17, 18, 19, 20], "digit_pixel": [17, 18, 19, 20], "diglett": 171, "dilat": [177, 178, 184, 185], "dilig": [0, 133, 134], "dim": [174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185], "dim0": 174, "dim1": 174, "dim_feedforward": 182, "dimenion": 174, "dimens": [135, 153, 154, 155, 156, 160, 174, 175, 176, 177, 178, 180, 182, 183, 193, 204, 205], "dimension": [1, 4, 21, 28, 49, 59, 135, 153, 154, 160, 162, 174, 177, 178, 180, 182, 193, 204, 205, 212], "diner": 133, "dinner": [76, 133, 193, 196, 197, 198, 199, 200, 201, 205], "dip": 134, "diploma": 133, "dir": [41, 61, 72, 180, 181], "dir_nam": 71, "dir_path": 178, "dir_with_log": 181, "direct": [5, 6, 7, 10, 18, 20, 22, 34, 50, 54, 59, 61, 62, 63, 67, 81, 103, 111, 121, 131, 136, 174, 180, 182, 201, 210], "direction": 135, "directli": [26, 37, 55, 74, 76, 82, 85, 98, 100, 103, 104, 122, 136, 146, 156, 176, 178, 179, 182, 183, 185, 190, 196, 202, 203, 213, 214], "directori": [21, 24, 70, 72, 75, 82, 85, 96, 122, 144, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187], "directory_nam": 82, "directoryload": [136, 139, 145], "dirichlet": 203, "dirnam": [122, 178], "dirpath": [122, 178], "dirti": 122, "disadvantag": [100, 148, 175, 200], "disagre": 53, "disallowed_speci": 122, "disappear": 133, "disappoint": 133, "disast": 135, "disastr": 133, "disc": 121, "discard": [21, 58], "discern": 178, "disclosur": 205, "disconcertingli": 133, "disconnect": 73, "discontinu": 29, "discord": [121, 122], "discourag": [108, 133], "discours": 205, "discov": [1, 133, 135, 136, 139, 174, 175, 176], "discoverd": 175, "discovered": 133, "discoveri": 121, "discret": [137, 192, 193, 200, 201, 203, 205], "discrimin": [11, 15], "discuss": [41, 46, 53, 54, 56, 82, 87, 91, 96, 105, 135, 143, 144, 146, 148, 160, 161, 162, 163, 164, 169, 170, 176, 178, 179, 180, 182, 183, 184, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "diseas": 176, "disengag": 203, "dish": [121, 134], "disk": [70, 100, 132, 133, 175, 177], "dislik": [122, 133], "dismai": 133, "disp": 174, "dispar": 203, "dispers": [189, 199], "displai": [2, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 47, 48, 49, 50, 51, 54, 61, 71, 73, 74, 86, 89, 100, 104, 105, 111, 122, 146, 148, 150, 157, 163, 183, 190, 192, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210], "display_random_imag": 178, "display_shap": 178, "displaystyl": [29, 32], "displot": 196, "dispos": 203, "dispsid": 105, "disput": [133, 135], "disregard": [51, 177], "disrupt": 73, "dissatisfi": 133, "dissert": 133, "dissimilarity__util": 32, "dist": [82, 177, 208], "distac": 49, "distanc": [49, 108, 135, 139, 199, 200], "distant": 133, "distil": [135, 136], "distinct": [1, 122, 133, 155, 203], "distinguish": [8, 11, 15, 16, 19, 20, 58, 70, 108, 139, 192], "distort": 203, "distplot": [191, 204], "distract": [133, 136], "distribut": [16, 24, 83, 133, 135, 150, 153, 154, 157, 180, 181, 182, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "district": 133, "distriut": 199, "ditribut": 194, "ditto": [136, 171], "div": [140, 141], "dive": [21, 122, 133, 142, 175, 189, 193, 199, 201, 202, 205, 213, 214], "diverg": 192, "divers": [135, 178, 183], "divid": [39, 44, 50, 61, 72, 82, 84, 85, 87, 96, 97, 153, 156, 158, 160, 161, 164, 176, 177, 178, 183, 197, 199, 201, 202, 203], "dividend": [79, 122], "divis": [33, 34, 39, 44, 50, 51, 59, 72, 73, 76, 97, 106, 153, 156, 174, 182, 183], "divisbl": 182, "divisor": 79, "divorc": 133, "django": [26, 214], "dll": 82, "dm": [140, 141, 148], "do": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 36, 37, 40, 41, 44, 45, 46, 49, 50, 51, 54, 55, 58, 59, 65, 72, 73, 74, 76, 79, 82, 83, 84, 86, 87, 91, 92, 94, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 113, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "do_someth": 79, "doattempt": 133, "doc": [40, 76, 86, 121, 122, 131, 133, 135, 136, 142, 144, 145, 146, 147, 156, 175, 177], "doc_id": 136, "doc_summari": 133, "docker": 141, "docsearch": [122, 137, 139, 146], "docstor": [122, 136], "docstr": [24, 54, 88, 104, 179, 184, 185], "doctor": 41, "document": [7, 27, 70, 76, 86, 91, 103, 104, 111, 113, 130, 134, 135, 139, 142, 144, 145, 146, 147, 148, 154, 155, 156, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 193, 199, 209, 210], "document_compressor": 136, "document_content_descript": 136, "document_load": [121, 122, 133, 135, 136, 137, 139, 144, 145, 147], "documentari": 133, "dodg": [172, 197, 198, 199, 200, 201, 202, 203], "dodrio": 171, "doduo": 171, "doe": [5, 12, 14, 37, 39, 40, 41, 45, 49, 50, 51, 54, 55, 56, 58, 59, 63, 70, 72, 73, 76, 77, 79, 82, 84, 86, 92, 94, 97, 98, 100, 103, 104, 105, 106, 121, 122, 133, 135, 136, 142, 144, 146, 147, 148, 154, 156, 160, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 180, 181, 182, 183, 192, 193, 195, 197, 198, 200, 205], "does_exist": 55, "doesn": [11, 40, 49, 50, 51, 54, 56, 57, 63, 79, 82, 104, 133, 135, 136, 140, 141, 142, 147, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 198, 200, 201, 205], "dog": [56, 105, 133, 134, 141, 148, 176, 177, 180, 182, 183], "dohc": [160, 161, 172], "dollar": [27, 113, 133, 148, 150, 151, 181], "domain": [1, 26, 131, 133, 146, 176, 178, 180, 191, 193, 198, 201, 203, 205], "dominantli": 193, "don": [0, 8, 11, 40, 50, 51, 55, 59, 70, 76, 78, 82, 85, 92, 103, 105, 108, 121, 122, 132, 133, 135, 136, 137, 139, 142, 143, 144, 146, 147, 148, 160, 167, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205], "done": [26, 33, 34, 37, 39, 40, 45, 46, 49, 50, 51, 54, 59, 70, 85, 89, 95, 96, 100, 105, 108, 133, 135, 136, 137, 142, 143, 144, 148, 161, 165, 168, 174, 175, 176, 177, 178, 181, 182, 183, 187, 190, 191, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205], "dong": [5, 6], "donotpai": 146, "donphan": 171, "dont": 21, "door": [1, 104, 133], "doshi": 144, "dot": [25, 28, 30, 33, 82, 85, 103, 104, 150, 151, 153, 156, 174, 175, 176, 178, 183, 194, 197, 198, 199, 200, 201, 203], "dotenv": [121, 122, 132, 134, 135, 136, 137, 140, 142, 143, 145, 146, 147], "doubl": [42, 54, 76, 81, 91, 93, 94, 97, 103, 104, 105, 106, 121, 133, 143, 146, 174, 180, 181, 182, 183, 190], "doublad": 171, "doubt": [0, 133, 136, 146, 177, 194, 197, 198, 199], "down": [0, 5, 6, 21, 40, 51, 80, 82, 97, 122, 133, 136, 140, 141, 146, 148, 175, 176, 177, 178, 181, 182, 183, 184, 189, 190, 192, 194, 204, 205], "download": [26, 82, 122, 139, 150, 151, 157, 176, 177, 178, 179, 180, 182, 184, 185, 187], "download_data": [181, 182, 183], "downsid": [178, 201], "downtown": 57, "dozen": [177, 181], "dpi": [150, 151], "dr": [0, 70, 82, 103, 121], "draft": [131, 133, 200, 201, 202, 203, 204, 205], "drag": [133, 197], "dragalg": 171, "dragon": 171, "dragonair": 171, "dragonit": 171, "drain": 121, "dramat": [174, 183], "drapion": 171, "dratini": 171, "drave": 133, "draw": [9, 17, 18, 133, 174, 176, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 205], "draw_fram": 201, "draw_stripplot": 198, "drawn": [108, 133, 195, 198, 199, 203, 205], "dream": 133, "dress": [8, 18, 20, 134, 177], "drifblim": 171, "drifloon": 171, "drift": 133, "drilbur": 171, "drill": [192, 193], "drive": [0, 1, 46, 121, 133, 141, 143, 147, 174, 180, 182], "driven": [133, 147], "driver": [79, 121, 133, 174, 183, 203], "drop": [10, 12, 14, 17, 18, 19, 20, 37, 133, 143, 147, 148, 169, 170, 171, 192, 193, 205], "drop_dupl": [166, 170], "drope": 164, "droplet": 133, "dropna": [160, 170, 191, 193, 195, 204, 205], "dropoff_datetim": 203, "dropoff_latitud": 203, "dropoff_longitud": 203, "dropout": [178, 180, 181, 182, 183], "dropout1": 182, "dropout2": 182, "drowze": 171, "druddigon": 171, "dry": [76, 103, 133], "dst": 183, "dt": [29, 32], "dt_object": 66, "dt_object1": 63, "dt_object2": 63, "dt_string": [63, 64], "dtype": [19, 20, 150, 153, 154, 156, 157, 160, 161, 162, 168, 169, 171, 172, 174, 175, 176, 178, 183, 194, 195, 204], "duc": 41, "ducklett": 171, "due": [29, 40, 42, 51, 53, 55, 70, 73, 98, 100, 122, 133, 134, 135, 136, 146, 156, 175, 177, 178, 181, 182, 183, 185, 197], "dugtrio": 171, "duh": 143, "dull": [133, 190], "dummi": [142, 185, 194, 201, 205], "dump": [70, 86, 131, 140, 141, 142], "dunsparc": 171, "duo": 121, "duomo": 133, "duosion": 171, "duplic": [49, 58, 82, 94, 98, 136, 140, 141, 160, 164, 170], "durant": 171, "durat": 203, "dure": [0, 26, 59, 72, 73, 79, 81, 82, 100, 108, 133, 136, 146, 147, 175, 176, 178, 180, 181, 182, 183, 190, 193, 197, 202], "dusclop": 171, "duski": 192, "dusknoir": 171, "duskul": 171, "dust": 133, "dusti": 192, "dustox": 171, "duti": [130, 189], "dwebbl": 171, "dwell": 133, "dweller": 133, "dylan": 133, "dynam": [94, 98, 100, 121, 131, 135, 146, 148], "dynamicfeatur": 91, "dystopia": [12, 14], "e": [4, 5, 6, 8, 12, 13, 14, 25, 26, 32, 37, 41, 49, 50, 51, 53, 54, 55, 56, 57, 58, 70, 71, 73, 77, 78, 82, 84, 92, 93, 95, 96, 97, 103, 105, 121, 122, 131, 133, 137, 142, 151, 154, 156, 157, 160, 161, 162, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "e0e0e0": 150, "e15e5601926f": 108, "e2e604bf92d": 72, "e32e417070a1": 94, "e53a": 136, "e8fb9ed4ccdc": 203, "each": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 37, 39, 46, 47, 49, 50, 51, 54, 55, 56, 57, 58, 73, 76, 80, 81, 82, 86, 91, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 108, 122, 131, 133, 134, 135, 136, 137, 143, 144, 145, 146, 148, 153, 154, 155, 156, 160, 161, 162, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 212], "eachoth": 182, "eager": 0, "ear": [133, 136], "earli": [25, 133, 136, 178], "earlier": [136, 174, 175, 181, 183, 189, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "earliest": 146, "earn": [122, 133, 146], "earnest": 133, "earplug": 136, "earth": [76, 133], "eas": [133, 183], "easi": [0, 24, 26, 36, 49, 50, 54, 70, 85, 87, 89, 100, 103, 121, 122, 133, 136, 137, 143, 146, 147, 148, 160, 161, 174, 179, 181, 182, 183, 190, 195, 197, 199, 201, 203, 205], "easier": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 36, 40, 41, 59, 80, 85, 90, 96, 100, 108, 121, 122, 135, 144, 148, 162, 176, 177, 179, 182, 197, 202, 204], "easiest": [133, 180, 183], "easili": [30, 31, 37, 61, 66, 86, 105, 121, 133, 144, 146, 147, 164, 178, 181, 182, 183, 190, 194, 197, 205], "east": 133, "east1": 137, "eastern": 133, "eat": [89, 105, 121, 133, 136, 143, 180, 182, 183], "eaten": [133, 136], "eaxh": 12, "ec3d": 136, "ecc": 174, "eccentr": 136, "echo": 0, "ecommerc": [133, 141], "econom": 143, "economi": [5, 12, 14], "ecosystem": [22, 110, 147, 183], "ecu": 122, "ed": 49, "ed7c4dc05b92": 77, "edg": [1, 8, 133, 139, 140, 141, 151, 183, 191, 200, 201, 204], "edgecolor": [191, 197, 198, 201, 204, 205], "edit": [121, 133, 135, 136, 143, 182, 183], "edit_financial_forecast": 142, "editor": [47, 133, 190], "edu": 10, "educ": [41, 138, 143, 181, 182, 197, 203], "education_level": 200, "edward": 204, "ee": 41, "ee4e8ee8c904": 72, "ee80ca1a52c8": 93, "eec": 144, "eelektrik": 171, "eelektross": 171, "eeve": 171, "effect": [54, 70, 78, 82, 103, 133, 142, 144, 177, 178, 180, 182, 183, 192, 194, 197, 201, 213, 214], "effici": [40, 49, 50, 53, 70, 76, 82, 85, 98, 100, 103, 144, 153, 160, 162, 177, 191, 198, 203], "efficientnet": 180, "efficientnet_b0": [180, 181], "efficientnet_b0_weight": [180, 181], "efficientnet_b1": 180, "efficientnet_b2": [180, 181, 183], "efficientnet_b2_weight": [181, 183], "efficientnet_b7": 180, "efficientnet_bx": 180, "efficientnetb0": 181, "efficientnetb2": [181, 183], "effnetb0": 181, "effnetb2": [181, 182], "effnetb2_average_time_per_pr": 183, "effnetb2_food101": 183, "effnetb2_food101_model_path": 183, "effnetb2_food101_result": 183, "effnetb2_foodvision_mini_model_destin": 183, "effnetb2_foodvision_mini_model_path": 183, "effnetb2_model_s": 181, "effnetb2_result": 183, "effnetb2_stat": 183, "effnetb2_test_pred_df": 183, "effnetb2_test_pred_dict": 183, "effnetb2_total_param": 183, "effnetb2_transform": 183, "effnetb2_weight": [181, 183], "effort": [0, 133, 182, 183, 204], "eg": [41, 92, 100], "egg": [82, 121, 134], "egregi": 133, "eh": 83, "eigenvalu": [28, 156], "eigenvector": 28, "eight": [133, 146, 172, 181], "eighth": 21, "eighti": 41, "einstein": 41, "either": [41, 44, 45, 47, 67, 73, 74, 86, 91, 97, 100, 105, 121, 130, 133, 136, 143, 160, 161, 167, 174, 175, 176, 177, 178, 179, 184, 185, 189, 190, 192, 193, 196, 197, 199, 200, 201, 203, 204, 205], "ekan": 171, "el": 54, "elabor": [86, 147, 182], "elad": 147, "eladgil": 147, "elaps": 131, "elast": 133, "elasticsearch": 141, "eldest": 133, "electabuzz": 171, "electivir": 171, "electr": [143, 171], "electrik": 171, "electrod": 171, "eleg": [24, 36, 37, 38, 57, 59, 80, 133], "elegantli": 36, "elekid": 171, "element": [21, 29, 30, 31, 33, 36, 49, 50, 53, 54, 67, 71, 81, 82, 83, 94, 95, 97, 99, 154, 155, 156, 157, 160, 162, 163, 174, 176, 181, 182, 183, 190, 201, 203, 205], "elementari": 199, "elementtre": 70, "elementwis": [33, 34, 156, 157], "elementwise_affin": 182, "elemnet": [57, 94], "elemtnt": 94, "elev": 133, "elgyem": 171, "elif": [15, 24, 38, 44, 48, 51, 52, 74, 90, 133, 174], "elig": 122, "elimin": [51, 94, 108], "elisabeth": 146, "eliza": 148, "elizabeth": 146, "ell": 182, "elliot": [121, 189], "ellipsi": 91, "ello": 54, "elonmusk": 143, "els": [17, 18, 19, 20, 24, 36, 38, 41, 44, 45, 48, 52, 54, 55, 57, 59, 70, 76, 79, 80, 82, 87, 90, 93, 96, 103, 104, 121, 122, 131, 133, 138, 140, 141, 143, 146, 147, 148, 150, 161, 164, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 195, 198, 201, 203, 204], "elsewher": [133, 136, 146, 174, 175], "elucid": 201, "emac": 133, "email": [6, 15, 16, 17, 18, 26, 41, 42, 99, 125, 131, 140, 141, 143, 149], "emath": 158, "emb": [27, 113, 122, 135, 136, 137, 183], "embark": [199, 201], "embark_town": [199, 201], "embed": [53, 86, 133, 135, 136, 139, 145, 146, 148], "embed_dim": 182, "embed_docu": [121, 135], "embed_queri": 121, "embedd": [121, 182], "embedding_dim": 182, "embedding_dimens": 182, "embedding_dropout": 182, "embedding_funct": 136, "embedding_layer_input_shap": 182, "embedding_layer_output_shap": 182, "embedding_list": 121, "embedding_s": 182, "emboar": 171, "embodi": 133, "embosom": 133, "emerg": 135, "emili": 103, "emmett": 133, "emoji": [122, 132, 143], "emolga": 171, "emot": [133, 143, 147], "emp": [104, 105], "emp_data": 79, "emp_id": [57, 79], "emp_nam": 57, "emphas": [121, 133, 136, 143, 148], "emphasi": [121, 143, 183, 202, 205], "employe": [103, 104, 105, 133, 136, 141, 148, 203], "employee_info": 105, "empoleon": 171, "empow": [1, 41, 54, 192], "empower": 143, "empoye": 79, "empti": [12, 40, 41, 49, 50, 51, 54, 55, 56, 57, 70, 71, 76, 78, 83, 85, 103, 104, 133, 135, 153, 156, 160, 161, 166, 168, 175, 178, 179, 181, 183, 184, 185, 196], "empty_lik": 156, "emul": 183, "en": [136, 139, 176, 196], "enabl": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 105, 122, 140, 141, 142, 144, 148, 174, 175, 178, 179, 183, 204, 212], "enable_limit": 136, "encapsul": 38, "enclos": [38, 49, 50, 54, 56, 72, 89, 135, 198], "encod": [33, 54, 70, 72, 73, 122, 141, 147, 177, 189, 205, 206], "encoder_lay": 182, "encoder_or_encoder_class": 141, "encompass": [133, 135], "encount": [72, 73, 133, 156, 176, 203], "encourag": [121, 133, 135, 146, 182, 183, 200], "encrypt": [83, 133], "end": [0, 27, 29, 30, 31, 33, 34, 36, 37, 45, 49, 50, 51, 54, 56, 63, 68, 70, 72, 73, 76, 80, 86, 91, 94, 96, 100, 113, 122, 130, 133, 135, 136, 141, 143, 144, 146, 147, 148, 153, 157, 160, 161, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 193, 194, 195, 198, 201, 203, 204, 205], "end_dim": [177, 178, 182, 184, 185], "end_index": 26, "end_tim": [178, 180, 183, 184, 185], "endindex": 155, "endless": [1, 200], "endors": 146, "endpoint": [122, 157], "endswith": [54, 179, 184, 185], "endur": 133, "energet": 133, "energi": [133, 135, 138], "enforc": [91, 95, 183], "eng": 122, "engag": [133, 143, 203], "engin": [0, 26, 41, 104, 121, 122, 130, 133, 137, 141, 143, 144, 160, 161, 171, 172, 179, 180, 181, 182, 183, 185, 187, 203, 213], "engine_api_resourc": 133, "engine_rotation_spe": 92, "england": [70, 72, 73, 103, 133, 150], "english": [21, 54, 57, 93, 100, 133, 135, 190], "enhanc": [177, 191, 197, 198, 205], "enjoi": [0, 54, 82, 121, 122, 133, 134, 143, 146, 148, 195, 200], "enlarg": 190, "enorm": 0, "enough": [46, 55, 56, 92, 121, 131, 133, 136, 139, 176, 177, 178, 181, 182, 183, 189, 191, 197, 199, 200, 201, 202, 203, 204], "enrol": [146, 201], "enron": 136, "ensembl": [177, 212], "ensemble_doc": 136, "ensemble_retriev": 136, "ensembleretriev": 136, "ensur": [59, 70, 91, 105, 148, 175, 178, 180, 181, 182, 183, 192, 195, 197, 201, 203, 204], "ensure_ascii": 70, "entangl": 133, "entei": 171, "enter": [45, 46, 48, 50, 51, 73, 74, 76, 87, 91, 96, 105, 121, 122, 131, 133, 144, 147, 148, 203, 205], "enterpris": [26, 133, 182], "entertain": [136, 138], "enthusiast": [133, 143], "entir": [36, 37, 54, 55, 56, 57, 70, 100, 105, 133, 136, 137, 146, 163, 175, 182, 183, 196, 200, 201, 203, 205], "entireti": 205, "entiti": [34, 90, 103, 140], "entranc": 133, "entrepreneur": [144, 147], "entri": [19, 20, 47, 49, 57, 73, 133, 143, 160, 161, 168, 178], "entropi": [175, 176], "enuemer": 49, "enum": [121, 140, 142, 146, 180], "enumer": [11, 12, 15, 16, 17, 18, 32, 49, 54, 58, 135, 177, 178, 179, 182, 184, 185, 198, 201], "env": [26, 121, 137, 178, 183], "enviou": 133, "environ": [0, 25, 82, 100, 121, 122, 130, 131, 133, 137, 140, 141, 142, 143, 146, 147, 148, 178, 179, 181, 183, 193, 205], "envis": 147, "eof": 70, "eoferror": 72, "ep": [158, 182], "epar": 70, "epic": 183, "episod": [143, 146], "epitom": 204, "epoch": [67, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "epoch_count": 175, "epsilon": [9, 19, 20], "epub": 121, "eq": [82, 136, 176, 182], "equal": [21, 29, 33, 34, 36, 45, 46, 47, 48, 49, 50, 51, 53, 79, 80, 82, 84, 89, 93, 97, 106, 121, 122, 133, 135, 151, 153, 156, 160, 167, 174, 176, 177, 178, 182, 183, 196, 199, 201, 203], "equal1": 82, "equat": [6, 8, 13, 33, 148, 176, 191], "equip": [157, 194], "equival": [37, 39, 40, 49, 51, 54, 55, 57, 59, 61, 62, 63, 70, 81, 93, 97, 104, 105, 108, 133, 155, 156, 174, 176, 180, 181, 182], "er": [41, 133], "era": [133, 205], "eras": [70, 178], "erf": [82, 84], "erfc": [82, 84], "eric": 79, "erp": 26, "err": 131, "err_kw": 203, "err_palett": 203, "err_styl": 203, "errcolor": 201, "errno": 72, "error": [1, 8, 26, 36, 39, 40, 51, 53, 54, 58, 70, 73, 74, 76, 77, 79, 84, 90, 91, 94, 95, 96, 100, 103, 104, 105, 106, 122, 133, 135, 140, 141, 143, 147, 156, 161, 169, 175, 176, 177, 178, 179, 180, 182, 183, 191, 192, 201, 202], "errstat": 158, "errwidth": 201, "escap": [27, 71, 113, 146], "escavali": 171, "esp": 122, "especi": [21, 28, 100, 108, 133, 153, 174, 176, 183], "espeon": 171, "espurr": 171, "esqu": 122, "essai": [121, 122, 133, 135, 136, 137, 139, 181], "essenc": [139, 174, 175, 177, 178, 180, 181, 182, 183, 185], "essenti": [21, 25, 105, 153, 157, 176, 177, 178, 179, 180, 182, 201, 214], "essesnti": 120, "est": 122, "establish": [147, 183, 195, 203], "estat": [133, 138, 146], "estim": [5, 9, 13, 133, 148, 175, 178, 180, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203], "et": [70, 182], "eta": 177, "etc": [5, 8, 17, 18, 19, 20, 26, 27, 36, 37, 49, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 67, 76, 81, 82, 90, 91, 92, 95, 97, 98, 100, 103, 104, 113, 121, 122, 132, 133, 140, 141, 143, 153, 155, 156, 157, 160, 168, 171, 172, 175, 182, 189, 194, 195, 198, 202, 203], "ethan": [76, 79, 96], "ethic": [212, 214], "etr": 133, "etre": 70, "eu": 177, "eucl": 32, "euclid": 139, "euclidean": [34, 84], "euclidean_dist": 32, "eugen": 141, "eur": 122, "euro": 122, "europ": [61, 65, 122], "eva": 143, "eval": [26, 76, 96, 122, 142, 175, 176, 177, 178, 179, 180, 183, 184, 185], "eval_chain": 122, "eval_model": 177, "evalu": [44, 45, 46, 47, 50, 51, 81, 96, 97, 100, 147, 148, 174, 175, 181, 183], "evalut": [177, 183], "evan": 189, "even": [21, 24, 26, 37, 38, 39, 40, 44, 46, 47, 49, 50, 51, 53, 54, 55, 59, 70, 73, 76, 77, 79, 80, 81, 86, 91, 95, 96, 100, 104, 105, 108, 121, 133, 135, 136, 140, 141, 143, 144, 146, 148, 156, 157, 161, 162, 165, 166, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "even_list": 81, "even_no": 81, "even_num": 76, "even_numb": [39, 49, 59, 81], "even_odd": 76, "evenli": [133, 153, 157], "evenodd": 79, "event": [9, 73, 122, 130, 143, 144, 146, 147], "eventu": [133, 182, 202, 204], "ever": [41, 49, 54, 132, 133, 137, 140, 141, 146, 174, 175, 195, 198, 205], "everest": 135, "everi": [0, 1, 6, 8, 9, 11, 15, 16, 17, 18, 19, 20, 21, 26, 46, 49, 51, 53, 54, 58, 59, 63, 73, 80, 82, 94, 98, 100, 103, 104, 105, 106, 108, 122, 133, 140, 141, 143, 146, 154, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 192, 193, 194, 196, 198, 199, 203, 204, 205], "everon": 178, "everydai": [130, 133, 139], "everyon": [79, 122, 133, 137, 140, 141, 143, 148, 194], "everyth": [39, 55, 56, 57, 58, 74, 82, 94, 98, 103, 104, 133, 135, 174, 175, 176, 178, 181, 182, 183, 198, 201, 202], "everytim": [174, 185, 198], "everywher": [36, 174, 177, 183], "evid": [191, 193, 197], "evoc": [122, 143], "evok": 192, "evolut": 133, "evolutionari": 122, "evolv": [122, 136, 147, 183], "ew": 54, "eward": 41, "ex": [1, 41, 100, 121, 122, 140, 143], "exact": [5, 53, 133, 136, 175, 190, 197, 199], "exactli": [0, 41, 51, 54, 73, 108, 133, 139, 141, 143, 176, 181, 183, 184, 190, 197], "exagger": 133, "exam": [133, 175], "examin": 193, "exampl": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 33, 34, 36, 37, 38, 39, 40, 42, 45, 46, 47, 53, 54, 55, 56, 57, 58, 59, 67, 70, 72, 73, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 93, 94, 95, 96, 98, 99, 103, 104, 106, 108, 113, 131, 132, 133, 135, 136, 137, 139, 146, 147, 148, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 205, 206], "example_1": 183, "example_2": 183, "example_3": 183, "example_list": 183, "example_prompt": 121, "example_selector": 121, "example_text": 143, "example_tweet": 143, "example_writ": 181, "exaplan": [72, 103], "exc_info": [73, 133], "excadril": 171, "exce": 133, "exceed": [80, 133], "excel": [0, 37, 70, 130, 140, 141, 160, 175, 176, 177, 180, 181, 183], "excel_book": 70, "except": [8, 19, 20, 24, 26, 36, 39, 41, 54, 55, 70, 75, 82, 86, 90, 91, 104, 122, 131, 133, 140, 141, 147, 165, 174, 175, 176, 177, 178, 180, 181, 182, 183, 190, 192, 193, 197, 199, 201], "exception": 194, "exception1": 73, "exception2": 73, "exceptioni": 73, "exceptionii": 73, "exceptionn": 73, "excercis": 159, "excess": 133, "exchang": [144, 183], "excit": [1, 122, 133, 143, 147, 148, 181, 182], "exclud": [42, 58, 121, 133, 144, 147, 183, 189, 203, 204], "exclude_repli": [143, 147], "exclus": [70, 82, 133, 154, 160, 164], "excurs": 133, "excus": 205, "exect": 143, "execut": [0, 7, 21, 26, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 59, 67, 68, 70, 73, 76, 77, 82, 87, 89, 91, 98, 100, 103, 104, 111, 122, 130, 131, 133, 148, 164, 167, 169, 170, 175, 183, 205, 210, 213, 214], "exeggcut": 171, "exeggutor": 171, "exercis": [24, 77, 78, 133, 135, 143, 146, 171, 173, 175, 176, 177, 178, 180, 182, 183, 189, 202, 203], "exerics": 174, "exert": 133, "exhaust": [36, 49, 100, 133, 182, 193], "exhilar": 133, "exist": [5, 33, 39, 40, 41, 54, 55, 56, 57, 58, 59, 70, 72, 82, 98, 103, 104, 105, 108, 122, 133, 135, 138, 148, 160, 163, 164, 165, 166, 167, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 193, 201, 205, 206], "exist_ok": [175, 177, 178, 179, 180, 181, 183, 184, 185], "exit": [49, 50, 51, 70, 72, 82, 89], "exmapl": [143, 182], "exmpl": 54, "exp": [32, 53, 82, 84, 156, 158, 176], "expand": [33, 81, 86, 133, 157, 178, 182, 202], "expanded_top": 146, "expandtab": 54, "expect": [8, 12, 14, 29, 41, 73, 97, 130, 133, 135, 136, 160, 168, 174, 175, 176, 177, 178, 180, 183, 197, 199, 200, 203, 205], "expectantli": [133, 136], "expens": [80, 133, 136, 146, 174, 183], "experi": [0, 1, 26, 121, 132, 133, 134, 135, 137, 140, 141, 143, 146, 147, 148, 174, 175, 176, 178, 179, 180, 182, 188, 190, 193, 194, 197, 198, 199, 201, 205, 212, 213, 214], "experien": 141, "experiment": [26, 143, 174, 179, 181, 183], "experiment_nam": 181, "experiment_numb": 181, "expert": [1, 122, 133, 200, 213], "expertis": [135, 143], "expir": 183, "explain": [6, 15, 16, 17, 18, 80, 98, 108, 121, 122, 133, 135, 139, 148, 157, 165, 168, 175, 176, 177, 178, 179, 184, 185, 189, 190, 192, 193, 194, 198, 203], "explan": [42, 45, 46, 47, 49, 50, 51, 54, 59, 61, 64, 66, 68, 72, 73, 74, 77, 78, 79, 81, 83, 84, 87, 95, 97, 103, 104, 105, 106, 108, 121, 122, 156, 157, 182, 187, 198], "explanatori": 191, "explicit": [1, 30, 31, 91, 108, 133, 148, 156, 192, 198, 200, 201], "explicitli": [1, 38, 53, 59, 70, 76, 92, 122, 131, 133, 154, 183, 190, 201], "explin": 143, "explod": 150, "exploit": 100, "explor": [1, 41, 67, 120, 121, 133, 135, 139, 140, 141, 142, 143, 146, 148, 174, 175, 176, 177, 178, 179, 180, 181, 190, 193, 195, 198, 200, 213, 214], "exploratori": [1, 190], "explos": 182, "exploud": 171, "expm1": [82, 84], "expon": [36, 49, 54, 84, 96], "exponenti": [30, 54, 82, 83, 93, 97, 133, 156, 176, 200, 203], "export": [86, 175], "expos": [131, 133, 148], "expovari": 83, "express": [30, 31, 40, 41, 45, 46, 47, 50, 51, 54, 55, 57, 59, 76, 79, 81, 91, 93, 95, 96, 97, 99, 106, 122, 133, 146, 160, 174, 203], "expression1": 48, "expression2": 48, "expression3": 48, "expression4": 48, "exract": 146, "extempor": 202, "extend": [40, 54, 76, 91, 103, 105, 122, 133, 143, 147, 169, 192, 199, 200, 201], "extens": [9, 22, 26, 38, 82, 86, 89, 91, 96, 110, 150, 151, 177, 179, 181, 182, 183, 184, 185, 194, 203], "extent": [133, 198, 203], "extern": [51, 73, 121, 122, 137, 181], "extra": [40, 71, 72, 121, 136, 140, 141, 148, 167, 174, 184, 185, 187, 198, 199, 202], "extra_repr": 177, "extra_return_dict": 133, "extrac": [17, 18], "extract": [1, 9, 11, 15, 16, 17, 18, 19, 20, 41, 94, 121, 125, 136, 142, 143, 145, 149, 160, 177, 178, 180, 181, 182, 183, 198, 206], "extractal": [121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 178, 179, 180, 181, 184, 185], "extracton": 122, "extractor": 180, "extrapol": 194, "extravag": 133, "extrem": [133, 136, 143, 146, 148, 160, 183, 190, 191, 192, 193, 198, 200, 203, 205], "ey": [33, 133, 154, 158, 183, 201], "f": [29, 34, 38, 48, 53, 54, 62, 63, 70, 73, 74, 79, 86, 96, 99, 103, 104, 108, 121, 122, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 151, 156, 157, 164, 167, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 195, 198, 200, 203], "f09af94986b4": 56, "f1": [2, 9, 176], "f1_histori": 9, "f1_score": 176, "f1score": 176, "f2db54e8947c": 198, "f3f4b74da706": 56, "f45": 41, "f6b2789c4214": 169, "f6df5dfa": 136, "f7b055f5764d": 37, "f7d40ce0c112": 40, "f7ffd6347533": 72, "fab": [82, 84], "fab2e1af2c65": 108, "fabric": 205, "fabul": [143, 148, 197], "face": [8, 80, 121, 133, 143, 147, 178, 189, 204], "facebook": [146, 148, 174], "facebookfacebook": 144, "facecolor": [150, 197, 201], "facecream": 151, "facecremsalesdata": 151, "faceprep": 51, "facet": [190, 193, 202, 204, 205], "facet_kw": 202, "facetgrid": [193, 194, 195, 199, 202, 203, 204, 208], "facewashsalesdata": 151, "facil": [82, 146], "facilit": [33, 141, 199, 201], "fact": [36, 39, 55, 56, 121, 122, 133, 136, 139, 148, 153, 182, 183, 193, 200, 202, 203], "facto": 133, "factor": [28, 31, 51, 147, 183, 191, 195, 199, 200, 201, 203, 208], "factori": [30, 53, 80, 82, 84, 86, 133], "factorplot": [197, 199, 200, 202, 203], "faculti": 133, "fade": [192, 199], "fahrenheit": [40, 121, 142], "fail": [5, 6, 46, 47, 50, 70, 72, 133, 136, 160, 174, 175, 178, 192], "fair": [133, 175, 176, 177, 178, 180, 181, 182, 183, 195, 203], "fairi": [133, 171], "fairli": [37, 133, 177, 182], "faiss": [121, 122, 135, 136, 139], "faith": [180, 183], "fake": [133, 203], "fall": [21, 45, 53, 72, 87, 94, 133, 197, 203], "fallback": 154, "fallen": 133, "fals": [2, 9, 12, 14, 17, 18, 19, 20, 32, 39, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 70, 76, 82, 86, 90, 92, 93, 97, 105, 106, 122, 133, 140, 141, 142, 154, 155, 157, 158, 160, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "falsifi": 133, "famili": [6, 12, 14, 86, 143, 183, 194, 201, 203], "familiar": [40, 54, 56, 104, 133, 151, 172, 175, 176, 178, 195, 198, 200, 201, 202], "famou": [121, 133], "fan": [174, 182, 198, 205], "fanci": [121, 122, 133, 138, 155, 160], "fandango": 26, "fanstast": 183, "fantast": [176, 179, 181, 182, 183], "faq": 144, "far": [41, 47, 108, 133, 136, 157, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 190, 191, 192, 193], "fare": [199, 201, 203], "farfetch": 171, "farm": [133, 138], "fasewash": 151, "fashion": [6, 8, 18, 20, 105, 133, 177, 181, 183], "fashionmnist": [177, 178], "fashionmnistmodelv0": 177, "fashionmnistmodelv1": 177, "fashionmnistmodelv2": 177, "fast": [70, 121, 122, 133, 136, 153, 160, 164, 174, 179, 180, 181, 182, 183, 203], "fastai": 180, "fastapi": 183, "faster": [53, 56, 59, 94, 100, 103, 105, 144, 156, 175, 177, 181, 182], "fastest": 183, "fat": [134, 202], "fatal": [133, 136, 189], "father": 133, "fatherhood": 133, "fatigu": 133, "fatorplot": 197, "faustomoral": 183, "fav_food": 121, "favor": [133, 143], "favorit": [0, 121, 122, 134, 143, 147, 148], "favorite_count": [143, 147], "favour": 182, "favourit": 183, "fbf7cddd4b2a": 72, "fc": [150, 201], "fdel": 40, "fe": 137, "fear": [0, 133, 136], "fearow": 171, "feasibl": [133, 169], "feat": [181, 182], "featheri": 133, "featur": [1, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 103, 105, 106, 121, 122, 133, 139, 142, 144, 164, 174, 175, 176, 177, 178, 180, 189, 191, 192, 193, 194, 195, 197, 199, 200, 203, 204, 205, 213, 214], "feature_map_height": 182, "feature_map_width": 182, "feb": [62, 63, 89], "februari": [62, 63, 121, 133, 174], "fed": [1, 21, 133, 135, 139, 182], "fee": 146, "fee1": 136, "feeba": 171, "feebl": 133, "feed": [46, 143, 174, 180, 200, 212], "feedback": [46, 136, 148, 183], "feedforward": [19, 20, 182], "feedpars": 26, "feel": [121, 133, 135, 137, 138, 143, 146, 147, 182, 183, 189, 193, 194, 195, 197, 198, 199], "feet": [122, 133], "felic": 133, "felici": 144, "fell": 133, "fellow": 144, "felt": [133, 146], "femal": [70, 103, 171, 189, 193, 196, 198, 199, 200, 201, 205], "female_dinn": 200, "female_lunch": 200, "fenc": [182, 199], "fennekin": 171, "feraligatr": 171, "ferrose": 171, "ferrothorn": 171, "fervent": 133, "fetch": [13, 82, 136, 142, 160, 190, 193, 194, 197, 199, 201, 203, 204, 205], "few": [38, 39, 40, 49, 50, 53, 54, 57, 61, 120, 121, 122, 133, 135, 136, 137, 143, 146, 147, 148, 157, 160, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "fewer": [0, 24, 182, 203, 204], "fewshotprompttempl": 121, "feynman": 0, "fffbe51149a7": 63, "fget": 40, "fh": 73, "fib": 82, "fibo": 82, "fibo1": 82, "fibonacci": [37, 50, 82], "fibonacci_numb": 37, "fickl": 136, "fiction": 201, "fiddl": 202, "field": [12, 14, 54, 70, 93, 121, 122, 133, 135, 136, 137, 140, 142, 143, 160, 163, 182, 183, 192, 203], "fierc": 133, "fifa": 122, "fifa_data": 150, "fifteen": 133, "fifti": 133, "fig": [27, 32, 113, 177, 178, 182, 183, 191, 196, 200], "fight": [12, 13, 14, 15, 16, 17, 18, 19, 20, 133, 143, 171], "fighth": [17, 18, 19, 20], "figma": [144, 147], "fignam": 32, "figsiz": [9, 11, 12, 14, 17, 18, 19, 20, 27, 29, 113, 150, 175, 176, 177, 178, 182, 183, 192, 200, 201, 203, 207], "figur": [9, 11, 12, 17, 18, 19, 20, 29, 48, 74, 85, 90, 105, 121, 122, 133, 135, 136, 139, 143, 150, 151, 175, 176, 177, 178, 180, 181, 183, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207], "file": [7, 21, 26, 36, 37, 54, 72, 73, 74, 78, 79, 82, 85, 86, 89, 90, 92, 96, 100, 111, 121, 122, 125, 133, 135, 136, 142, 146, 148, 149, 151, 160, 168, 169, 170, 171, 175, 178, 179, 180, 181, 184, 185, 186, 187, 205, 210], "file_data": 70, "file_extens": 183, "file_nam": [135, 160], "file_path": 137, "filedata": 157, "fileexistserror": 82, "filemoveinput": 142, "filenam": [82, 96, 122, 136, 160, 175, 178, 179, 181, 183, 184, 185, 194], "fileno": 70, "filenotfounderror": [70, 72, 178], "filepath": [175, 178, 180, 181, 182, 183], "files": [181, 183], "fill": [131, 133, 150, 153, 154, 157, 174, 178, 179, 181, 183, 184, 185, 194], "fillna": 160, "filter": [0, 55, 57, 59, 133, 135, 136, 143, 170, 177], "filter_cond": 160, "filterwarn": [191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "fin": [73, 122], "final": [8, 29, 37, 39, 49, 50, 51, 54, 55, 70, 72, 77, 78, 90, 92, 96, 98, 108, 121, 122, 130, 132, 133, 135, 136, 138, 143, 144, 146, 147, 156, 170, 175, 177, 178, 181, 182, 183, 185, 192, 195, 199, 200, 201, 203, 204, 205], "final_prompt": [121, 122, 132, 143], "finali": 157, "finaltext": 96, "financ": [138, 153], "financi": [53, 122, 133, 140, 141], "find": [0, 2, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 37, 41, 49, 50, 54, 59, 61, 65, 70, 73, 76, 80, 82, 87, 92, 94, 105, 108, 121, 122, 131, 132, 133, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 155, 156, 157, 160, 164, 166, 175, 176, 177, 178, 179, 181, 183, 184, 185, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 214], "find_class": 178, "find_even_numb": 76, "findarea": 105, "findli": 144, "fine": [90, 96, 121, 122, 133, 143, 175, 176, 178, 180, 182, 203], "finer": [140, 141, 190], "finfo": 158, "finish": [38, 49, 121, 122, 133, 144, 148, 177, 181, 182, 183, 184, 185, 193, 196], "finit": [29, 36, 53, 137], "finland": [12, 14, 49, 54, 70, 73, 92, 103], "finneon": 171, "fintech": 198, "fir": 191, "fire": [133, 171, 183], "firelight": 133, "firesid": 133, "firm": [133, 146, 199], "firmer": 204, "firmli": 133, "first": [1, 8, 9, 10, 17, 18, 19, 20, 21, 29, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 54, 59, 61, 62, 63, 67, 70, 71, 72, 73, 76, 77, 79, 82, 86, 87, 92, 96, 100, 103, 104, 105, 106, 108, 121, 122, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 150, 155, 156, 160, 167, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 190, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205], "first_lett": 54, "first_nam": [39, 49, 54, 76, 92, 95, 141], "first_name_to_list": 95, "first_nm": 79, "first_numb": 96, "first_respons": 142, "firstnam": [42, 76, 79, 92, 96, 103], "fisher": [11, 15, 133], "fit": [1, 2, 5, 6, 12, 13, 14, 86, 121, 133, 135, 138, 175, 177, 178, 182, 183, 184, 185, 191, 193, 194, 195, 196, 199, 200, 203], "fit_fn": 191, "fit_reg": 193, "fit_transform": 135, "fitit": 146, "fitler": 136, "five": [41, 49, 105, 133, 150, 160, 161, 163, 174, 176, 177, 182, 183], "fix": [27, 49, 72, 79, 100, 113, 121, 122, 133, 160, 175, 176, 177, 178, 182, 193, 203], "flaaffi": 171, "flab\u00e9b\u00e9": 171, "flag": [13, 17, 18, 19, 20, 41, 122, 131, 150, 158, 164, 165, 166, 167, 169, 170, 171, 179, 183, 189, 195, 203], "flag_r": 195, "flagcdn": 122, "flake": 133, "flamer": 171, "flank": 133, "flaot": 53, "flareon": 171, "flase": 97, "flask": 26, "flat": 158, "flat_latency_grid": 9, "flat_prob": 9, "flat_throughput_grid": 9, "flatten": [9, 11, 12, 13, 14, 15, 16, 59, 153, 177, 178, 179, 184, 185, 197], "flatten_model": 177, "flattened_list": 59, "flattn": 182, "flavor": [22, 110, 121, 134], "flavour": [174, 181], "flee": [133, 189], "fleme": 49, "fletchind": 171, "fletchl": 171, "flexibl": [26, 42, 94, 140, 141, 160, 174, 175, 191, 193, 196, 197, 198], "flexibli": 196, "flexport": 147, "flierprop": 199, "fliersiz": 199, "flight": [133, 189, 206, 207], "fligth": 206, "flip": [178, 190], "float": [26, 40, 48, 51, 54, 55, 56, 58, 61, 68, 72, 73, 82, 83, 84, 87, 91, 93, 94, 95, 97, 105, 133, 154, 160, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 192, 197, 198, 200, 201], "float16": 174, "float32": [174, 175, 176, 178, 180], "float64": [150, 154, 156, 160, 161, 162, 168, 174], "float64index": 160, "float_1": 93, "float_16_tensor": 174, "float_2": 93, "float_32_tensor": 174, "float_numb": 96, "floatingpointerror": 72, "floattensor": 178, "floatzel": 171, "floett": 171, "flood": [133, 136], "floor": [82, 84, 97, 104, 106, 133, 158, 176, 197], "floppi": 132, "florenc": 133, "florg": 171, "flounder": 133, "flow": [11, 49, 50, 51, 54, 70, 73, 133, 143, 175, 182, 204], "flowchart": 1, "flower": [4, 6, 11, 15, 16, 49, 133, 189, 197], "floyd": 49, "fluctuat": 203, "fluff": 136, "fluoresc": 133, "flush": [50, 68, 70, 86], "fly": [37, 103, 104, 105, 133, 138, 171, 183], "flygon": 171, "flying_test": 103, "fmod": [82, 84], "fmri": 203, "fmt": 150, "fn": [2, 133, 183], "fo": 41, "focu": [121, 122, 132, 133, 143, 147, 174, 175, 182, 183, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "focus": [103, 121, 130, 133, 135, 143, 144, 146, 148, 176, 178, 179, 181, 182, 183], "foe": [21, 82], "folder": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 71, 82, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 160, 171, 172, 177, 178, 179, 180, 181, 184, 192, 194, 195, 200, 201, 203], "folk": 121, "follow": [0, 1, 2, 4, 5, 6, 7, 8, 18, 20, 21, 24, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 44, 46, 49, 51, 53, 54, 55, 56, 57, 58, 59, 70, 72, 73, 74, 76, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92, 93, 96, 97, 98, 100, 103, 104, 105, 106, 108, 111, 120, 121, 122, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 148, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 192, 203, 204, 205, 206, 210, 213, 214], "fom": 50, "font": [133, 141, 150, 190, 198, 201, 203], "font_scal": [190, 200], "fontdict": 150, "fontnam": 150, "fontsiz": [150, 177, 178, 182, 183, 200, 205], "fontweight": [150, 200, 201, 205], "foo": [41, 55, 57, 142], "food": [94, 121, 134, 140, 143, 176, 178, 179, 182, 183], "food101": [178, 181], "food101_class_nam": 183, "food101_class_names_load": 183, "food101_train_transform": 183, "food_1": 134, "food_2": 134, "food_imag": 178, "food_nam": 183, "foodextractor": 140, "foodvis": [180, 181, 182], "foodvision_big": 183, "foodvision_big_class_names_path": 183, "foodvision_big_demo_path": 183, "foodvision_mini": 183, "foodvision_mini_demo_path": 183, "foodvision_mini_exampl": 183, "foodvision_mini_examples_path": 183, "foongu": 171, "foot": [133, 150], "footbal": [41, 205], "football_plot": 205, "footer": 144, "footnot": 133, "footprint": [182, 183], "forbid": 133, "forc": [0, 21, 74, 137, 143, 154, 161, 183, 189], "force_edgecolor": 204, "forcibli": 86, "ford": [105, 172], "forecast": [140, 141], "foreign": 133, "forese": 147, "foreshadow": 143, "forest": [133, 177], "forev": 50, "forget": [0, 8, 182, 183], "forgot": [72, 133, 178], "forgotten": [50, 133], "form": [5, 8, 9, 11, 13, 15, 21, 38, 45, 49, 53, 54, 57, 59, 62, 63, 70, 71, 79, 81, 82, 87, 94, 100, 103, 122, 133, 135, 136, 141, 143, 147, 153, 154, 156, 160, 164, 165, 168, 171, 176, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 199, 200, 201, 202, 203, 204, 205], "formal": [79, 108, 133, 182], "format": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 32, 39, 42, 49, 56, 57, 66, 67, 70, 82, 91, 103, 104, 106, 121, 122, 132, 133, 134, 135, 138, 141, 142, 143, 144, 148, 160, 161, 168, 174, 176, 177, 178, 179, 180, 181, 182, 183, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "format_instruct": [121, 122, 138], "format_prompt": [122, 132, 134, 136, 138, 141], "format_regex": 63, "format_tool_to_openai_funct": 142, "format_vers": 86, "former": [91, 105, 133, 144], "formfe": 54, "formul": 49, "formula": [2, 5, 6, 41, 175, 176, 182], "forretress": 171, "fortan": 157, "forth": [82, 122], "forth_respons": 142, "forti": [133, 139], "fortran": 133, "fortun": [53, 133], "forum": [133, 176, 179, 180, 183, 197, 198, 199, 201], "forward": [21, 49, 54, 71, 72, 94, 133, 144, 148, 174, 175, 176, 177, 179, 180, 182, 184, 185, 203, 206], "forward_cal": [177, 178], "found": [0, 34, 38, 41, 49, 51, 54, 57, 63, 72, 73, 82, 97, 100, 105, 121, 133, 135, 136, 140, 141, 143, 144, 147, 148, 154, 164, 167, 174, 175, 176, 177, 178, 180, 181, 182, 183, 192, 199, 201, 203, 206], "foundat": [133, 178, 182, 202], "founder": [133, 135, 136, 144, 147, 180, 182], "fountain": [121, 133], "four": [10, 11, 15, 41, 44, 49, 63, 76, 93, 96, 105, 108, 133, 136, 143, 148, 157, 160, 161, 172, 175, 176, 177, 183, 189, 190, 199, 205, 214], "fourth": [41, 50, 96, 122, 136, 164], "fp": [2, 131], "fr": 122, "fra": 122, "frac": [12, 14, 17, 18, 19, 20, 29, 30, 31, 32, 33, 34, 97, 176], "fractal": 139, "fraction": [63, 84, 146, 191], "fradul": 183, "fragrant": [121, 133], "frame": [16, 17, 18, 19, 20, 80, 91, 133, 160, 164, 167, 168, 169, 177, 183, 199, 204, 205], "frameobject": 91, "framework": [8, 19, 20, 26, 121, 122, 123, 142, 146, 174, 182, 205], "franc": [121, 122], "frances": 122, "francesa": 122, "franchis": 146, "franci": 122, "francia": 122, "franciaorsz\u00e1g": 122, "francisco": [121, 122, 142, 144, 146, 148, 189], "francja": 122, "francouzsk\u00e1": 122, "francuska": 122, "franc\u00e9": 122, "franc\u00fazska": 122, "franc\u00fazsko": 122, "frank": 79, "frankreich": 122, "frankrijk": 122, "frankrik": 122, "frans": 122, "fransa": 122, "franz\u00f6sisch": 122, "fran\u00e7a": 122, "fran\u00e7ai": 122, "fran\u00e7ais": 122, "fraud": [176, 183], "fraudul": [6, 15, 16, 17, 18, 183], "fraxur": 171, "fra\u00f1": 122, "free": [1, 24, 70, 121, 133, 135, 136, 137, 140, 141, 143, 147, 174, 181, 182, 183, 194, 195, 197, 198, 199, 201, 203], "freecodecamp": 183, "freed": 70, "freedom": [5, 12, 14, 141, 181, 204], "freelanc": 133, "freeli": [24, 203], "freez": [133, 182, 183], "french": [121, 122, 183], "frequenc": [160, 199, 200], "frequent": [51, 82, 135, 155, 156, 160, 182, 183, 199, 202], "fresh": [121, 134, 136, 143, 175, 176], "fresher": [133, 205], "frexp": [82, 84], "fri": [67, 140, 198, 200, 201], "friction": [121, 122, 133], "fridai": 121, "fridman": 180, "friend": [6, 122, 133, 136, 137, 141, 174, 180, 182, 183], "friendli": [37, 59, 183], "frighten": 133, "frighteningli": 133, "frillish": 171, "frist": 176, "froaki": 171, "frogadi": 171, "frolick": 133, "from": [0, 1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 29, 30, 31, 32, 36, 37, 38, 40, 41, 49, 50, 51, 53, 54, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 84, 86, 90, 92, 94, 95, 97, 98, 99, 100, 103, 104, 105, 106, 108, 113, 120, 121, 122, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 156, 167, 168, 169, 175, 177, 178, 179, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214], "from__email": 131, "from__nam": 131, "from_arrai": [164, 167], "from_chain_typ": [122, 139, 146], "from_dict": [160, 172], "from_docu": [121, 122, 136, 137, 139, 145, 146], "from_exampl": 121, "from_llm": [122, 136], "from_llm_and_api_doc": 122, "from_messag": [132, 134, 146, 148], "from_numpi": [174, 176], "from_response_schema": [121, 122, 138], "from_templ": [122, 132, 134, 138, 146, 148], "from_text": 137, "from_tupl": [163, 170], "from_uri": 122, "from_valu": 131, "from_youtube_url": 147, "from_zapier_nla_wrapp": 131, "fromarrai": 158, "fromisoformat": [140, 141], "fromit": 158, "fromtimestamp": [61, 62, 66], "fron": [12, 14], "front": [41, 54, 133, 135, 136, 174, 181, 182, 201], "frontend": 190, "frontier": [135, 139], "froslass": 171, "frosti": 133, "frown": 108, "froze": 180, "frozen": [180, 181, 182, 183], "frugal": 133, "fruit": [41, 49, 55, 73, 93, 104, 122, 133, 136, 162, 201], "fruit1": 162, "fruit2": 162, "fruit3": 162, "fruit4": 162, "fruit_nam": 122, "fruit_output": 122, "fruit_queri": 122, "fruits1": 93, "fruits2": 93, "fruits3": 93, "fruits4": 93, "fruits_and_veg": 73, "fruits_df": 162, "fruits_dict": 162, "fruits_list": 162, "fset": 40, "fsize": 32, "fsum": [82, 84], "fucntion": [77, 78], "fulfil": [137, 174, 193], "full": [10, 17, 18, 19, 20, 21, 26, 61, 62, 63, 70, 71, 76, 82, 85, 92, 121, 122, 131, 132, 133, 135, 136, 139, 143, 154, 156, 174, 175, 176, 178, 181, 182, 183, 185, 200], "full_backward_hook": [177, 178], "full_data": 70, "full_lik": 154, "full_nam": [76, 79], "full_text": [143, 147], "fulli": [130, 133, 135, 174, 181, 182, 183, 201], "fun": [41, 76, 77, 78, 79, 82, 92, 97, 133, 136, 140, 143, 175, 177, 180, 182, 183, 185, 192, 204], "fun1": [77, 78, 105], "fun2": [77, 78, 105], "fun3": [78, 105], "func": [39, 122, 135, 167, 198], "func1": 103, "func2": 103, "function": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 31, 36, 40, 41, 42, 44, 50, 51, 53, 61, 67, 68, 70, 71, 72, 73, 77, 83, 85, 89, 90, 91, 92, 93, 94, 95, 98, 103, 104, 108, 110, 122, 125, 130, 132, 135, 139, 141, 143, 146, 147, 149, 151, 153, 157, 160, 162, 174, 180, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "function_cal": [121, 140, 142], "function_descript": 142, "function_nam": [76, 142], "function_respons": 142, "functionis": 181, "functionnam": 73, "functool": [81, 133], "fund": [121, 122, 131, 133, 136, 183], "fundament": [103, 125, 133, 135, 143, 160, 181, 182, 183, 188, 192, 214], "fundrais": 136, "fungu": 122, "funni": 133, "fur": 8, "furfrou": 171, "furret": 171, "further": [4, 12, 13, 14, 15, 16, 17, 18, 21, 37, 54, 70, 72, 74, 76, 96, 98, 100, 144, 160, 161, 169, 175, 176, 178, 181, 182, 183, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "furthermor": [37, 39, 40, 55, 76, 82, 98, 103, 108, 136, 190], "furtur": 180, "fusion": [178, 179, 184, 185], "fut": 133, "futher": 122, "futur": [21, 49, 51, 70, 92, 108, 122, 132, 133, 135, 136, 141, 143, 147, 168, 174, 175, 176, 177, 178, 179, 181, 183, 185, 192, 196, 202, 203, 205, 214], "futurewarn": [135, 168, 172, 192, 196], "fuzz": 122, "fuzzywuzzi": 122, "g": [1, 5, 6, 8, 12, 14, 25, 39, 51, 55, 56, 70, 92, 121, 137, 142, 150, 151, 154, 156, 157, 160, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "g53c4ty0qi": 143, "g7qxxsfswytpkuzd7": 122, "ga": 150, "gabit": 171, "gackl": 133, "gai": 133, "gain": [133, 148, 182, 193, 194, 202, 203], "gallad": 171, "gallademega": 171, "galleri": [122, 133], "galvantula": 171, "gam": 203, "game": [26, 85, 121, 133, 175], "gamma": [82, 83, 84, 203], "gammavari": 83, "gap": [90, 133, 135, 139], "garbag": [70, 72, 104, 139, 165], "garbodor": 171, "garchomp": 171, "garchompmega": 171, "garden": 133, "gardevoir": 171, "gardevoirmega": 171, "gari": 79, "garlic": [121, 134, 183], "gas_pric": 150, "gas_price_figur": 150, "gastli": 171, "gastrodon": 171, "gate": 143, "gatesfound": 143, "gather": [121, 133, 140, 141, 147, 160, 161, 165, 182, 198], "gaug": [197, 198], "gaul": 133, "gauss": 83, "gaussian": [83, 157, 182, 193, 194, 196, 203], "gaussian_anomali": 9, "gaussian_anomaly_detect": 9, "gaussiananomalydetect": 9, "gaussiankd": 200, "gave": [122, 133, 136, 137, 146], "gca": [198, 204, 205], "gcd": 82, "gcp": [137, 141, 174], "gdp": [5, 12, 14, 133, 203], "gdpr": [140, 141], "gea": 150, "geeksforgeek": [5, 6], "gelu": 182, "gem": 133, "gender": [70, 103, 189, 193, 197, 198, 200, 201, 205], "gender_domin": 200, "gener": [5, 6, 8, 12, 15, 16, 19, 20, 24, 26, 31, 34, 36, 39, 43, 44, 49, 50, 53, 54, 56, 72, 73, 74, 76, 80, 81, 82, 83, 85, 86, 91, 94, 97, 100, 103, 104, 105, 108, 120, 122, 125, 131, 132, 133, 134, 135, 136, 143, 146, 147, 149, 151, 154, 155, 164, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213, 214], "generaliz": [177, 178], "generate_full_nam": 76, "generate_group": 79, "generate_respons": 132, "generatig": 191, "generatingdata": [193, 195], "generation_info": 134, "generatorexit": 72, "generos": [12, 14], "genesect": 171, "genexpr": 37, "genfromtxt": [157, 158], "gengar": 171, "gengarmega": 171, "genius": 133, "genotyp": 197, "genr": 121, "genteel": 133, "gentleman": 203, "gentli": 133, "genuin": [133, 143], "geociti": 133, "geodud": 171, "geograph": 203, "geometr": 34, "geophys": 122, "georg": 182, "geq": 29, "gereet": 76, "germain": 150, "german": 134, "germancar": 172, "germani": [122, 134, 172], "get": [0, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 33, 36, 37, 38, 40, 41, 42, 45, 46, 48, 49, 50, 51, 53, 54, 58, 59, 63, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 81, 82, 91, 92, 97, 98, 103, 104, 105, 106, 108, 110, 111, 121, 122, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 147, 148, 154, 155, 157, 161, 163, 167, 168, 170, 172, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213], "get_authors_tone_descript": 143, "get_company_pag": 144, "get_cost": [12, 14], "get_current_weath": [121, 142], "get_data": 104, "get_food_ment": 140, "get_format_instruct": [121, 122, 138], "get_group": 172, "get_height": 201, "get_num_token": [122, 135, 146], "get_offset": 197, "get_openai_callback": [140, 141], "get_original_tweet": [143, 147], "get_relevant_docu": [121, 136, 145], "get_similar_public_figur": 143, "get_temperatur": 40, "get_text": [140, 141, 147], "get_tool": 131, "get_video_transcript": 147, "get_width": 201, "get_x": 201, "get_xlim": 198, "get_xticklabel": 201, "get_yticklabel": 201, "getattr": [104, 105, 145, 198], "getcwd": 82, "getcwdb": 71, "getdata": 104, "getdatalim": 197, "getenv": [121, 122, 132, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147], "getidea": [135, 139], "getlogg": 136, "getrandbit": 83, "getrespons": 131, "getroot": 70, "getstat": 83, "ggplot": 150, "gh_jid": [140, 141], "ghost": 171, "gi": 174, "giant": [133, 136], "gibl": 171, "giddi": 133, "gif": 131, "giffin": 133, "gift": 39, "gigabyt": 205, "gigalith": 171, "gil": 147, "gini": 122, "giphi": 131, "girafarig": 171, "giratinaalt": 171, "giratinaorigin": 171, "gist": [135, 194], "gist_earth": 195, "gist_earth_r": 195, "gist_grai": 195, "gist_gray_r": 195, "gist_heat": 195, "gist_heat_r": 195, "gist_ncar": 195, "gist_ncar_r": 195, "gist_rainbow": 195, "gist_rainbow_r": 195, "gist_stern": 195, "gist_stern_r": 195, "gist_yarg": 195, "gist_yarg_r": 195, "git": [179, 180, 181, 182, 183], "gitattribut": 183, "github": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 92, 121, 146, 150, 151, 177, 178, 179, 180, 181, 182, 183, 184, 185], "githubusercont": 183, "gitlab": [144, 147], "give": [0, 15, 16, 21, 26, 36, 39, 45, 46, 49, 51, 53, 54, 73, 82, 84, 90, 92, 97, 103, 104, 120, 121, 122, 132, 133, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 153, 154, 156, 157, 160, 161, 162, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205], "giveawai": 195, "given": [2, 4, 5, 29, 30, 31, 34, 37, 39, 42, 44, 45, 49, 50, 51, 54, 58, 61, 63, 67, 68, 72, 73, 76, 79, 82, 86, 89, 90, 93, 96, 98, 105, 108, 121, 122, 132, 133, 135, 136, 138, 139, 142, 146, 147, 148, 153, 154, 157, 161, 174, 176, 177, 178, 179, 180, 181, 182, 183, 193, 197, 198, 200, 203, 205], "gkdive": 150, "gkhandl": 150, "gkkick": 150, "gkposit": 150, "gkreflex": 150, "gl": 122, "glaceon": 171, "glacial": 133, "glacier": 133, "glad": 148, "glali": 171, "glaliemega": 171, "glameow": 171, "glanc": 213, "glare": 133, "glass": 133, "glassi": 133, "gleam": 133, "glean": [140, 141], "glenbrook": 133, "gligar": 171, "glimps": [175, 200], "gliscor": 171, "glob": [136, 139, 178, 180, 181, 183], "global": [24, 38, 72, 81, 88, 90, 98, 136, 143, 182], "global_lang": 77, "global_step": 181, "global_var": [77, 78], "globalglob": 77, "gloom": 171, "glori": 133, "gloriou": 133, "glove": 148, "glu": 191, "gmail": 131, "gmtoff": 63, "gmtoff_fract": 63, "gnbu": 195, "gnbu_r": 195, "gnome": 174, "gnuplot": 195, "gnuplot2": 195, "gnuplot2_r": 195, "gnuplot_r": 195, "go": [0, 5, 6, 8, 9, 12, 17, 18, 19, 20, 26, 29, 39, 40, 48, 49, 51, 53, 73, 76, 80, 98, 100, 103, 106, 108, 121, 122, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 153, 171, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "goal": [1, 122, 132, 133, 135, 136, 137, 141, 143, 144, 146, 147, 148, 158, 177, 178, 181, 182, 183, 186, 190, 193, 194, 202], "god": [57, 133], "goe": [12, 13, 14, 15, 16, 17, 18, 38, 68, 72, 73, 74, 82, 108, 140, 141, 143, 148, 164, 167, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 194, 200], "gogh": 26, "gogoat": 171, "going_modular": [179, 180, 181, 182, 183, 185, 186], "goku": [181, 183], "golbat": 171, "gold": [133, 140, 141], "goldeen": 171, "goldman": 133, "golduck": 171, "golem": 171, "golett": 171, "golurk": 171, "gone": [133, 148, 174, 178, 181, 182, 183, 193, 197, 203], "gonna": [148, 203], "goo": 122, "good": [17, 18, 19, 20, 38, 49, 54, 56, 70, 73, 74, 76, 79, 82, 87, 91, 96, 121, 122, 131, 132, 133, 135, 136, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 160, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "good_or_bad": 140, "good_str": 121, "goodorbad": 140, "goodra": 171, "googl": [0, 26, 86, 105, 121, 122, 130, 131, 136, 147, 148, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 203], "google_api_kei": 122, "google_cse_id": 122, "googlemap": 122, "googlesearchapiwrapp": 122, "googol": 93, "goomi": 171, "gorebyss": 171, "got": [0, 39, 42, 78, 82, 94, 95, 106, 133, 136, 146, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 199, 200], "got_stream": 133, "gothita": 171, "gothitel": 171, "gothorita": 171, "gotten": [133, 181], "gourgeistaverag": 171, "gourgeistlarg": 171, "gourgeistsmal": 171, "gourgeistsup": 171, "govern": [12, 14, 133, 197, 203], "gpt": [121, 122, 132, 135, 136, 139, 140, 141, 143, 146, 147, 148, 212], "gpt3": 146, "gpt4": [121, 122, 135, 140, 141, 146, 148], "gpt_index": 121, "gpu": [175, 176, 178, 179, 180, 181, 182, 183, 185], "gr": 183, "grab": [137, 141, 143, 146, 201], "gracefulli": [51, 169], "grad": [121, 133, 144, 175, 176, 177, 178, 179, 184, 185], "grad_fn": [174, 176, 177, 182], "grade": [45, 46, 47, 122, 133, 150, 161, 197], "graded_output": 122, "gradient": [19, 20, 175, 176, 177, 178, 180, 182], "gradual": [133, 182], "graduat": [133, 200], "graham": [121, 133, 135, 136, 137], "grai": [177, 192, 195, 197, 198, 205], "graido": 183, "grain": 146, "granbul": 171, "grand": 133, "grandeur": 133, "grandli": 133, "grandpar": 105, "grant": [47, 133, 144], "granul": 133, "grape": 49, "graph": [1, 5, 135, 151, 175, 181, 194, 197, 201, 203], "graph_obj": 12, "graphic": [26, 73, 133, 174, 179, 182, 198, 200, 204, 206], "grasp": 135, "grass": 171, "grate": [121, 143], "grather": 143, "gravel": 171, "graviti": [76, 92, 95, 101], "gray_r": 195, "grayscal": [10, 18, 20, 177, 178, 192], "great": [106, 121, 122, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 177, 178, 180, 182, 191, 197, 198, 203, 204, 205, 206], "greater": [45, 47, 48, 50, 51, 74, 82, 84, 92, 97, 106, 133, 153, 156, 160], "greatest": [180, 182, 183], "greatli": 133, "greek": [30, 31, 103, 135], "green": [0, 17, 18, 19, 20, 49, 91, 133, 141, 174, 175, 177, 181, 192, 195, 196, 198], "greenhous": [140, 141], "greens_r": 195, "greet": [39, 76, 79, 96, 104], "greet_modul": 82, "greg": [131, 140, 141, 143, 144, 148], "gregori": [140, 141], "gregorykamradt": [121, 122, 135, 136], "grei": [17, 18, 19, 20, 143, 190, 192, 195, 196, 201], "greninja": 171, "gretta": 79, "grew": [133, 144], "greyish": 192, "greys_r": 195, "grid": [9, 12, 14, 151, 153, 154, 183, 190, 195, 200, 202, 203, 204, 205], "grid_kw": 195, "gridlin": 151, "gridsiz": 200, "gridspec": 205, "gridspec_kw": [200, 205], "grill": 134, "grim": 133, "grimer": 171, "grind": 133, "grip": [199, 204], "grotl": 171, "groudon": 171, "groudonprim": 171, "ground": [103, 121, 122, 133, 139, 171, 175, 176, 182, 183], "group": [1, 26, 121, 133, 136, 146, 160, 172, 178, 182, 190, 193, 197, 199, 200, 201, 203], "groupbi": [172, 198, 200], "grouper": 200, "grove": 133, "grovyl": 171, "grow": [0, 24, 76, 85, 96, 121, 133, 136, 137, 139, 148, 182], "growlith": 171, "grown": [139, 146], "growth": [12, 13, 14, 133, 136, 140, 141, 147, 203], "gruesom": 133, "grumpig": 171, "gt": [82, 140, 141], "gti": 133, "gtm": 141, "guancial": 121, "guarante": [56, 70, 73, 122, 133, 143, 181, 205], "guard": 133, "guava": [49, 201], "guess": [15, 16, 40, 74, 136, 143, 148, 154, 160, 175, 176, 178, 180, 181, 182, 189, 198, 199, 201, 202], "guest": [47, 133], "guestim": 146, "gui": [26, 73, 133, 136, 191, 195, 197, 201, 203], "guid": [0, 1, 24, 27, 113, 122, 137, 144, 174, 175, 177, 178, 179, 181, 183, 184, 185, 191, 192, 194, 214], "guidanc": [1, 192], "guidebook": 183, "guidelin": 174, "guilti": 133, "gulpin": 171, "gun": 189, "gunmet": 192, "gurdurr": 171, "gusti": 121, "gusto": 147, "gutenberg": 121, "gutenbergload": 121, "guthri": 189, "gweriniaeth": 122, "gyarado": 171, "gyaradosmega": 171, "gz": [82, 177], "h": [1, 37, 41, 49, 50, 51, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 95, 97, 156, 177, 178, 180, 182, 189, 199, 201], "h1": 157, "h2": 157, "ha": [0, 4, 8, 12, 14, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 49, 51, 53, 54, 57, 58, 59, 61, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 85, 89, 91, 93, 94, 95, 97, 98, 100, 103, 104, 105, 108, 121, 122, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 150, 155, 156, 157, 160, 161, 162, 163, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "habit": [0, 203], "hack": [133, 200], "hackathon": [121, 122], "hacker": [133, 144], "hackernew": 121, "hackl": 122, "had": [0, 38, 39, 72, 76, 79, 82, 121, 133, 135, 136, 137, 143, 146, 147, 148, 156, 176, 177, 178, 180, 182, 183, 184, 185, 190, 194, 195, 198, 199, 200, 201, 202, 203, 205], "hadlei": [193, 203], "hadn": [133, 136, 178], "hale": 133, "half": [21, 121, 133, 146, 148, 174, 176, 181, 192, 202], "halfwai": 133, "hall": 146, "hallucin": 147, "halt": 73, "halv": [121, 133, 177], "hamm": 32, "hamming_distance_a": 32, "hamming_distance_b": 32, "hamper": 82, "hamster": 182, "hand": [0, 1, 49, 57, 58, 70, 77, 79, 100, 103, 104, 133, 136, 137, 139, 142, 143, 148, 174, 175, 176, 178, 180, 181, 183, 190, 193, 194, 195, 198, 201, 203, 205], "handcraft": [178, 182], "handel": [24, 75], "handi": [26, 121, 136, 150, 151, 160, 171, 172, 178, 182, 185, 193, 194, 197, 198, 200, 203, 204, 205], "handl": [6, 26, 36, 37, 38, 51, 54, 67, 68, 70, 71, 72, 74, 79, 122, 133, 135, 147, 153, 155, 161, 169, 176, 178, 180, 181, 182, 183, 194, 201, 203], "handle_error_respons": 133, "handler": 51, "handwritten": [6, 8, 17, 19, 177], "hang": [133, 174], "hank": 79, "happen": [29, 36, 37, 38, 42, 49, 50, 98, 100, 105, 106, 121, 122, 133, 135, 136, 137, 143, 144, 148, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191], "happi": [5, 12, 14, 51, 54, 55, 76, 89, 96, 103, 131, 143, 148, 175, 194, 199, 203], "happili": 0, "happin": 14, "happind": [12, 14], "happini": 171, "har": [178, 182], "hard": [21, 24, 41, 70, 80, 122, 130, 133, 135, 136, 137, 140, 141, 143, 146, 148, 174, 175, 176, 179, 181, 182, 183, 205], "hardcod": [175, 183], "hardcor": 146, "harder": [133, 178, 181], "hardli": [121, 133], "hardtop": 172, "hardwar": [0, 19, 20, 53, 100, 121, 133, 136, 138, 174, 175, 177, 178, 180, 181, 182, 183, 185], "hariyama": 171, "harj": 133, "harmless": 191, "harmon": [2, 29], "harper": 79, "harri": [104, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170], "harsh": 133, "harvard": [133, 136, 200], "has_w2": 92, "hasattr": [104, 143, 147], "hash": [86, 91, 133], "hashabl": 58, "hashtag": 143, "hasn": [175, 176, 178, 181], "hassl": 121, "hat": [34, 178, 181], "hatch": 150, "hatchback": [160, 161, 172], "hate": [134, 136], "haunt": 133, "haunter": 171, "have": [0, 1, 2, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 106, 108, 111, 120, 121, 122, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 214], "haven": [61, 133, 136, 175, 176, 180, 182, 195, 197, 198, 203], "hawk": 41, "hawlucha": 171, "haxoru": 171, "hazard": 133, "hazel": 133, "hazi": 205, "he": [41, 54, 70, 73, 74, 103, 121, 122, 133, 136, 139, 146, 147, 148, 178, 182, 204], "head": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 122, 133, 139, 143, 148, 150, 160, 171, 172, 174, 176, 180, 183, 189, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 207], "headcount": 142, "header": [76, 79, 131, 133, 163, 164, 167, 169, 170, 171, 200, 205], "headlin": [130, 146], "headquart": 133, "heal": 133, "health": [12, 14, 133, 138, 143, 146, 147, 176], "healthcar": [143, 147], "healthi": 133, "healthkit": 122, "heap": 133, "hear": [133, 140, 141, 144, 146], "heard": [133, 148, 183], "heart": [28, 140, 141, 176, 182], "hearti": [133, 134], "heat": [121, 134, 205, 208], "heathkit": [122, 133], "heatmap": [205, 207], "heatmor": 171, "heatran": 171, "heaven": 133, "heavi": [150, 178, 200, 203], "heavier": 133, "heaviest": 133, "heavili": [133, 146, 195, 196], "hedg": 133, "heedless": 133, "heel": 133, "hei": [41, 56, 131, 140, 141, 148, 182], "height": [122, 133, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 191, 194, 195, 201], "height_ratio": 200, "heinlein": 133, "held": [122, 203], "heliolisk": 171, "helioptil": 171, "hello": [24, 26, 37, 38, 39, 41, 45, 46, 49, 54, 55, 56, 58, 68, 72, 76, 79, 82, 86, 91, 92, 94, 95, 96, 97, 98, 102, 104, 105, 131, 185, 197], "hello009": 54, "hello99": 54, "hello99world66": 54, "hello_world": 185, "hellohellohello": 54, "helloworld": [49, 50, 51, 54, 55, 56, 58], "help": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 41, 44, 49, 50, 51, 55, 61, 62, 63, 66, 67, 73, 74, 76, 80, 82, 87, 90, 92, 98, 103, 110, 121, 122, 131, 133, 134, 135, 136, 137, 139, 140, 141, 144, 146, 147, 148, 150, 151, 153, 160, 161, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 213, 214], "helper": [49, 122, 132, 137, 140, 141, 176, 177, 179, 186], "helper_funct": [176, 177, 180, 182, 183], "helpless": 133, "helsinki": 70, "henc": [44, 45, 49, 50, 51, 53, 54, 55, 56, 59, 61, 70, 77, 81, 82, 94, 96, 97, 98, 100, 103, 106, 136, 155, 174, 175, 176, 182, 189, 190, 193, 194, 201, 202, 203, 205], "her": [121, 133, 143, 146, 148, 202], "heracross": 171, "heracrossmega": 171, "herb": 134, "herdier": 171, "here": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 36, 37, 38, 39, 40, 41, 49, 50, 51, 53, 55, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 96, 97, 98, 103, 104, 105, 106, 110, 113, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 146, 147, 148, 155, 156, 157, 161, 162, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214], "herebi": 133, "hereon": 205, "heroku": 133, "heterogen": [56, 160, 162, 168], "hex": [53, 54, 192, 194, 196], "hexadecim": [53, 54, 93, 96], "hexagon": 194, "hexpoint": 108, "hf": 183, "hh": 54, "hhmm": [62, 63], "hi": [0, 41, 57, 68, 73, 121, 122, 133, 135, 139, 143, 146, 147, 182, 202, 203], "hibern": 141, "hidden": [1, 8, 36, 103, 121, 133, 176, 177, 178, 179, 181, 182, 184, 185], "hidden_unit": [176, 177, 178, 179, 184, 185], "hide": [38, 40, 103, 133, 192, 200], "hiden": 177, "hierarch": [160, 161, 163, 170, 207], "hierarchi": 85, "high": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 83, 121, 133, 139, 141, 143, 144, 146, 147, 150, 151, 153, 154, 160, 174, 177, 178, 180, 181, 182, 190, 194, 199, 200, 201, 202, 204], "high_end": 141, "higher": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 46, 81, 95, 100, 133, 144, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 193, 194, 200, 202], "higher_order_funct": 38, "highest": [9, 82, 130, 133, 160, 174, 176, 177, 178, 181, 189, 194, 197, 199, 201], "highli": [1, 70, 104, 108, 122, 133, 153, 177, 182, 183, 190, 194, 195, 197, 198, 199, 200, 201, 204], "highlight": [133, 143, 148, 182, 183, 191, 193, 205, 207], "hike": 148, "hill": [5, 6], "hilltop": 133, "him": [121, 133, 137, 147], "himself": [108, 122, 133, 146, 147], "hint": [74, 132, 143, 158, 172, 174, 176, 177, 178, 180, 182, 201], "hip": 133, "hippopota": 171, "hippowdon": 171, "hire": [133, 136, 146], "hispan": 189, "hist": [9, 12, 14, 150, 151, 195, 196, 204, 205], "hist_kw": 191, "histogram": [9, 12, 14, 191, 194, 195, 196, 198, 201, 204], "histohram": [9, 12, 14], "histori": [9, 122, 133, 139, 142, 148], "histplot": 196, "histtyp": 204, "hit": [72, 183], "hitch": 133, "hitmonchan": 171, "hitmonle": 171, "hitmontop": 171, "hl": 192, "hls_palett": 192, "hmm": [143, 182, 183, 200, 204], "hmmm": [181, 202], "hmph": 133, "hn": 133, "hnloader": 121, "ho": [54, 171, 180, 181, 182, 183], "hoax": 133, "hobbi": 161, "hoffman": 189, "hold": [17, 18, 19, 20, 55, 78, 79, 92, 108, 121, 135, 137, 140, 141, 154, 178, 183, 185, 197, 200, 202, 205], "holder": [146, 147], "hole": 133, "holi": 182, "hollow": 133, "home": [103, 121, 133, 142, 144, 174], "home_print": 142, "homebrew": 137, "homemad": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "homepag": [147, 183], "homework": [194, 195, 198, 201, 203], "homogen": [56, 154], "hon": 26, "honchkrow": 171, "honda": 172, "honedg": 171, "honei": 51, "honest": 197, "honestli": [133, 195, 199, 200, 203], "honor": 203, "hood": [122, 141, 199, 200], "hook": [122, 178], "hoopahoopa": 171, "hoorai": 45, "hoothoot": 171, "hootsuit": 148, "hope": [49, 54, 76, 133, 136, 143, 174, 189, 193, 195, 201, 203, 204], "hopefulli": [133, 135, 136, 143, 146, 177, 178, 180, 182, 183], "hoppip": 171, "horac": [178, 182], "horitzont": 157, "horizon": [133, 178, 202], "horizont": [33, 54, 122, 153, 157, 178, 182, 190, 197, 198, 199, 200, 201, 203, 205], "horizontalalign": 182, "horowitz": 146, "horrai": 45, "horribl": 133, "horrifi": [133, 136], "hors": 133, "horsea": 171, "horsepow": [160, 161, 171, 172], "hose": 175, "hospit": 133, "host": [132, 133, 146, 174, 181, 183], "hostnam": [73, 181], "hot": [27, 113, 133, 134, 183, 195], "hot_r": 195, "hottest": 122, "hotz": 182, "houndoom": 171, "houndoommega": 171, "houndour": 171, "hour": [62, 63, 65, 66, 67, 105, 133, 148, 150, 175, 182, 183, 202], "hous": [1, 104, 133, 136, 148, 174, 203], "how": [0, 1, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 37, 38, 39, 40, 41, 44, 46, 49, 50, 51, 53, 56, 57, 59, 61, 67, 70, 72, 73, 74, 77, 78, 79, 81, 83, 84, 86, 95, 96, 100, 103, 104, 105, 106, 111, 121, 122, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 160, 161, 162, 164, 166, 167, 168, 169, 170, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 194, 198, 200, 201, 202, 203, 204, 205, 210], "how_to_describe_ton": 143, "howard": [175, 180], "howdi": 41, "howev": [21, 40, 41, 45, 46, 49, 56, 58, 59, 68, 73, 74, 78, 91, 92, 94, 95, 98, 100, 103, 104, 105, 106, 108, 133, 136, 142, 146, 147, 148, 154, 155, 156, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 206], "hp": 171, "hr": 136, "href": 174, "hrv": 122, "hspace": [17, 18, 19, 20, 200], "hstack": [9, 12, 153, 204], "hsv": [193, 195, 198, 199, 201, 202], "hsv_r": [195, 198], "html": [26, 27, 54, 70, 103, 113, 122, 133, 139, 140, 141, 145, 146, 147, 148, 156, 160, 175, 176, 177, 192, 203, 207, 214], "http": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 121, 122, 131, 133, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 150, 156, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 196, 203, 207], "httplib": 131, "httplib_request_kw": 131, "httplib_respons": 131, "hu": 51, "hub": [121, 180, 182], "hubspot": 148, "hue": [192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "hue_kw": [204, 205], "hue_ord": [193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "hug": 178, "huge": [34, 94, 121, 133, 136, 170, 180, 182, 192, 197, 200, 203, 205], "huggingfac": [177, 180, 182], "huggingface_hub": 183, "huh": 133, "human": [1, 21, 40, 41, 59, 91, 100, 121, 122, 133, 134, 142, 143, 146, 148, 175, 183, 204, 212], "human_input": 122, "human_message_prompt": [132, 134, 148], "human_message_prompt_combin": 148, "human_message_prompt_map": [146, 148], "human_templ": [132, 134, 146, 148], "humanmessag": [121, 122, 134, 138, 140, 142, 148], "humanmessageprompttempl": [121, 122, 132, 134, 138, 146, 148], "humili": 133, "hun": 122, "hundr": [40, 133, 174, 205], "hung": 133, "hungari": 194, "hungri": [46, 180], "hunt": [42, 76, 96, 182], "huntail": 171, "hunter": 133, "husband": [133, 148], "hush": 133, "husl": [192, 201], "hustl": 146, "huyen": 183, "hwc": [177, 178], "hwchase17": 143, "hybrid": [136, 182, 200], "hydreigon": 171, "hyperbol": 84, "hyperparamet": [175, 176, 177, 179, 181, 182, 185], "hypno": 171, "hypot": [82, 84], "hypothesi": 8, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 51, 53, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 212, 213], "i1": 33, "i2": 33, "i3": 33, "i9": 183, "i_1": 33, "i_2": 33, "i_3": 33, "i_m": 33, "i_n": 33, "i_num": 74, "ia": 189, "iat": 160, "ibm": 133, "ic": [10, 133, 140, 171], "icefir": [195, 197, 198, 199, 200, 203, 204, 205], "icefire_r": 195, "iceland": [12, 14, 73], "ici": 133, "icon": [0, 26, 182, 213, 214], "id": [45, 76, 79, 82, 98, 104, 121, 122, 136, 140, 141, 150, 170, 174, 179, 189, 190, 201, 202, 203], "id_var": [199, 205], "idd": 122, "idea": [30, 31, 36, 37, 87, 91, 96, 108, 122, 131, 133, 135, 136, 139, 143, 144, 146, 148, 175, 176, 177, 179, 180, 181, 182, 183, 195, 197, 198, 199, 203, 204, 205], "ideal": [50, 138, 147, 175, 176, 177, 180, 181, 182, 183, 189, 190, 192, 197, 200, 201, 203, 204], "idel": 133, "ident": [30, 31, 133, 140, 141, 153, 154, 156, 160, 170, 194, 201, 202, 204], "identif": 9, "identifi": [1, 8, 24, 39, 54, 59, 73, 76, 81, 82, 85, 91, 92, 97, 98, 102, 103, 121, 133, 140, 141, 143, 144, 160, 161, 162, 165, 167, 169, 177, 183, 201, 203], "identitytransform": 198, "ideologi": 182, "idual": 182, "idx": [178, 182], "idx1": 177, "idx3": 177, "ieee754_realbin": 32, "ifetch": 199, "ifram": 183, "igglybuff": 171, "igma": 31, "ignor": [49, 50, 51, 86, 91, 133, 135, 141, 164, 167, 175, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "ignore_index": [165, 166], "igor": 179, "ii": [27, 113, 133, 193], "iii": 189, "iinfo": 158, "ij": [30, 31, 33], "ill": 133, "illeg": [72, 91], "illumin": 192, "illumis": 171, "illustr": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 37, 49, 50, 58, 73, 74, 87, 108, 133, 178, 182, 189, 190, 191, 198, 200, 204, 205], "iloc": [122, 160, 171], "imag": [1, 5, 6, 8, 10, 17, 18, 19, 20, 26, 27, 70, 80, 93, 104, 113, 122, 133, 143, 174, 175, 176, 177, 179, 184, 185, 187, 190, 192, 194, 203, 204, 205], "image01": [178, 179, 185], "image02": 178, "image101": 178, "image102": 178, "image154": 178, "image155": 178, "image167": 178, "image24": 178, "image25": 178, "image37": 178, "image_batch": 182, "image_class": 178, "image_conv_feature_map": 182, "image_out_of_conv": 182, "image_out_of_conv_flatten": 182, "image_out_of_conv_flattened_reshap": 182, "image_patch_1": 182, "image_patch_1_posit": 182, "image_patch_2": 182, "image_patch_2_posit": 182, "image_patch_3": 182, "image_patch_3_posit": 182, "image_path": [178, 179, 180, 181, 182, 183, 184, 185], "image_path_list": 178, "image_permut": 182, "image_resolut": 182, "image_s": [17, 18, 19, 20, 180, 181], "image_transform": 180, "imageclassif": [180, 181, 182, 183], "imagefold": [179, 184, 185], "imagefoldercustom": 178, "imagenet": [176, 178, 180, 181, 182, 183], "imagenet1k_v1": 180, "imagenet_v1": 180, "imagenet_v2": 180, "imageri": 143, "imagin": [21, 41, 98, 133, 136, 142, 160, 175, 176, 177, 181, 182, 183], "imaginari": [53, 72, 93, 94, 158, 193], "imbal": 191, "img": [71, 177, 178, 180, 183, 184, 185, 194], "img_as_arrai": 178, "img_batch": [178, 184, 185], "img_custom": 178, "img_permut": 178, "img_singl": [178, 184, 185], "img_siz": 182, "imgseek": 26, "imit": [13, 133], "immedi": [37, 46, 49, 50, 67, 68, 73, 76, 89, 108, 133, 182, 183, 189], "immens": [144, 191], "immers": 146, "immut": [49, 54, 55, 56, 57, 58, 76, 93, 94, 157], "imp": 82, "impa": 147, "impact": [121, 122, 143, 146, 193, 198], "imperfect": 53, "implement": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 38, 39, 40, 51, 53, 55, 56, 74, 76, 82, 91, 100, 103, 105, 106, 108, 130, 133, 147, 148, 156, 174, 175, 176, 177, 180, 182, 193, 194, 195, 205, 212], "impli": [54, 55, 70, 71, 91, 97, 133], "implic": [133, 147, 198], "implicit": [54, 108, 143], "implicitli": [53, 91, 108, 133, 172], "import": [0, 1, 2, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 41, 44, 50, 53, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 78, 81, 83, 84, 86, 90, 91, 92, 100, 102, 103, 108, 113, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213], "import_ipynb": 82, "importantli": 177, "importerror": 72, "importlib": 82, "imposs": [21, 96, 137, 182, 183, 200], "impress": [121, 133, 143, 146], "improp": 72, "improv": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 76, 122, 135, 136, 143, 144, 147, 160, 169, 174, 175, 177, 178, 180, 181, 182, 183, 212], "impur": 133, "imshow": [17, 18, 19, 20, 177, 178, 180, 182], "in_channel": [177, 178, 179, 182, 184, 185], "in_featur": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "inan": 200, "inbox": [131, 133, 136], "inbuilt": [93, 157, 164], "inc": 39, "incas": 174, "inch": [133, 150], "incid": [189, 201], "incit": 133, "includ": [7, 21, 26, 27, 36, 41, 46, 49, 50, 51, 54, 55, 70, 73, 82, 86, 87, 89, 94, 100, 104, 108, 111, 113, 121, 122, 130, 131, 132, 133, 135, 136, 143, 144, 146, 147, 148, 151, 154, 157, 160, 161, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 189, 190, 195, 199, 205, 206, 210, 213, 214], "inclus": [82, 83, 154, 160, 192], "incom": [79, 122, 138, 194], "incompat": 182, "incomplet": 91, "inconsist": [72, 174], "incorpor": [133, 134, 177, 178, 181, 182, 190], "incorport": 134, "incorrect": [46, 50, 72, 91, 100, 121, 122, 183], "increas": [8, 12, 13, 14, 15, 16, 17, 18, 21, 50, 51, 55, 91, 135, 136, 140, 141, 146, 147, 176, 177, 178, 180, 181, 182, 183, 192, 194, 198, 199, 202, 203, 205], "incred": [143, 181], "incredibli": 132, "increment": [49, 50, 51, 78, 106], "ind": 55, "inde": [133, 198, 199, 200, 201, 205], "indefinit": 50, "indent": [24, 45, 46, 48, 49, 51, 70, 72, 76, 78, 102, 140, 141], "indentationerror": [72, 91], "independ": [5, 6, 13, 15, 16, 17, 18, 100, 122, 131, 133, 144, 190, 193, 201, 202], "index": [4, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 32, 37, 41, 50, 54, 57, 58, 67, 72, 73, 82, 94, 96, 136, 137, 139, 146, 153, 154, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 194, 201, 203, 204, 205], "index1": 161, "index2": 161, "index_nam": [137, 146], "index_on": 160, "indexerror": [54, 55, 56], "indi": 122, "india": [140, 143], "indianr": 196, "indic": [2, 9, 13, 17, 18, 19, 20, 45, 54, 55, 56, 67, 70, 72, 91, 133, 135, 155, 164, 165, 168, 175, 179, 180, 181, 182, 183, 184, 185, 189, 193, 195, 197, 199, 200, 201, 203], "indirect": 105, "indirectli": 74, "individu": [54, 57, 70, 82, 133, 141, 143, 146, 155, 176, 179, 182, 191, 195, 197, 199, 200, 201, 202, 203, 204, 206], "indivis": 203, "indulg": 121, "industri": [1, 133, 136, 138, 146, 147, 161, 162, 174, 213], "ineff": 133, "ineffici": [49, 80], "inexpens": 133, "inexplic": 139, "inf": [36, 82, 156, 158, 198], "infam": 182, "infer": [92, 136, 142, 146, 157, 160, 161, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 194, 198, 200, 202, 203, 204, 205], "inference_mod": [176, 177, 178, 179, 180, 183, 184, 185], "inferior": 133, "infernap": 171, "inferno": 195, "inferno_r": 195, "infin": [29, 30, 31, 84, 156, 158], "infinit": [30, 31, 50, 53, 68, 80, 97, 174, 177, 180], "infit": 36, "inflow": 133, "influenc": [133, 141, 176, 183], "influenti": 181, "info": [19, 20, 86, 104, 105, 108, 136, 158, 179, 180, 181, 182, 183, 184, 185, 196], "inform": [0, 1, 7, 9, 21, 27, 61, 70, 73, 78, 92, 108, 111, 113, 121, 122, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 160, 161, 177, 178, 180, 181, 182, 183, 197, 199, 201, 202, 203, 204, 205, 210], "informatin": 122, "infrastructur": 133, "infti": [29, 30, 31, 32], "ing": 41, "ingredi": [121, 176, 178], "inher": [1, 192], "inheret": 181, "inherit": [24, 73, 74, 107, 108, 178, 182], "inhomogen": 155, "inimit": 133, "init": [7, 9, 108, 111, 121, 135, 137, 146, 181, 210], "init_notebook_mod": 12, "initi": [4, 12, 13, 14, 19, 20, 36, 37, 49, 50, 51, 58, 70, 77, 83, 85, 92, 98, 103, 104, 105, 108, 122, 133, 135, 136, 137, 146, 153, 154, 166, 175, 176, 178, 182, 193, 196, 204, 205], "initialize_ag": [121, 122, 130, 131, 135], "initialzi": 175, "inkai": 171, "inlcud": 182, "inlin": [12, 29, 32, 81, 150, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "inmemorystor": 136, "inner": [3, 8, 38, 39, 49, 50, 51, 77, 135, 156, 160, 174, 198, 199, 200], "inner_arg": 198, "inner_f": 198, "inner_fun": 77, "inner_func": 98, "inner_funct": 98, "inner_kwarg": 198, "innermost": [50, 51], "innov": [122, 143, 147, 214], "innumer": 133, "inplac": [160, 164, 165, 166, 167, 169, 170, 171, 180, 181, 182, 183, 201], "input": [1, 5, 6, 8, 12, 14, 18, 19, 20, 36, 37, 38, 39, 40, 42, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 82, 87, 90, 92, 93, 94, 95, 97, 100, 103, 104, 105, 106, 108, 110, 121, 122, 130, 131, 133, 138, 141, 142, 143, 155, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 178, 179, 180, 181, 184, 185, 187, 193, 197, 198, 199, 203, 204, 205, 206], "input_docu": [133, 137, 144, 146, 147, 148], "input_featur": 176, "input_formatt": 141, "input_i": 176, "input_industri": 138, "input_kei": [122, 133], "input_list": 133, "input_param_nam": 14, "input_param_name_1": 12, "input_param_name_2": 12, "input_s": [178, 180, 181, 182, 183], "input_shap": [177, 178, 179, 180, 181, 184, 185], "input_to_model": 181, "input_vari": [121, 122, 134, 135, 136, 138, 143, 144, 147], "inputsid": 105, "insan": [121, 122, 133], "insert": [54, 57, 86, 104, 121, 122, 131, 144, 153, 161, 170], "insid": [36, 38, 39, 40, 41, 42, 45, 46, 48, 51, 54, 55, 56, 57, 58, 59, 68, 70, 71, 73, 76, 77, 78, 79, 82, 86, 87, 89, 91, 92, 94, 95, 96, 98, 103, 104, 105, 106, 108, 133, 146, 148, 160, 174, 175, 177, 179, 180, 181, 182, 183, 185, 194, 199, 200, 201, 202, 205], "insight": [1, 133, 143, 144, 146, 147, 194, 198, 199, 201, 214], "inspect": [108, 167, 175, 177, 178, 181, 182], "inspir": [8, 19, 20, 133, 143, 146, 182], "insrantli": 26, "inst_creat": 108, "insta": 155, "instacart": 147, "instagraminstagram": 144, "instal": [0, 70, 82, 121, 130, 135, 136, 137, 139, 142, 147, 174, 176, 177, 178, 180, 181, 182, 183, 191], "instanc": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 39, 49, 53, 55, 63, 72, 73, 82, 86, 91, 94, 98, 105, 108, 133, 156, 157, 160, 167, 168, 175, 176, 177, 178, 179, 182, 183, 184, 185, 197, 200, 205, 206], "instant": 81, "instanti": [53, 61, 103, 104, 108, 122, 175, 176, 177, 179, 181, 182, 183, 184, 185], "instantli": 51, "instead": [8, 10, 17, 18, 19, 20, 21, 26, 37, 38, 40, 42, 46, 50, 72, 82, 92, 100, 103, 104, 105, 106, 133, 134, 136, 137, 144, 156, 160, 162, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 189, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205], "instens": 178, "instinct": 133, "institut": [133, 177], "instruct": [1, 7, 45, 68, 73, 91, 111, 122, 131, 135, 140, 141, 142, 146, 147, 148, 179, 190, 209, 210], "insur": 136, "int": [17, 18, 19, 20, 26, 36, 38, 39, 49, 50, 53, 54, 55, 56, 72, 73, 74, 86, 93, 94, 95, 96, 97, 104, 105, 121, 140, 150, 166, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "int32": [154, 156, 157], "int64": [19, 20, 154, 157, 160, 161, 171, 172, 176, 183], "int8": [174, 180], "int_": 29, "int_1": 93, "int_2": 93, "intact": [133, 193], "intead": 122, "integ": [45, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 70, 73, 76, 80, 82, 83, 84, 86, 91, 93, 94, 95, 97, 142, 153, 154, 160, 161, 162, 174, 176, 178, 179, 181, 184, 185], "integr": [121, 122, 130, 133, 179, 181, 214], "intel": [100, 133, 183], "intellectu": 133, "intellig": [133, 143, 144, 174, 177, 193, 201, 212], "intellij": 190, "intelloom": 0, "intend": [10, 18, 20, 133, 194, 205], "intens": [0, 133, 143, 178, 193], "intent": [86, 121, 131, 193, 201], "inter": [199, 201, 202], "interac": 183, "interact": [1, 8, 12, 25, 26, 27, 37, 70, 82, 89, 96, 104, 113, 121, 133, 134, 146, 147, 160, 174, 181, 183, 190, 213, 214], "intercept": 191, "intercept_stderr": 191, "interchang": [160, 174, 198], "interest": [0, 1, 21, 37, 39, 41, 73, 98, 104, 133, 135, 139, 144, 146, 148, 166, 175, 182, 185, 190, 191, 192, 200, 201, 202, 203, 204], "interfac": [26, 40, 73, 103, 122, 130, 133, 142, 190, 192], "interg": 95, "interleaf": 133, "intermedi": 100, "intermediari": [100, 182], "intermediate_step": [131, 133], "intern": [36, 37, 40, 51, 54, 55, 70, 72, 79, 83, 103, 104, 106, 133, 161, 175, 176, 177, 192], "internal_job_id": [140, 141], "internet": [26, 130, 133, 143, 183, 195], "interp": 158, "interpol": [178, 180, 181, 182, 183, 184, 185, 194, 203], "interpolationmod": [178, 180, 181, 182, 183], "interpret": [26, 37, 41, 45, 49, 50, 51, 54, 72, 73, 76, 79, 80, 82, 86, 89, 90, 91, 95, 96, 97, 98, 102, 133, 176, 178, 193, 201, 202, 203, 204, 213, 214], "interquartil": 200, "interrelationship": 205, "interrupt": 72, "intersect": [49, 94], "intersect1d": 158, "intersection_upd": 58, "interspers": 176, "interst": 135, "interv": [6, 15, 16, 17, 18, 29, 30, 31, 133, 150, 153, 157, 190, 193, 195, 197, 199, 200, 201, 202, 203], "intervent": 212, "interview": [133, 147, 203, 212], "intim": 133, "intimid": [182, 183], "intiuit": 26, "intothinairbook": 135, "intrigu": [1, 189], "intrins": [189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "intro": [42, 133, 140, 141, 209], "intro_python": 214, "introduc": [8, 40, 54, 146, 175, 176, 177, 181, 182, 199, 200, 204, 205], "introduct": [3, 54, 122, 131, 176, 177, 181, 182, 212, 214], "introductori": 194, "intrud": 177, "intuit": [9, 25, 40, 160, 175, 177, 178, 181, 197], "inuit": 143, "inv": [33, 153], "invalid": [16, 48, 54, 72, 73, 82, 90, 92, 95, 96, 156], "invalidrequesterror": 133, "invent": [121, 133], "inventor": 49, "inventori": 140, "invers": [28, 51, 67, 84, 135, 153, 156], "invert": [33, 41], "invest": [133, 136, 144, 146, 147, 201], "investig": [176, 181], "investor": [133, 136, 144, 147], "invis": 200, "invit": [133, 146, 148], "invitingli": 133, "invoc": [81, 193], "invok": [0, 39, 59, 104, 106], "involv": [1, 53, 97, 105, 133, 143, 147, 148, 174, 175, 176, 177, 178, 179, 182, 183, 189, 194, 197, 199, 203, 212], "io": [137, 140, 141, 146, 176, 177, 178, 179, 183, 184, 185, 187], "ioerror": 73, "ion": [27, 113], "ip": [146, 203], "ipad": 122, "iphon": 122, "iplot": 12, "ipo": 136, "ipod": 122, "ipykernel_28927": 131, "ipykernel_3695928": 174, "ipykernel_4303": 133, "ipynb": [22, 26, 71, 82, 110, 174, 178, 181, 183, 186], "ipynb_checkpoint": [71, 183], "ipython": [26, 36, 37, 38, 39, 40, 42, 50, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 77, 78, 79, 80, 82, 90, 92, 93, 94, 95, 96, 97, 103, 104, 106, 108, 122, 146, 148, 155, 156, 164, 167, 169, 172, 177, 183, 190, 192, 194, 198, 203], "iqr": 199, "ireland": 194, "iri": [4, 6, 11, 15, 150, 189, 192, 194, 195, 197, 198, 199, 207], "iris_data": [150, 207], "iris_typ": [11, 15], "iron": 36, "ironi": 143, "irrespect": 51, "irrespons": 133, "is_avail": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "is_cal": 39, "is_dir": [178, 179, 180, 181, 184, 185], "is_even": [39, 76], "is_explicit_retri": 133, "is_fil": [176, 177, 178, 180, 181, 182], "is_mar": 49, "is_marri": 92, "is_name_long": 39, "is_odd": 39, "is_return": 39, "is_uniqu": 169, "isalnum": 54, "isalpha": [50, 54], "isatti": 70, "isclos": [82, 177], "isdecim": [50, 54], "isdigit": 54, "isdisjoint": 58, "isfinit": [82, 84], "ish": 135, "ishan": 144, "isidentifi": 54, "isin": [199, 201], "isinf": [82, 84], "isinst": [53, 94, 104, 105, 133], "isl": 121, "island": 136, "islow": 54, "isn": [8, 19, 20, 132, 133, 135, 141, 143, 146, 147, 160, 167, 174, 175, 177, 178, 179, 181, 182, 183, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "isnan": [82, 84], "isnul": 160, "isnumer": 54, "iso": 131, "isol": [26, 98, 133], "isotrop": [30, 31], "isprint": 54, "isqrt": 82, "isspac": [51, 54], "issu": [6, 53, 59, 78, 135, 141, 143, 148, 151, 174, 175, 176, 177, 178, 183, 192, 200, 204], "issubset": 58, "issuecom": 183, "issuperset": 58, "istitl": 54, "isupp": 54, "isuzu": 172, "ita": 122, "ital": 175, "itali": 122, "italian": 133, "item": [9, 12, 14, 17, 18, 19, 20, 36, 37, 39, 41, 42, 49, 50, 54, 58, 59, 72, 73, 81, 82, 86, 94, 104, 121, 122, 133, 140, 141, 143, 145, 147, 153, 161, 164, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 201], "items": [154, 157, 158], "iter": [5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 37, 39, 43, 51, 59, 72, 80, 82, 84, 96, 99, 122, 131, 133, 143, 146, 147, 161, 177, 178, 179, 181, 182, 183, 184, 185, 190, 201, 203, 205], "iter_obj": 36, "iteract": 183, "iterrow": [144, 160, 171, 183], "itertool": 195, "its": [1, 2, 5, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 30, 31, 37, 38, 39, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 70, 76, 77, 79, 82, 86, 94, 97, 98, 100, 103, 104, 105, 108, 122, 130, 133, 135, 136, 137, 139, 140, 141, 143, 146, 147, 148, 160, 161, 162, 163, 164, 166, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 194, 198, 199, 200, 205, 206, 207], "itself": [0, 8, 19, 20, 21, 36, 38, 40, 49, 54, 56, 57, 58, 70, 74, 76, 80, 100, 103, 104, 105, 108, 122, 133, 136, 139, 174, 175, 182, 193, 200, 201, 204, 212], "iv": 41, "ivan": 79, "ivysaur": 171, "j": [5, 6, 8, 30, 31, 32, 49, 50, 51, 54, 62, 63, 70, 92, 93, 104, 122, 153, 154, 161, 182, 191, 204], "jab": 137, "jack": 163, "jaguar": 172, "jai": 182, "jaltma": 143, "jam": [54, 136], "jan": [62, 63, 89, 174, 189], "jane": [104, 163], "januari": [41, 51, 61, 62, 63, 66, 67, 121, 133, 135, 137, 139], "japan": 172, "japanesecar": 172, "jason": 95, "java": [24, 49, 50, 54, 55, 57, 91, 103, 108, 141], "javascrip": 70, "javascript": [41, 54, 59, 70, 73, 100, 103, 121, 122], "jeep": 141, "jellic": 171, "jenner": 49, "jeremi": [175, 180], "jerryjliu": 121, "jessica": 133, "jet": [192, 195], "jet_r": 195, "jetbrain": 190, "jft": 182, "jigglypuff": 171, "jill": 163, "jirachi": 171, "jit": [177, 178], "jitter": [198, 203], "jlufe": 57, "jo": [9, 183], "job": [0, 1, 41, 54, 100, 121, 122, 133, 136, 144, 146, 147, 174, 192, 193, 197, 200, 204], "job_descript": [140, 141], "job_id": [140, 141], "job_index": [140, 141], "joe": [141, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 189], "joei": 121, "john": [30, 56, 79, 133, 139, 150, 189, 203], "joi": 137, "join": [0, 32, 54, 70, 96, 121, 122, 135, 138, 143, 146, 147, 148, 181, 182, 183, 200], "joined_df": 160, "joint": [193, 202, 208], "jointgrid": [194, 196], "jointplot": [194, 195], "joke": [121, 122, 133], "jokingli": 133, "jolteon": 171, "joltik": 171, "jose": 163, "journal": 193, "journei": [122, 133, 181, 193, 205, 213, 214], "jpeg": [178, 179, 180, 181, 182, 183, 185], "jpg": [178, 180, 181, 183], "jpn": 122, "jr": [150, 171], "json": [26, 82, 121, 122, 131, 138, 140, 141, 142, 143, 160], "json_exampl": 70, "json_str": [138, 160], "jude": 41, "judg": 122, "judgment": 121, "judson": 121, "juic": 93, "juicebox": 144, "jul": 89, "juli": [133, 136, 182, 183], "julian": 133, "jumbl": [176, 193], "jump": [29, 51, 54, 136, 140, 141, 143, 146, 182, 193, 199, 201, 205], "jumpluff": 171, "jun": [62, 64, 89], "jun21_00": 181, "june": [51, 61, 62, 63, 64, 67, 133, 181, 191], "junior": 133, "jupyt": [0, 7, 10, 22, 24, 27, 96, 110, 111, 113, 121, 137, 178, 179, 181, 184, 185, 190, 192, 209, 210, 212, 213, 214], "jupytext": [7, 111, 210], "just": [0, 6, 10, 17, 18, 19, 20, 36, 37, 39, 51, 54, 81, 85, 86, 94, 96, 108, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 160, 162, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "justcount": 104, "justifi": [54, 96], "justin": [133, 144], "juventu": 150, "jvm": 100, "jynx": 171, "k": [3, 30, 31, 34, 49, 50, 54, 83, 121, 133, 135, 136, 145, 146, 150, 151, 177, 178, 180, 181, 182, 183, 189, 191, 192, 197, 198], "k_depth": 203, "k_mean": 11, "kabuto": 171, "kabutop": 171, "kadabra": 171, "kaggl": [0, 10, 202], "kakuna": 171, "kamradt": 131, "kan": 133, "kanban": 144, "kangaskhan": 171, "kangaskhanmega": 171, "kappa": 83, "kapur": 6, "karen": 203, "karpathi": 174, "karrablast": 171, "kate": 56, "kb": [82, 177], "kde": [191, 194, 196, 200, 204], "kdeplot": [192, 194, 195, 204, 205], "kecleon": 171, "keen": [39, 202], "keenli": 133, "keep": [0, 5, 6, 27, 29, 37, 41, 50, 79, 85, 104, 113, 121, 133, 135, 136, 137, 140, 141, 142, 143, 145, 161, 166, 174, 176, 177, 178, 180, 181, 182, 183, 189, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205], "keepdim": 158, "kei": [42, 44, 49, 55, 56, 58, 72, 73, 93, 94, 97, 121, 122, 133, 135, 136, 137, 139, 140, 141, 143, 146, 147, 148, 160, 162, 167, 169, 172, 175, 176, 178, 179, 181, 182, 183, 184, 185, 195, 204], "keldeoordinari": 171, "keldeoresolut": 171, "kenel": 196, "kenneth": [189, 192], "kenya": 143, "kept": [85, 133, 135, 175, 177, 182, 192], "kera": [183, 212], "kernel": [7, 26, 111, 177, 182, 190, 192, 195, 196, 200, 203, 210], "kernel_density_estim": 196, "kernel_list": 196, "kernel_s": [177, 178, 179, 182, 184, 185], "kevin": [122, 133], "keyboard": 24, "keyboardinterrupt": [50, 68, 72, 73, 131, 133], "keyerror": [57, 58, 163, 164, 167, 169], "keystrok": 133, "keyword": [24, 38, 39, 42, 45, 47, 49, 50, 51, 54, 55, 56, 57, 58, 59, 73, 76, 77, 81, 82, 86, 88, 96, 98, 102, 103, 104, 108, 136, 140, 141, 150, 192, 194, 203, 205], "keyword_ord": 54, "kg": 53, "kgmid": 121, "ki": 143, "kick": [0, 133, 135], "kickstart": 214, "kid": [133, 136, 137, 191], "kidnei": 133, "kilcher": 182, "kill": 205, "killer": 136, "kind": [8, 36, 37, 73, 76, 79, 91, 110, 121, 122, 133, 136, 144, 148, 150, 160, 167, 168, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "kindl": 133, "kindli": 205, "king": 133, "kingdra": 171, "kingler": 171, "kingma": 182, "kirlia": 171, "kit": [122, 133, 183], "kivi": 26, "kiwi": [49, 122], "klang": 171, "klefki": 171, "klink": 171, "klinklang": 171, "km": [105, 122], "kmean": [11, 135], "knew": [121, 122, 133, 142, 178], "know": [0, 11, 21, 25, 37, 38, 39, 40, 49, 50, 51, 53, 73, 76, 79, 80, 82, 92, 94, 100, 105, 106, 108, 121, 122, 133, 135, 136, 137, 139, 140, 141, 143, 144, 146, 148, 153, 155, 157, 163, 164, 167, 169, 174, 175, 176, 178, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "knowledg": [0, 8, 74, 122, 133, 135, 139, 141, 178, 180, 203, 204], "known": [2, 9, 11, 12, 14, 26, 30, 31, 38, 49, 50, 53, 56, 57, 77, 81, 92, 95, 100, 103, 104, 106, 133, 136, 143, 156, 174, 175, 176, 177, 178, 179, 182, 183, 189, 193, 195, 197, 198, 199, 201, 203, 204, 205], "knoxvil": 189, "koehrsen": 176, "kof": 171, "kolombia": 122, "kolombiya": 122, "kolumbi": 122, "kolumbia": 122, "kolumbiai": 122, "kolumbian": 122, "kolumbien": 122, "kolumbii": 122, "kolumbija": 122, "kolumbijsk\u00e1": 122, "kool": 54, "kor": [122, 125, 140, 149], "korea": 150, "krabbi": 171, "kricketot": 171, "kricketun": 171, "kristian": 183, "krokorok": 171, "krookodil": 171, "kubernet": 141, "kw": [133, 198, 204, 205], "kwarg": [39, 43, 73, 108, 131, 133, 167, 177, 178, 195, 198, 204, 205], "kwiatkowski": 175, "kyogr": 171, "kyogreprim": 171, "kyurem": 171, "kyuremblack": 171, "kyuremwhit": 171, "k\u00f6zt\u00e1rsas\u00e1g": 122, "l": [8, 12, 29, 37, 41, 49, 50, 51, 54, 55, 56, 57, 58, 73, 81, 95, 133, 150, 175, 182, 183, 201], "l1": 176, "l1loss": [175, 176], "l2": 176, "la": 146, "la_": [27, 113], "lab": [133, 144, 147], "label": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 103, 112, 122, 150, 151, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 180, 182, 183, 184, 185, 193, 200, 201, 203, 204, 205, 207, 209], "label_batch": [178, 182, 184, 185], "label_custom": 178, "label_dist": 196, "label_map": [18, 20], "label_out": 182, "label_singl": [178, 184, 185], "label_smooth": 183, "labelbottom": [17, 18, 19, 20], "labelleft": [17, 18, 19, 20], "labels": 183, "labels_": 135, "labl": [160, 176], "labor": 0, "labour": 194, "lack": [1, 133, 148, 180], "laden": 133, "laet": [18, 20], "lai": 133, "lair": 133, "lairon": 171, "lake": 133, "lam": 197, "lambd": 83, "lambda": [29, 32, 37, 39, 90, 133, 143, 147, 160, 200], "lame": 133, "lampent": 171, "lampi\u00e3o": 32, "lanc": 122, "land": [120, 133], "landladi": 133, "landlock": 122, "landmark": 139, "landorusincarn": 171, "landorustherian": 171, "landscap": [133, 147], "lane": 177, "langchain": [130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 212, 213], "langchainai": 132, "langchaintest": 137, "langsmithhub": 121, "languag": [0, 21, 24, 26, 40, 41, 49, 50, 51, 54, 55, 57, 59, 70, 72, 90, 91, 92, 97, 103, 104, 108, 110, 122, 130, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 147, 174, 177, 180, 182, 204, 212], "lanturn": 171, "laod": 207, "lapra": 171, "larg": [1, 26, 29, 30, 31, 32, 33, 34, 37, 55, 71, 72, 74, 82, 87, 97, 100, 133, 134, 135, 136, 147, 150, 151, 154, 156, 160, 163, 170, 172, 174, 175, 177, 178, 180, 181, 182, 183, 190, 191, 198, 199, 203], "larger": [26, 38, 76, 85, 95, 100, 132, 133, 136, 156, 174, 175, 177, 178, 179, 180, 181, 182, 183, 203], "larger_chunk_relevant_doc": 136, "largest": [58, 82, 84, 122, 146, 174, 182, 183], "lark": 136, "larvesta": 171, "larvitar": 171, "last": [8, 21, 26, 36, 37, 38, 39, 40, 42, 49, 50, 51, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 82, 86, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 108, 121, 131, 133, 136, 137, 143, 147, 148, 155, 156, 157, 160, 167, 169, 170, 174, 177, 178, 181, 182, 183, 190, 194, 195, 198, 200, 201, 203, 205], "last_index": [54, 164], "last_lett": 54, "last_nam": [39, 49, 54, 76, 92], "last_nm": 79, "lastli": [70, 199, 201, 205], "lastnam": [42, 76, 79, 92, 96, 103], "late": [133, 147, 189, 191], "latenc": [2, 9, 10, 146, 177, 183], "latency_from": 9, "latency_grid": 9, "latency_rang": 9, "latency_to": 9, "latent": [182, 202], "later": [0, 37, 40, 51, 74, 86, 91, 92, 96, 97, 104, 121, 122, 133, 136, 137, 143, 146, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 193, 195, 197, 198, 199, 202, 205], "latest": [26, 121, 122, 131, 135, 136, 139, 142, 144, 174, 178, 180, 181, 182, 183, 191, 203, 213, 214], "latex": 182, "latia": 171, "latiasmega": 171, "latin": 133, "latio": 171, "latiosmega": 171, "latitud": 203, "latlng": 122, "latter": [105, 133, 174, 181], "lattic": 204, "latvia": 194, "lauder": 143, "launch": [26, 133, 144, 146, 181, 183], "laureat": 0, "lavish": 133, "lavishli": 133, "law": [133, 135, 136], "layer": [1, 8, 103, 130, 136, 174, 175, 176, 177, 178, 179, 183, 184, 185], "layer_1": 176, "layer_2": 176, "layer_3": 176, "layer_norm": 182, "layer_numb": [19, 20], "layer_stack": 177, "layout": [12, 133, 179, 183, 185, 205], "lazi": [37, 49], "lb": 150, "lc": [121, 122], "ldexp": [82, 84], "ldot": [54, 182], "lead": [54, 72, 82, 121, 122, 133, 135, 146, 176, 177, 180, 181, 182], "leader": 122, "leadership": 148, "leaf": 133, "leafeon": 171, "leap": 202, "learn": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 36, 37, 38, 40, 41, 42, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 96, 98, 103, 104, 105, 106, 120, 122, 133, 136, 139, 143, 144, 146, 147, 148, 151, 153, 160, 162, 163, 165, 167, 168, 169, 170, 172, 176, 177, 178, 179, 184, 185, 187, 188, 189, 193, 194, 195, 199, 201, 202, 203, 204, 205, 206, 213], "learnabl": [181, 182], "learnable_embed": 182, "learner": [0, 140, 141, 174, 181], "learning_r": [12, 13, 14, 179, 185], "learnpytorch": 187, "learnt": [0, 19, 20, 197, 198, 199, 203, 205], "least": [8, 19, 20, 26, 37, 41, 55, 57, 68, 98, 104, 108, 133, 135, 137, 143, 156, 176, 177, 178, 180, 182, 183, 191, 194, 195, 197, 198, 199, 201, 203], "leather": 133, "leav": [0, 50, 58, 122, 133, 136, 147, 175, 176, 177, 178, 180, 181, 183, 195, 197, 198, 200, 201, 203, 205], "leavanni": 171, "lectur": [0, 54, 144, 177, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "lecun": 182, "led": [121, 136, 143, 146], "ledft": 191, "ledian": 171, "ledyba": 171, "lee": [133, 150, 189], "left": [17, 18, 19, 20, 29, 30, 32, 34, 36, 41, 49, 54, 62, 63, 65, 85, 96, 97, 105, 106, 133, 136, 150, 151, 155, 160, 176, 177, 178, 180, 181, 182, 183, 190, 191, 194, 198, 200, 201, 202], "leftov": [133, 177], "leg": 105, "legal": [122, 133, 138, 146, 148], "legandari": 171, "legend": [9, 11, 14, 15, 16, 17, 18, 27, 113, 150, 151, 175, 178, 183, 193, 195, 198, 200, 201, 202, 203, 204, 205], "legend_": 198, "legend_el": 183, "legend_out": [193, 202, 205], "legendari": 171, "legit": 133, "lego": [175, 182], "leisur": 143, "lembk": 189, "lemon": 73, "len": [15, 16, 17, 18, 19, 20, 30, 31, 32, 37, 39, 49, 50, 51, 54, 58, 59, 63, 92, 97, 121, 122, 131, 133, 135, 136, 137, 138, 140, 141, 144, 145, 146, 147, 148, 153, 164, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "lenght": 135, "length": [10, 11, 15, 21, 37, 41, 42, 49, 53, 54, 58, 83, 92, 94, 97, 103, 105, 121, 133, 135, 150, 153, 156, 160, 167, 169, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 191, 193, 194, 197, 201, 205], "length_1": 183, "length_2": 183, "lengthi": [37, 85, 200], "leq": 29, "lesli": 189, "less": [9, 12, 14, 37, 45, 46, 47, 50, 51, 59, 68, 74, 84, 97, 100, 106, 121, 132, 133, 136, 140, 141, 143, 146, 160, 174, 175, 176, 178, 180, 181, 182, 183, 193, 204], "lesser": [46, 160], "lesson": [133, 136, 146, 147, 160, 180, 181], "let": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 53, 54, 56, 58, 59, 61, 67, 68, 70, 72, 73, 76, 77, 78, 80, 81, 82, 86, 95, 96, 97, 98, 103, 104, 105, 106, 108, 111, 121, 122, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 154, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210], "letter": [30, 31, 41, 49, 50, 51, 54, 58, 59, 72, 82, 90, 92, 122, 133, 174], "lettervalu": [202, 208], "level": [6, 9, 15, 16, 17, 18, 26, 48, 53, 73, 76, 85, 120, 122, 125, 130, 133, 144, 146, 148, 150, 160, 161, 163, 164, 169, 177, 178, 181, 183, 185, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "level_0": 161, "level_index": 164, "levelsio": 143, "leverag": [142, 147, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 203], "lewi": 189, "lex": 180, "lf": 183, "lfloor": 97, "lg_doc": 133, "lg_loader": 133, "lgamma": [82, 84], "li": [28, 122, 133], "lib": [54, 63, 82, 121, 122, 131, 133, 135, 136, 137, 158, 164, 167, 168, 169, 174, 177, 178, 189, 192, 196, 198], "librari": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 54, 84, 87, 91, 121, 122, 134, 135, 141, 144, 146, 151, 153, 160, 161, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212], "licens": [26, 144, 160, 171, 172, 183], "lichen": 122, "lichtenstein": 133, "lickilicki": 171, "lickitung": 171, "lie": [108, 133], "liepard": 171, "life": [12, 14, 25, 77, 130, 133, 135, 136, 137, 139, 143, 146, 148, 182, 204], "lifecycl": 181, "lifelong": [140, 141], "lifestyl": 133, "light": [133, 143, 150, 181, 182, 183, 192], "light_medium": 150, "lightblu": 191, "lighter": 205, "lightest": 133, "lightli": 121, "lightn": 133, "like": [1, 2, 4, 5, 6, 7, 8, 15, 16, 17, 18, 21, 24, 26, 33, 34, 36, 37, 39, 40, 41, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 79, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 111, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 153, 156, 157, 160, 161, 162, 163, 164, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210], "likelihood": 196, "likewis": [168, 170], "lileep": 171, "lili": 141, "lillig": 171, "lillipup": 171, "lim_": [29, 30, 31, 32], "limb": 133, "lime": 73, "limit": [49, 53, 74, 77, 80, 94, 106, 122, 133, 135, 136, 143, 144, 147, 174, 178, 180, 181, 182, 183, 189, 191, 197, 200, 203, 204, 205, 207], "limitless": 193, "limousin": 203, "linalg": [33, 135, 153, 156, 158], "lindayacc": 143, "line": [5, 7, 12, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 38, 40, 41, 44, 50, 51, 54, 57, 58, 59, 70, 72, 73, 76, 77, 79, 81, 82, 90, 93, 94, 97, 100, 104, 105, 110, 111, 113, 121, 122, 131, 133, 143, 148, 156, 157, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 210], "line2d": [27, 113], "line_count": 70, "line_kw": [193, 194], "linear": [3, 6, 8, 9, 11, 17, 18, 19, 20, 25, 105, 153, 174, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 193, 194, 195, 197, 199, 202, 203, 205, 212], "linear1": 182, "linear2": 182, "linear_lay": [175, 182], "linear_layer_stack": 176, "linear_regress": [12, 13, 14], "linearli": [8, 19, 20, 193, 203], "linearregress": [12, 13, 14], "linearregressionmodel": 175, "linearregressionmodelv2": 175, "linearsegmentedcolormap": 192, "linecollect": 198, "linefe": 54, "lineplot": 203, "liner": 6, "linestyl": [150, 151, 201], "linetoolong": 131, "linewidth": [150, 151, 190, 191, 197, 198, 199, 200, 203, 204, 205, 206], "linez": 138, "linger": 133, "link": [21, 26, 100, 121, 122, 132, 133, 140, 141, 143, 144, 174, 178, 179, 180, 181, 182, 183, 192, 193, 194, 202, 203, 205], "linkedin": [147, 148], "linkedinindustri": 138, "linkedinlinkedin": 144, "linoon": 171, "linregress": 191, "linregressresult": 191, "linspac": [12, 13, 14, 15, 16, 27, 113, 153, 158, 190, 196, 203, 205], "linux": 70, "liquid": 134, "lisp": [133, 139], "list": [10, 11, 15, 24, 36, 37, 39, 41, 42, 53, 58, 60, 61, 70, 72, 81, 83, 84, 85, 86, 90, 91, 93, 95, 96, 97, 103, 104, 105, 106, 108, 121, 122, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 160, 164, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205], "list1": [49, 55, 76, 81, 82, 94, 145, 162], "list2": [55, 81, 145, 162], "list3": 55, "list_": 37, "list_1": 104, "list_enumer": 54, "list_nam": 55, "list_of_class_nam": 178, "list_of_cmap": 204, "list_of_list": [49, 59], "list_siz": 49, "listdir": 183, "listedcolormap": 201, "listen": [144, 146], "listliter": 91, "lit": 133, "liter": [24, 54, 62, 63, 72, 73, 79, 86, 91, 92, 95, 96, 97, 102, 143], "literatur": 143, "lithuania": 194, "litleo": 171, "littl": [9, 11, 17, 18, 19, 20, 98, 105, 121, 133, 134, 136, 137, 148, 155, 174, 176, 177, 181, 182, 183, 191, 193, 197, 198, 200, 201, 202, 204, 205], "litwick": 171, "live": [0, 39, 54, 70, 73, 103, 121, 122, 133, 136, 137, 141, 143, 148, 175, 181, 182, 183], "liverpool": 205, "livestream": 182, "livingston": 133, "ljust": [32, 54, 96], "ll": [22, 49, 51, 73, 76, 81, 85, 104, 110, 121, 122, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 206], "llama": 121, "llc": 133, "llm": [0, 122, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148, 212], "llm3": [135, 146], "llm4": [135, 146], "llm_chain": [122, 133], "llm_output": [121, 134], "llm_prefix": 131, "llmchain": [121, 122, 133, 134, 136, 144, 148], "llmchainextractor": 136, "llmresult": 134, "lm": [192, 203, 208], "lmax": 32, "lmk": 136, "lmplot": [194, 195], "ln_layer": 182, "lo": 121, "load": [70, 82, 86, 100, 121, 122, 135, 138, 139, 142, 143, 145, 146, 147, 148, 180, 182, 184, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208], "load_and_split": 122, "load_dataset": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "load_dotenv": [121, 122, 132, 134, 135, 136, 137, 140, 142, 143, 145, 146, 147], "load_ext": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 181], "load_imag": 178, "load_qa_chain": [133, 137], "load_state_dict": [175, 177, 181, 183], "load_summarize_chain": [121, 122, 133, 135, 144, 146, 147, 148], "load_tool": [121, 122, 130], "loaded_effnetb2_food101": 183, "loaded_model_0": 175, "loaded_model_1": 175, "loaded_model_1_pr": 175, "loaded_model_2": 177, "loaded_model_2_result": 177, "loaded_model_pr": 175, "loader": [122, 135, 136, 137, 139, 144, 145, 147, 178, 179, 181, 182, 184, 185], "loan": 133, "lobbi": 136, "loc": [150, 151, 157, 160, 171, 183, 198, 200, 201], "loc_var": 77, "local": [5, 6, 24, 26, 37, 38, 61, 63, 64, 65, 66, 67, 68, 72, 78, 81, 88, 98, 104, 105, 108, 121, 122, 133, 143, 146, 160, 174, 175, 177, 180, 195], "local_lang": 77, "local_tim": 67, "localtim": [65, 68], "locat": [1, 41, 54, 55, 70, 72, 82, 85, 92, 96, 97, 105, 121, 122, 137, 140, 141, 142, 144, 151, 171, 176, 178, 180, 181, 183, 184, 185, 198, 199, 200, 203], "location_chain": 121, "locator_param": 191, "lock": 133, "locket": 82, "locomot": 133, "log": [21, 82, 83, 84, 132, 133, 136, 141, 153, 157, 181], "log10": [53, 82, 84], "log1p": [82, 84], "log2": [82, 84], "log_dir": 181, "logarithm": [53, 82, 84], "logdir": 181, "logger": 133, "logic": [0, 21, 44, 46, 80, 106, 108, 121, 143, 160, 164, 167, 178, 183], "logical_and": 158, "logical_not": 158, "logist": [3, 138, 193, 194], "logistic_regress": [9, 11, 15, 16, 17, 18], "logisticregress": [15, 16, 17, 18], "logit": [177, 178, 180, 182, 183, 184, 185], "lognormvari": 83, "logo": [70, 71, 133], "logo1": 71, "logos22": 144, "logspac": [27, 113], "logx": 193, "lombr": 171, "london": [39, 61, 65, 70, 73, 103, 164], "lone": 133, "long": [0, 21, 39, 44, 50, 51, 53, 54, 59, 90, 91, 93, 98, 108, 121, 122, 133, 135, 136, 137, 141, 143, 146, 148, 157, 175, 177, 178, 180, 181, 182, 183, 184, 185, 191, 197, 198], "long_nam": 39, "longer": [12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 54, 82, 103, 133, 136, 146, 148, 175, 176, 177, 178, 180, 181, 182, 183, 196], "longest": 177, "longitud": 203, "longtensor": 176, "look": [0, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 38, 39, 40, 41, 44, 51, 53, 70, 72, 77, 80, 82, 85, 86, 90, 91, 95, 96, 103, 105, 106, 108, 122, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 171, 174, 175, 176, 177, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "looker": [140, 141], "lookuna": 54, "lookup": [130, 160, 177], "loom": 133, "loop": [5, 24, 42, 44, 52, 54, 55, 56, 57, 58, 68, 70, 73, 79, 91, 96, 122, 131, 135, 147, 156, 160, 174, 179, 181, 182, 183, 184, 185, 201], "loos": [8, 121, 143], "loosen": 136, "lopunni": 171, "lopunnymega": 171, "lose": [0, 70, 133, 136, 148, 175], "loss": [95, 135, 143, 179, 181, 184, 185, 205], "loss_fn": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "lossfunct": 178, "lost": [54, 133], "lot": [0, 5, 6, 24, 27, 37, 49, 50, 54, 80, 82, 85, 100, 113, 121, 122, 130, 133, 135, 136, 137, 138, 143, 147, 148, 155, 174, 175, 176, 177, 178, 180, 181, 182, 191, 193, 201, 203], "lotad": 171, "loud": 133, "loudr": 171, "love": [0, 26, 39, 41, 96, 121, 131, 133, 134, 135, 140, 141, 143, 144, 148, 174, 175, 183], "low": [12, 13, 14, 15, 16, 17, 18, 19, 20, 83, 121, 133, 140, 141, 146, 151, 154, 178, 194, 199, 202], "low_end": 141, "lower": [30, 31, 41, 54, 95, 130, 133, 151, 155, 156, 174, 175, 177, 178, 181, 182, 183, 191, 199, 200, 202, 203, 204], "lowercas": [41, 54, 82, 90, 92, 174], "lowess": [193, 195], "lowest": [82, 160, 174, 177, 178, 181, 199, 201], "lowland": [133, 139], "lp": 133, "lr": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "lsr": [191, 194], "lst": [38, 59, 73], "lst_one": 73, "lst_two": 73, "lstrip": 54, "lt": [140, 141], "lucario": 171, "lucariomega": 171, "lucia": 104, "lucidrain": 182, "luck": [133, 135], "lucki": 133, "luckili": [122, 182], "lucr": 1, "ludicolo": 171, "lugia": 171, "luke": [130, 200], "lumber": 133, "lumineon": 171, "lump": 199, "lunaton": 171, "lunch": [1, 133, 136, 143, 183, 193, 197, 198, 200, 205], "lure": 133, "lusti": 133, "lut": 207, "luvdisc": 171, "lux": 122, "luxembourg": [122, 194], "luxio": 171, "luxrai": 171, "luxuri": [121, 133], "lvplot": 203, "lw": [27, 113, 197, 198, 201, 203, 205], "ly": 133, "m": [0, 4, 5, 6, 9, 30, 31, 33, 41, 49, 51, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 82, 84, 89, 90, 92, 95, 96, 105, 121, 122, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 174, 175, 177, 178, 180, 181, 182, 183, 189, 192, 197, 199, 201, 205], "m1": [33, 174], "m2": [33, 174], "m3": 174, "m_": [30, 31, 33], "ma": [41, 121, 177], "maaan": 41, "mac": 174, "machamp": 171, "machin": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 105, 120, 133, 134, 144, 174, 175, 176, 177, 178, 179, 180, 185, 193, 201, 202, 204, 205, 213], "machine_learn": 201, "machinehack": 0, "machineri": 160, "machok": 171, "machop": 171, "maco": [71, 174], "macreadi": 1, "macro": 133, "macro_cas": 92, "mad": 132, "made": [0, 41, 72, 74, 98, 100, 104, 121, 122, 133, 134, 136, 142, 143, 146, 148, 175, 176, 177, 178, 179, 180, 181, 183, 203], "madrid": 150, "mae": [175, 176], "magazin": 133, "magbi": 171, "magcargo": 171, "magic": [39, 106, 122, 132, 133, 137, 139, 181, 182, 183, 185, 190], "magikarp": 171, "magma": [192, 193, 195], "magma_r": 195, "magmar": 171, "magmortar": 171, "magnemit": 171, "magnet": 203, "magneton": 171, "magnezon": 171, "magnific": 133, "magnitud": [5, 6, 34, 105, 106, 178, 193, 201], "mai": [2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 37, 41, 53, 54, 55, 56, 58, 61, 62, 68, 73, 74, 76, 78, 79, 85, 89, 95, 98, 100, 103, 104, 105, 108, 121, 122, 133, 135, 136, 137, 139, 140, 141, 143, 146, 147, 148, 155, 160, 161, 162, 164, 165, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "mail": [41, 131, 158], "mailbox": 82, "main": [30, 31, 33, 41, 53, 56, 77, 78, 82, 86, 92, 103, 104, 105, 108, 121, 133, 136, 144, 174, 175, 176, 177, 179, 184, 185, 186, 187, 197, 201, 203, 206, 214], "main1": 78, "main_tab_text": 121, "main_tag": 181, "mainfact": 122, "mainfram": 0, "mainli": [49, 121, 133, 182, 185], "maintain": [21, 87, 147, 193], "mainten": 212, "major": [9, 37, 96, 133, 176, 179, 182, 184, 185, 197, 198, 201, 202], "majorli": [160, 161, 193, 197, 198, 202, 203, 205], "make": [0, 1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 30, 31, 37, 38, 39, 40, 41, 42, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 70, 72, 73, 74, 76, 77, 78, 80, 82, 85, 87, 90, 91, 92, 95, 96, 98, 100, 103, 105, 106, 108, 113, 121, 122, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 156, 160, 161, 162, 164, 165, 167, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "make_blob": [176, 204], "make_circl": 176, "make_kd": 195, "make_multiplier_of": 38, "make_predict": 177, "make_pretti": 39, "make_sound": 108, "make_uppercas": 39, "makedir": 185, "maker": 122, "mako": [195, 203, 207], "mako_r": 195, "makuhita": 171, "malamar": 171, "male": [70, 103, 171, 189, 193, 196, 198, 199, 200, 201, 205], "male_dinn": 200, "male_lunch": 200, "malign": [6, 15, 16, 17, 18], "maltreat": 133, "mammal": 105, "mammalnam": 105, "mamoswin": 171, "man": [40, 41, 121, 122, 133, 143, 199, 201], "manadatori": 193, "manag": [41, 76, 82, 85, 122, 133, 134, 140, 141, 144, 175, 177, 178, 179, 180, 181, 182, 184, 185, 203], "manaphi": 171, "manchest": [103, 150], "mandatori": [56, 61, 76, 79, 91, 104, 108, 193, 197, 198, 205], "mandibuzz": 171, "manectr": 171, "manectricmega": 171, "mango": [49, 55, 73, 93, 96, 162, 201], "manh": 32, "manhattan": 198, "manhattan_dist": 32, "mani": [0, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 31, 41, 49, 50, 51, 54, 58, 70, 71, 73, 74, 82, 86, 97, 103, 104, 108, 110, 111, 121, 122, 133, 135, 136, 137, 141, 146, 147, 148, 150, 156, 157, 160, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 198, 203, 204, 206, 210], "manifold": 135, "manipul": [40, 54, 61, 82, 133, 136, 156, 160, 170, 177, 178, 182, 205], "mankei": 171, "mann": 143, "manner": [39, 44, 49, 50, 105, 122, 135, 197, 203], "manner_of_death": 189, "mantin": 171, "mantissa": 84, "mantyk": 171, "manual": [1, 5, 6, 8, 36, 73, 74, 135, 137, 157, 175, 182, 183], "manual_se": [174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185], "manual_transform": [180, 181, 182], "manufactur": [104, 138, 177], "map": [1, 8, 18, 20, 21, 28, 59, 91, 98, 121, 122, 138, 144, 146, 147, 148, 160, 167, 175, 176, 178, 182, 192, 194, 195, 198, 200, 204, 205, 208], "map_chain": 135, "map_datafram": 205, "map_diag": [195, 204], "map_loc": 183, "map_low": [195, 204], "map_offdiag": 204, "map_prompt": [135, 144, 146, 147, 148], "map_prompt_templ": [135, 144, 147], "map_reduc": [121, 122, 133, 135, 144, 146, 147, 148], "map_rerank": 133, "map_upp": [195, 204], "mapper": 167, "mappingmethod": 91, "mapreduc": 147, "mapreducedocumentschain": [121, 133, 144, 148], "maprerankdocumentschain": 133, "mapsto": 32, "maptplotlib": 205, "mar": [89, 131], "maractu": 171, "marathon": 133, "marc": 121, "march": [41, 51, 133, 177], "marco": 133, "mareep": 171, "margin": [12, 133, 178, 194, 197], "margin_titl": [202, 205], "maria": 133, "maril": 171, "marin": [134, 148], "mariya": 49, "mark": [44, 45, 49, 57, 76, 86, 89, 91, 96, 104, 121, 133, 150, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 196, 198, 201], "markdown": [26, 121, 122, 138, 140, 141, 147, 179, 182, 209], "markdownfil": [7, 111, 210], "markdownifi": [140, 141, 147], "markedli": [22, 110], "marker": [11, 12, 150, 151, 189, 193, 194, 195, 198, 199, 201, 203, 204, 205], "markeredgecolor": 150, "markerfacecolor": 151, "markers": 150, "market": [0, 1, 103, 122, 133, 135, 136, 144, 146, 147, 148], "marketplac": [140, 144, 146], "markov": 21, "marks_df": 160, "marks_dict": 160, "marksaroufim": 174, "markup": [110, 133], "maroon": 133, "marowak": 171, "marri": 92, "marshtomp": 171, "martin": 122, "martrix": 174, "martyr": 133, "marvel": 133, "mask": [164, 205], "masquerain": 171, "mass": [76, 92, 133, 160], "massachusett": 133, "massiv": [160, 163], "master": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 146, 213, 214], "masterstudentclass": 104, "mat": 155, "mat1": [174, 177, 178], "mat2": [174, 178], "match": [63, 79, 122, 125, 131, 133, 136, 138, 141, 144, 149, 164, 167, 169, 174, 175, 176, 178, 180, 181, 182, 183, 194, 196, 199, 200, 205], "match_replac": 41, "match_scor": 138, "matching_tone_sampl": 143, "materi": [8, 175, 179, 180, 182, 186], "matern": 143, "math": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 27, 53, 57, 72, 88, 96, 113, 121, 130, 133, 182], "mathbb": [33, 34, 182], "mathbf": [176, 182], "mathemat": [0, 21, 26, 30, 31, 34, 49, 58, 59, 82, 97, 106, 139, 160, 176, 182, 191, 194, 199, 201, 203, 212, 213], "mathemet": 120, "mathew": 150, "mathpix": 182, "matlab": [49, 70, 92, 100, 103, 155, 156], "matmul": [156, 174], "matplotlib": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 29, 32, 113, 135, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213], "matric": [28, 35, 156], "matrix": [8, 9, 17, 18, 19, 20, 28, 30, 31, 59, 153, 154, 155, 157, 160, 176, 181, 204, 205, 206, 207], "matrixmultipl": 174, "matruc": 156, "matter": [39, 51, 73, 76, 79, 133, 136, 137, 143, 174, 178, 181, 197], "matthew": 189, "mattress": 133, "mawil": 171, "mawilemega": 171, "max": [5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 37, 58, 105, 153, 156, 157, 158, 160, 172, 177, 178, 180, 183, 189, 194, 196, 197, 205], "max_inst": 108, "max_iter": [11, 15, 16, 17, 18, 19, 20], "max_pool_lay": 177, "max_pool_tensor": 177, "max_row": 160, "max_siz": [178, 181, 182, 184, 185], "max_spe": 105, "max_token": [135, 138, 140, 141], "maxim": 1, "maximum": [11, 15, 16, 17, 18, 19, 20, 41, 50, 80, 103, 133, 136, 150, 153, 156, 157, 160, 174, 176, 177, 178, 196, 199, 200], "maxpoo2d": 177, "maxpool2d": [178, 179, 184, 185], "maxsiz": 82, "maxsplit": 41, "maxyear": 61, "maya": 144, "mayb": [49, 121, 133, 136, 140, 141, 146, 175, 203], "mazda": 172, "maze": 1, "mb": [9, 19, 20, 177, 178, 180, 181, 182, 183], "mba": [133, 136, 144], "mbconv": 180, "mbox": [27, 113], "mccarthi": [133, 139], "mckinnei": 133, "mco": 122, "md": [7, 22, 110, 111, 140, 141, 147, 210], "mdkir": 183, "mdoel": 181, "me": [0, 46, 54, 96, 122, 132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 179, 180, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205], "meadow": 133, "meal": [121, 133, 134, 143], "meal_chain": 121, "mealtim": 183, "mean": [2, 3, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 29, 33, 34, 38, 40, 41, 45, 46, 49, 50, 51, 54, 55, 56, 58, 61, 62, 63, 67, 72, 77, 79, 82, 90, 91, 93, 94, 95, 96, 97, 103, 104, 106, 108, 113, 121, 122, 133, 135, 136, 137, 138, 142, 143, 146, 153, 154, 157, 160, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 191, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 213, 214], "meaning": [162, 177, 205], "meant": [122, 133, 139, 180, 189], "meantim": [133, 177], "meantin": 176, "meanwhil": [121, 133, 136, 194, 198, 201, 203, 205], "measur": [1, 10, 11, 15, 21, 35, 121, 133, 175, 176, 177, 189, 191, 194, 197, 198, 199, 202, 203], "meat": [140, 141, 142], "mechan": [25, 86, 156, 182, 193, 203, 206], "media": [122, 138, 148], "median": [82, 150, 153, 157, 160, 198, 199, 200, 201, 203], "medianprop": 150, "medic": [122, 133, 135], "medicham": 171, "medichammega": 171, "medicin": 133, "medit": 121, "meditit": 171, "medium": [27, 37, 113, 121, 133, 134, 150, 174, 192], "medium_heavi": 150, "meet": [45, 121, 122, 131, 133, 146, 147, 148, 198, 199], "mega": 171, "megabyt": [181, 182, 183], "meganium": 171, "melbourn": 141, "mellon": 8, "meloettaaria": 171, "meloettapirouett": 171, "melt": [133, 197, 198, 199, 205], "melt_df": 199, "member": [40, 58, 103, 104, 133, 146, 194, 200], "membership": [122, 146], "memor": [30, 31, 193], "memori": [19, 20, 36, 49, 53, 54, 55, 70, 72, 80, 92, 94, 97, 98, 100, 103, 104, 122, 133, 153, 157, 160, 174, 175, 177, 178, 182, 190, 203], "memory_kei": 122, "memoryerror": [72, 73], "men": [133, 192], "mennen": 49, "mental": [143, 146], "mention": [8, 37, 54, 73, 86, 121, 132, 133, 136, 140, 141, 146, 148, 160, 181, 182, 190, 194, 198, 201, 202, 203, 205], "mentioned_parent_tweet_text": 132, "mentor": 143, "menu": [93, 144, 178, 192], "meow": 108, "meowsticfemal": 171, "meowsticmal": 171, "meowth": 171, "merced": 172, "mercenari": 133, "merchant": [122, 133], "merci": [121, 133], "mercuri": 133, "mere": [108, 133], "merg": [106, 160, 182, 183, 200], "merrili": 133, "meshgrid": [9, 158, 176], "mesprit": 171, "mess": [133, 171], "messag": [0, 5, 6, 38, 45, 46, 47, 48, 72, 73, 74, 76, 79, 86, 122, 131, 132, 138, 140, 142, 143, 144, 146, 148, 174, 183], "message_id": 131, "message_text": 131, "message_url": 131, "messageprompttempl": 134, "messi": [49, 50, 133, 147, 150], "met": [38, 46, 50, 122, 133, 166], "meta": [41, 174], "metadata": [121, 136, 139, 140, 141, 148, 178], "metadata_field_info": 136, "metagross": 171, "metagrossmega": 171, "metal": 122, "metang": 171, "metaphor": 133, "metapod": 171, "metaprogram": 39, "meteo": 130, "meter": 203, "meth": 108, "method": [26, 30, 31, 33, 36, 37, 38, 39, 40, 49, 50, 59, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 79, 82, 85, 86, 91, 96, 100, 104, 106, 108, 122, 131, 133, 135, 136, 140, 141, 146, 148, 156, 160, 161, 164, 167, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 193, 194, 199, 200, 201, 202, 203, 204, 205, 207], "method_4_prompt_templ": 143, "methodologi": 144, "meticul": [181, 214], "metric": [1, 141, 174, 175, 178, 179, 180, 181, 183, 184, 185, 207], "metropolitan": 122, "mew": 171, "mewtwo": 171, "mewtwomega": 171, "mfm": 146, "mfm_pod_alex": 146, "mfm_pod_rob": 146, "mfm_pod_steph": 146, "mfmpod": 146, "mib": 182, "michael": [144, 189], "microchip": [6, 16], "microcomput": [122, 133], "microphon": 121, "microprocessor": 143, "microsecond": [62, 63, 65], "microsoft": [133, 140, 141, 143, 144, 174, 183], "mid": [97, 133, 147], "middai": 133, "middl": [73, 133, 146, 155, 176, 178, 197, 199, 200, 201], "midnight": 133, "midwiv": 143, "mienfoo": 171, "mienshao": 171, "mig": 174, "might": [0, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 38, 50, 51, 53, 68, 73, 108, 133, 135, 136, 137, 140, 141, 146, 148, 154, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 191, 193, 197, 198, 199, 200, 201, 202, 204, 205], "mighti": 133, "mightyena": 171, "mike": 133, "milaan": [39, 49, 54, 57, 70, 72, 73, 76, 79, 82, 92, 95, 97, 103, 105, 172], "milan": [54, 70, 104], "mild": 133, "mile": [122, 133, 201], "mileag": [160, 161, 171, 195, 197], "mileagedf": 172, "mileston": [181, 182, 183], "mill": 133, "million": [133, 140, 146, 180, 181], "milot": 171, "miltank": 171, "mime": 171, "mimic": [177, 182], "mimick": 143, "min": [5, 12, 13, 14, 15, 16, 58, 153, 156, 157, 158, 160, 189, 194, 196, 197, 202, 205], "min_row": 160, "minc": 121, "minccino": 171, "mind": [29, 44, 59, 79, 133, 135, 136, 137, 140, 141, 143, 146, 177, 178, 179, 181, 182], "mine": [121, 133, 138, 140, 141, 174, 175, 182, 183], "mini": [133, 146, 148, 177, 179, 180, 181, 182, 200], "miniatur": 133, "minim": [4, 8, 81, 133, 136, 143, 179, 181, 184, 185, 189], "minimum": [5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 55, 133, 150, 153, 157, 160, 174, 176, 191, 199, 200], "mink": [32, 133], "minkowski_distance_a": 32, "minkowski_distance_b": 32, "minor": 136, "minu": [97, 199], "minun": 171, "minut": [19, 20, 62, 63, 65, 66, 67, 133, 144, 174, 175, 176, 177, 178, 180, 181, 183, 197, 198, 202], "minyear": 61, "miracul": 133, "mirror": [80, 141, 204], "misc": 86, "misdreavu": 171, "misinterpret": [133, 192], "mislead": 194, "mismagiu": 171, "mismatch": [108, 174, 176, 177], "miss": [12, 13, 14, 15, 16, 17, 18, 46, 72, 73, 79, 131, 133, 135, 136, 137, 139, 154, 161, 170, 183, 201, 203], "missing_label": 167, "mission": 96, "mistak": [0, 55, 72, 100, 121, 133, 136, 199], "mistakenli": 133, "mistress": 133, "mit": [133, 176, 177, 183, 200], "mitchel": 143, "mitsubishi": 172, "mix": [55, 56, 57, 58, 79, 134, 154, 155, 174, 181, 183, 197, 198, 199, 203], "mix_fruit": 49, "mixtur": [121, 134], "mkdir": [82, 175, 177, 178, 179, 180, 181, 183, 184, 185], "ml": [0, 3, 25, 144, 179, 181, 183, 201, 213, 214], "mlc": 198, "mlflow": 181, "mlop": [0, 181, 183], "mlp": 8, "mlp_block": 182, "mlp_block_output": 182, "mlp_dropout": 182, "mlp_layer": 182, "mlp_size": 182, "mlpblock": 182, "mlxtend": 177, "mm": [61, 63, 64, 174, 181], "mmr": 145, "mmr_relevant_doc": 145, "mmxxiii": 121, "mn": [33, 41], "mnist": [6, 8, 17, 18, 19, 20, 177], "moat": 147, "mobil": [143, 146, 174, 180, 183], "mock": 148, "mod": [82, 158], "modal": 200, "mode": [12, 26, 70, 73, 82, 83, 104, 137, 171, 175, 176, 177, 178, 180, 183, 186, 187, 198, 199], "model": [1, 5, 9, 100, 103, 104, 120, 122, 125, 130, 132, 133, 135, 136, 137, 139, 141, 143, 144, 147, 148, 149, 186, 187, 188, 191, 193, 195, 202, 203, 204, 212], "model_": 204, "model_0": [175, 176, 177, 178, 179, 184, 185], "model_0_df": 178, "model_0_result": [177, 178, 184, 185], "model_1": [175, 177, 178, 185], "model_1_df": 178, "model_1_result": [177, 178], "model_2": [176, 178, 185], "model_2_result": 177, "model_3": 176, "model_4": 176, "model_acc": 177, "model_build": [185, 187], "model_loss": 177, "model_nam": [121, 122, 132, 135, 140, 141, 143, 146, 147, 175, 177, 179, 181, 182, 183, 184, 185], "model_path": [175, 177], "model_s": 183, "model_save_path": [175, 177, 179, 184, 185], "model_select": 176, "model_size_legend": 183, "model_weight": 181, "moder": [133, 143], "modern": [143, 177, 180, 181, 182], "modf": [82, 84], "modif": [40, 103, 105, 157, 164, 167, 169, 170, 198, 201, 202, 203, 205], "modifi": [38, 39, 40, 49, 50, 54, 55, 59, 68, 70, 77, 78, 82, 94, 96, 97, 133, 146, 155, 160, 165, 171, 177, 181, 198, 200, 202, 203, 212], "modul": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 37, 38, 39, 40, 41, 42, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 77, 79, 80, 81, 88, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 106, 108, 131, 133, 139, 155, 156, 164, 167, 169, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 193, 198, 203, 205, 213, 214], "modular": [76, 147, 180, 181, 182, 183, 188], "module10": 214, "module2": 214, "module3": 214, "module4": 214, "module5": 214, "module6": 214, "module7": 214, "module8": 214, "module9": 214, "modulo": [72, 106], "modulu": [97, 106], "mohanda": [181, 183], "moistur": [151, 198], "moisturizersalesdata": 151, "moltr": 171, "moment": [98, 133, 143, 178, 198, 205], "momentum": [136, 176, 182], "mon": [51, 62, 63, 143, 181], "monaco": 122, "mondai": [62, 63, 67, 121, 122], "monei": [133, 136, 144, 146, 147, 197, 198], "monetari": 182, "monferno": 171, "monitor": [148, 183, 212], "monkei": 200, "monologu": 146, "monoton": 105, "monster": 133, "month": [51, 62, 63, 64, 65, 66, 67, 121, 122, 133, 135, 146, 147, 148, 182, 201, 203, 206], "month_numb": 151, "monthli": 183, "monthlist": 151, "montreal": 122, "mood": 143, "moon": [76, 133, 134], "moor": [133, 136], "morain": 133, "moral": [122, 191], "more": [0, 1, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 21, 22, 25, 26, 27, 30, 31, 33, 36, 37, 38, 40, 42, 44, 46, 49, 51, 53, 55, 56, 57, 58, 59, 61, 62, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 86, 90, 91, 92, 93, 98, 100, 103, 104, 105, 106, 108, 110, 111, 113, 121, 122, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 154, 155, 156, 157, 160, 161, 166, 169, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 213, 214], "moreland": 192, "moreov": [1, 70, 133], "mormon": 146, "morn": [76, 79, 96, 133], "morphism": 103, "morri": 133, "mortal": 143, "most": [0, 1, 21, 24, 26, 28, 30, 36, 37, 38, 39, 40, 41, 42, 50, 53, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 77, 78, 79, 80, 82, 91, 93, 94, 95, 96, 97, 100, 103, 104, 105, 106, 108, 110, 121, 122, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 146, 147, 155, 156, 160, 162, 164, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 198, 199, 200, 201, 202, 203, 205, 206], "mostli": [21, 50, 54, 133, 147, 181, 182, 183, 192, 205], "mother": 133, "mothim": 171, "motion": 133, "motiv": [41, 133, 136, 147], "motorcycl": 8, "motto": [122, 174, 175, 176, 177, 181, 182], "mountain": [133, 136], "mous": [55, 56], "move": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 45, 49, 51, 70, 98, 132, 133, 136, 139, 140, 141, 142, 143, 146, 147, 167, 176, 177, 178, 179, 182, 190, 191, 194, 197, 198, 199, 201, 203, 204, 205], "move_fil": 142, "movefiletool": 142, "movement": [1, 141], "movi": [130, 146, 204], "mozzarella": 121, "mp": 174, "mpimg": [17, 18, 19, 20], "mpl": 201, "mr": [133, 171], "mrdbourk": [178, 179, 180, 181, 182, 183, 184, 185], "mri": 203, "mro": 105, "mrr": 146, "msa_block": 182, "msa_block_output": 182, "msa_lay": 182, "msablock": 182, "msc": 26, "mse": 176, "mseloss": 176, "msg": [38, 39, 76, 79, 189, 196], "mt": 33, "mtransform": 198, "mu": [9, 83], "mu_param": 9, "much": [1, 5, 8, 12, 13, 14, 24, 26, 30, 31, 37, 40, 57, 82, 121, 122, 133, 134, 135, 136, 139, 140, 141, 146, 148, 157, 174, 175, 176, 177, 178, 179, 182, 183, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 213, 214], "mudkip": 171, "muir": 133, "muir_lake_tahoe_in_wint": 133, "muk": 171, "mul": [82, 174], "mulitpl": 174, "mult": [178, 180], "multi": [0, 93, 94, 136, 161, 162, 177, 178, 180, 181, 183, 200, 204, 205], "multi_queri": 136, "multiclass": [176, 177], "multideriv": 105, "multidimension": [153, 155, 160], "multihead": 182, "multihead_attn": 182, "multihead_self_attention_block": 182, "multiheadattent": 182, "multiheadselfattentionblock": 182, "multiindex": [160, 163, 164, 167, 170], "multilay": 8, "multilayer_perceptron": [19, 20], "multilayerperceptron": [19, 20], "multilevel": 201, "multilin": [41, 54, 81, 91, 93, 94], "multiline_str": [54, 93], "multimedia": 26, "multip": 28, "multipl": [0, 1, 5, 8, 13, 19, 20, 21, 26, 30, 31, 37, 39, 47, 49, 51, 54, 55, 58, 59, 70, 77, 79, 81, 90, 91, 93, 97, 100, 103, 106, 108, 121, 122, 133, 136, 148, 153, 154, 160, 161, 163, 165, 166, 170, 172, 175, 176, 177, 181, 182, 183, 191, 192, 193, 197, 198, 199, 200, 203, 204, 205], "multiple_vari": 59, "multipli": [12, 13, 14, 15, 16, 17, 18, 21, 33, 38, 49, 50, 56, 61, 76, 80, 86, 87, 96, 97, 153, 156, 174, 178], "multiqueryretriev": 136, "multitouch": 26, "multivari": [3, 5, 6, 9, 205], "multivariate_gaussian": 9, "multivariate_norm": [192, 193, 194, 204], "munch": 143, "munchlax": 171, "munger": 146, "munna": 171, "murdoch": 146, "murkrow": 171, "musharna": 171, "music": [85, 122, 136], "musk": 146, "must": [29, 33, 36, 38, 39, 48, 49, 53, 54, 55, 56, 57, 58, 70, 71, 73, 76, 77, 79, 80, 83, 85, 86, 90, 91, 92, 94, 95, 98, 100, 104, 105, 108, 122, 131, 133, 137, 141, 151, 155, 161, 165, 166, 174, 175, 176, 182, 183, 190, 191, 198, 205], "mustard": 134, "mut": 197, "mutabl": [49, 55, 56, 57, 58, 94, 160], "mutat": 155, "mute": 200, "mutlipl": [174, 183], "mv": [180, 181, 182, 183], "mx": 174, "my": [6, 21, 50, 53, 54, 70, 73, 77, 78, 86, 92, 94, 104, 108, 121, 122, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 174, 176, 177, 178, 180, 181, 183, 192, 197, 199, 200, 201, 203], "my_addit": 87, "my_ag": 46, "my_data": 71, "my_dict": 57, "my_dict1": 57, "my_dict2": 57, "my_dict3": 57, "my_document_create_tim": 121, "my_document_id": 121, "my_document_sourc": 121, "my_func": 77, "my_gen": 37, "my_it": 36, "my_list": [36, 37, 55, 81, 154, 160], "my_list1": [55, 154], "my_list2": [55, 154], "my_list3": 55, "my_list4": 55, "my_list5": 55, "my_matrix": 154, "my_modul": 82, "my_nam": 92, "my_noun": 121, "my_set": [49, 58], "my_str": [37, 54], "my_text": 121, "my_tupl": 56, "my_tuple1": 56, "my_tuple2": 56, "my_tuple3": 56, "my_tuple4": 56, "my_vaccin": 49, "mychesstutor": 146, "myclass": 90, "mygraph": 150, "mymethod": 105, "mynewclass": 104, "myself": [0, 133, 136, 139, 148], "myspac": 132, "myst": 209, "mysteri": 133, "mystifi": 133, "n": [4, 5, 6, 9, 11, 13, 21, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 42, 45, 46, 49, 50, 51, 54, 55, 56, 59, 70, 73, 74, 76, 79, 80, 81, 82, 86, 89, 91, 92, 93, 95, 96, 99, 103, 104, 105, 113, 121, 122, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 154, 157, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 189, 197, 199, 200, 201, 203, 204], "n0": 49, "n1": 49, "n10": 49, "n21": 49, "n28": 49, "n3": 49, "n36": 49, "n45": 49, "n6": 49, "n_": 33, "n_boot": [193, 201, 202, 203], "n_cluster": 135, "n_color": 192, "n_compon": 135, "n_featur": [176, 204], "n_list": 55, "n_sampl": [176, 204], "n_tupl": 56, "na": [136, 160, 164, 165, 170], "na_valu": 172, "nacho": 183, "nafter": [164, 165, 166, 169, 170], "nag": 133, "nail": 189, "naiv": [21, 108, 133, 181], "name": [12, 18, 20, 26, 37, 38, 39, 40, 41, 42, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 67, 68, 70, 71, 72, 73, 76, 77, 79, 81, 85, 86, 87, 90, 91, 93, 94, 95, 97, 99, 103, 104, 105, 106, 108, 121, 122, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 189, 192, 193, 194, 196, 197, 201, 203, 205, 214], "name_to_tool_map": 131, "named_tupl": 67, "nameerror": [38, 40, 54, 55, 56, 57, 73, 77, 93, 94, 104], "nameless": 81, "names_upper_cas": 39, "namespac": [24, 38, 40, 81, 82, 85, 91, 102, 104, 108, 153, 176], "nan": [82, 84, 154, 156, 158, 161, 166, 170, 171, 172, 189, 193, 199, 201], "nanci": 133, "nand": [136, 175], "nangalo": 143, "nangel": 136, "nanoth": 136, "nanswer": 139, "nanyon": 139, "nanywher": 136, "napoleon": 135, "napr": 89, "narendramodi": 143, "narrat": 133, "narrow": [133, 148, 182, 200], "nat": [160, 161, 163, 164, 165, 166, 167, 168, 169, 170], "natali": 121, "nation": [122, 133, 150, 177], "nativ": [97, 181, 189, 190], "nativenam": 122, "natu": 171, "natur": [2, 9, 26, 39, 50, 82, 84, 98, 121, 122, 130, 133, 135, 136, 140, 141, 142, 143, 144, 153, 175, 180, 182, 183, 203, 212], "naug": 89, "navan": 147, "navi": 133, "navig": [1, 182], "nayron": [19, 20], "nb": 179, "nbagg": 190, "nbe": 136, "nbecaus": [136, 139], "nbest": 136, "nbetween": 139, "nbin": 191, "nbook": 136, "nbraden": 131, "nbubbl": 136, "nbug": 136, "nbuild": 139, "nbusi": 136, "nbut": [136, 139], "nbyte": [131, 154], "ncalifornia": 134, "ncan": 136, "nceo": 136, "nchat": 131, "ncheaper": 136, "nchw": [177, 178], "ncode": 139, "ncol": [177, 182, 191, 200, 201], "ncolumn": 167, "ncompani": 136, "ncongratul": 74, "ncontain": 70, "ncontradict": 136, "nconv_layer_2": 177, "ndarrai": [153, 154, 157, 160, 161, 162, 174, 206], "ndata": [42, 139], "ndatafram": 170, "ndebug": 136, "ndec": 89, "ndenumer": [158, 191], "ndepart": 136, "ndestroi": 136, "ndframe": 160, "ndim": [32, 153, 154, 174], "ndindex": 158, "ndo": [54, 136], "ne": 150, "nearbi": 148, "nearest": [4, 11, 178, 183], "nearli": [54, 81, 97, 133, 153, 181], "neat": 91, "neatli": 193, "necessari": [26, 36, 48, 50, 86, 121, 122, 143, 148, 169, 175, 178, 179, 181, 182, 183, 184, 185, 186, 190, 195], "necessarili": [137, 160, 177, 182, 183, 189, 193, 198, 199, 205], "necessit": 1, "neck": 133, "need": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 37, 40, 41, 44, 46, 49, 50, 53, 54, 55, 56, 59, 61, 63, 64, 65, 67, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 87, 89, 92, 94, 96, 100, 104, 105, 106, 108, 111, 120, 121, 122, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 206, 210], "need_weight": 182, "needl": 133, "neg": [2, 5, 6, 16, 31, 45, 46, 47, 48, 54, 70, 84, 93, 96, 133, 158, 163, 176, 178, 194, 200], "negat": [41, 97], "negative_numb": 96, "neighbor": 133, "neighborhood": 133, "neither": [29, 48, 54, 77, 84, 133, 180, 200], "neliza": 148, "nenter": 74, "nenuemer": 49, "neq": [32, 33], "nervou": 133, "nescessarili": 156, "nest": [24, 30, 31, 39, 44, 46, 47, 52, 55, 56, 57, 77, 80, 98, 121, 141, 153, 154, 162, 198, 200, 201], "nestl": 133, "net": [0, 133, 148], "netflix": 179, "netherland": [12, 14], "netscap": 136, "netsuit": [140, 141], "network": [1, 3, 21, 73, 120, 133, 138, 146, 157, 174, 175, 178, 179, 180, 182, 183, 184, 185, 212], "networkerror": 73, "neural": [1, 3, 120, 157, 174, 175, 178, 180, 182, 183, 212], "neural_network": [19, 20, 176], "neuron": [19, 20, 176, 177], "never": [0, 36, 50, 51, 53, 73, 92, 97, 100, 121, 133, 136, 146, 160, 175, 182, 183, 190, 192, 197], "nevertheless": 133, "new": [0, 1, 2, 5, 6, 12, 13, 14, 17, 18, 19, 20, 25, 26, 39, 40, 41, 44, 50, 54, 56, 58, 59, 62, 63, 65, 66, 70, 74, 78, 81, 92, 96, 98, 103, 104, 105, 106, 108, 121, 122, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 150, 155, 157, 160, 161, 164, 165, 166, 167, 169, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205], "new_": 160, "new_ag": 167, "new_axi": 164, "new_col": 167, "new_col_nam": 160, "new_df": 171, "new_dict": 57, "new_file_nam": 71, "new_head": 170, "new_index": 167, "new_list": 81, "new_mark": 167, "new_nam": 167, "new_sig": 198, "new_str": 41, "new_valu": 160, "new_year": 65, "new_york": [61, 65], "newaxi": [32, 204], "newdir": 71, "newer": [121, 135, 136, 175, 177, 181, 182], "newli": [108, 170, 175], "newlin": [41, 54, 70, 86, 91, 93, 183], "newshap": 157, "newslett": [144, 183], "newspap": 133, "newton": [76, 121], "nexampl": 121, "nexpens": 136, "nexplicit": 136, "next": [8, 21, 36, 37, 45, 47, 49, 50, 51, 54, 70, 72, 73, 82, 83, 91, 100, 121, 122, 133, 135, 136, 137, 143, 144, 146, 147, 148, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "next_step_output": 131, "nexusgpt": 122, "neymar": [49, 50, 150], "nf": 160, "nfar": 139, "nfeb": 89, "nfirst": [136, 176], "nfor": [49, 136, 139], "nfounder": 136, "nfrom": 139, "ng": 41, "ngeometr": 136, "ngeometri": 139, "nglhx4b33_o": 147, "ngo": 136, "ngood": 54, "ngreg": 148, "nha": 139, "nhand": 136, "nhappen": 136, "nhave": 136, "nhe": 139, "nhead": 182, "nhow": [96, 121, 136], "nhwc": 177, "ni": [49, 136, 139], "nice": [121, 122, 132, 133, 135, 142, 143, 148, 174, 175, 176, 178, 180, 181, 182, 183, 190, 192, 197, 198, 203], "nicer": [54, 201], "nicest": 133, "nichol": 189, "nidok": 171, "nidoqueen": 171, "nidoran": 171, "nidorina": 171, "nidorino": 171, "nif": 136, "night": [79, 133, 140, 200], "nightclub": 146, "nightli": [180, 181, 182, 183], "nightmar": 0, "nikla": [5, 6], "nin": [54, 136], "nincada": 171, "nine": [41, 133], "ninetal": 171, "nineti": 54, "ninjask": 171, "ninvest": 136, "ninvestor": 136, "nipy_spectr": 195, "nipy_spectral_r": [195, 197], "nissan": 172, "nit": [136, 139], "nj": 33, "njam": 136, "njul": 89, "njun": 89, "njust": [136, 139], "nknow": 136, "nla": 131, "nlabel": 176, "nld": 122, "nlike": 139, "nlist": 168, "nloosen": 136, "nlp": [0, 180, 182], "nltk": 139, "nm": 33, "nmai": 89, "nman": 136, "nmar": 89, "nmarket": 136, "nmatter": 136, "nmax": 177, "nmccarthi": 139, "nmillion": 136, "nmore": 136, "nmulti": 91, "nn": [174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 200], "nnew": 174, "nnois": 136, "nnorm": 136, "nnotat": 139, "nnov": 89, "nnumber": 182, "no_grad": 175, "no_of_nonna_valu": 166, "no_of_sid": 105, "nob": 191, "nobel": 0, "nobl": 133, "noct": 89, "noctowl": 171, "node": [8, 19, 20, 141], "nof": [136, 139], "noften": 136, "nohtyp": 54, "noibat": 171, "nois": [133, 136, 137, 140, 141, 146, 147, 176, 193, 198], "noisi": 136, "noisier": 200, "noivern": 171, "nomin": [6, 15, 16, 17, 18], "non": [0, 3, 5, 6, 8, 11, 19, 20, 21, 33, 38, 42, 45, 50, 54, 70, 71, 79, 83, 104, 121, 131, 136, 160, 166, 178, 180, 182, 183, 189, 190, 193, 195, 197, 203], "non_full_backward_hook": [177, 178], "noncommitt": 143, "nondynamicallyquantizablelinear": 182, "none": [39, 40, 41, 45, 49, 50, 57, 67, 70, 73, 76, 79, 83, 86, 90, 91, 93, 104, 121, 131, 133, 134, 136, 141, 142, 157, 158, 160, 161, 164, 165, 166, 167, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "nonlinear": [5, 8, 13, 19, 20, 193], "nonloc": [24, 78, 88, 90, 98], "nonlov": 77, "nonmarinemamm": 105, "nonneg": [153, 154], "nonparametr": [193, 195], "nonprofit": [138, 148], "nonwingedmamm": 105, "nonzero": 158, "noob": [133, 135], "noodl": 134, "nook": 133, "noondai": 133, "noper": 139, "noqa": 133, "nor": [29, 48, 54, 73, 77, 84, 133, 136, 139, 200], "noraml": 182, "nordic_countri": 73, "nordinari": 136, "norigin": 139, "norm": [34, 40, 84, 135, 156, 182, 191, 196, 198], "norm1": 182, "norm2": 182, "norm_first": 182, "normal": [9, 13, 17, 18, 19, 20, 34, 38, 39, 41, 50, 51, 54, 59, 73, 74, 77, 81, 82, 83, 104, 122, 133, 136, 142, 154, 157, 163, 171, 179, 180, 181, 182, 183, 184, 191, 193, 194, 195, 196, 199, 200, 207], "normal_arrai": 157, "normalis": 206, "normalize_data": [13, 17, 18, 19, 20], "normalized_shap": 182, "normalvari": 83, "north": [133, 148, 201], "northeast": 122, "northern": 133, "norwai": [12, 14, 73], "norwegian": 133, "nose": 133, "nosepass": 171, "notabl": [140, 141], "notaion": 155, "notat": [5, 6, 21, 58, 96, 139, 150, 155, 175, 200], "notation3": 96, "notch": [175, 177, 178, 181, 183, 199], "note": [0, 5, 6, 30, 31, 36, 37, 38, 40, 44, 50, 51, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 76, 77, 79, 82, 86, 90, 91, 92, 93, 96, 97, 98, 103, 104, 105, 110, 121, 122, 133, 135, 136, 137, 140, 141, 142, 143, 146, 148, 151, 154, 155, 156, 160, 161, 163, 164, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 213, 214], "notebook": [0, 10, 12, 21, 22, 28, 96, 110, 121, 130, 132, 136, 137, 142, 174, 176, 177, 178, 180, 181, 182, 183, 186, 187, 190, 192, 193, 194, 195, 202, 203, 205, 209, 212, 213, 214], "notecard": 133, "notepad": 89, "noth": [41, 45, 49, 50, 51, 58, 76, 103, 122, 133, 135, 143, 146, 156, 178, 183, 198, 199, 200, 206], "notic": [29, 30, 31, 39, 51, 53, 57, 59, 61, 72, 94, 104, 105, 121, 122, 133, 135, 136, 139, 141, 143, 146, 147, 160, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 193, 195, 197, 198, 199, 200, 201, 203, 204], "notif": [8, 26], "notimplementederror": 72, "notion": [53, 106, 122, 147], "notnul": 160, "notwithstand": 133, "noun": [121, 133], "nour": 139, "noutput": [46, 121, 174], "nov": [89, 175], "novel": 133, "novemb": [133, 136], "now": [6, 8, 9, 11, 12, 13, 14, 15, 16, 21, 24, 29, 37, 38, 39, 40, 41, 44, 45, 46, 49, 50, 59, 61, 62, 64, 65, 66, 70, 72, 73, 76, 77, 78, 79, 81, 82, 85, 86, 91, 93, 95, 96, 98, 103, 104, 105, 106, 108, 121, 122, 131, 132, 133, 135, 136, 137, 140, 142, 143, 144, 146, 147, 148, 156, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "nowher": 160, "np": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 29, 30, 31, 32, 33, 34, 113, 135, 150, 153, 154, 155, 156, 157, 160, 166, 170, 172, 174, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "npack": 136, "npaid": 136, "npatch": 182, "npen": 136, "npeopl": 136, "nperfect": 91, "nprior": 133, "nqualiti": 139, "nquestion": 139, "nquicker": 136, "nread": [121, 136], "nresult": 168, "nrow": [177, 182, 191, 200], "nsaturdai": 121, "nsell": 136, "nsep": 89, "nshape": 178, "nsheet": 70, "nshould": 136, "nsilicon": 136, "nsimplest": 139, "nsize": 178, "nso": 136, "nsoftwar": 136, "nsome": 136, "nsourc": 136, "nspur": 136, "nsqueez": 136, "nstartup": 136, "nsteadili": 139, "nstick": 136, "nstill": 136, "nt": 29, "ntake": 136, "ntell": 136, "ntest": [177, 178, 184, 185], "nthat": 136, "nthe": [136, 139], "nthei": 136, "nthem": [136, 139], "ntheoret": 139, "nthese": 139, "nthi": [70, 74, 131], "nthink": 136, "ntnkvx7sbx": 143, "nto": [131, 136, 139], "ntoo": 136, "ntorchvis": 177, "ntotal": 182, "ntrain": 177, "ntruth": 121, "ntwo": 139, "nuanc": 121, "nuclear": 133, "nude": 133, "null": [29, 49, 50, 58, 131, 140, 141, 142, 160, 166, 193, 205], "num": [32, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 54, 73, 76, 79, 80, 81, 91, 92, 96, 104, 157, 160, 161, 172, 181, 183, 196], "num1": [45, 46, 47, 48, 76, 79, 87, 92, 96, 104], "num2": [45, 46, 47, 48, 76, 79, 87, 92, 96, 104], "num3": 96, "num4": 96, "num_cel": [17, 18, 19, 20], "num_class": [176, 177, 182, 183], "num_clust": [11, 135], "num_doc": 135, "num_docu": 135, "num_epoch": [178, 179, 181, 184, 185], "num_exampl": [9, 11, 15, 16], "num_featur": 176, "num_flo": 95, "num_float": 95, "num_head": 182, "num_images_to_plot": [180, 181], "num_int": 95, "num_iter": [12, 13, 14], "num_lay": 182, "num_list": [59, 81], "num_magnitude_bin": [178, 183], "num_new": 95, "num_on": 76, "num_param": [180, 181, 182, 183], "num_patch": 182, "num_perceptron": [19, 20], "num_point": [193, 195], "num_str": 95, "num_sum": 95, "num_token": [122, 135], "num_tokens_first_doc": 135, "num_top_class": 183, "num_total_charact": 122, "num_training_exampl": [17, 18, 19, 20], "num_transformer_lay": 182, "num_two": 76, "num_word": 133, "num_work": [178, 179, 183, 184, 185], "numb": 12, "number": [1, 2, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 86, 87, 91, 92, 95, 97, 99, 104, 105, 106, 108, 121, 122, 133, 135, 136, 141, 142, 143, 145, 146, 147, 148, 150, 151, 153, 160, 161, 162, 163, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "number33": 96, "number_arithmet": 48, "number_list": 59, "number_of_paramet": 183, "number_of_patch": 182, "number_of_token": 182, "numbermethod": 91, "numbers_int": 39, "numbers_squar": 39, "numbers_str": 39, "numbers_to_displai": [17, 18, 19, 20], "numel": [171, 183], "numer": [0, 18, 20, 26, 49, 50, 53, 54, 74, 82, 92, 96, 106, 121, 142, 153, 154, 160, 174, 176, 178, 182, 192, 194, 196, 197, 199, 200, 201, 203, 206], "numpi": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 29, 30, 31, 32, 33, 34, 86, 113, 135, 150, 151, 155, 156, 160, 166, 170, 175, 176, 177, 178, 182, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213], "numpy_array_from_list": 154, "numpy_tensor": 174, "nundergrad": 136, "nunderstand": 139, "nunlik": 139, "nurs": 133, "nut": 146, "nutjob": 133, "nutrifi": [178, 180, 183], "nuzleaf": 171, "nvar": 191, "nvidia": [174, 180], "nwa": 136, "nwant": [121, 136], "nwe": [131, 136, 139], "nweekend": 136, "nwhat": [131, 139], "nwhen": 136, "nwhere": 136, "nwhich": 139, "nwhole": 139, "nwill": [121, 139], "nworst": 136, "nx": 139, "ny": [61, 65, 122], "nyc": 203, "nyc_taxi": 203, "nyear": [67, 136], "nyou": 136, "nzip": 49, "o": [24, 26, 37, 41, 49, 51, 54, 55, 56, 57, 58, 59, 71, 75, 93, 94, 95, 96, 102, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 170, 178, 179, 180, 181, 183, 184, 185, 189, 190, 193, 201, 204], "oauthhandl": [143, 147], "ob": 104, "obj": [26, 36, 40, 59, 103, 104, 108, 164, 175, 177, 179, 184, 185], "obj1": 105, "obj2": 105, "object": [1, 4, 26, 30, 31, 36, 37, 38, 39, 40, 49, 53, 54, 55, 56, 57, 58, 62, 64, 66, 67, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 86, 91, 92, 94, 95, 96, 97, 98, 105, 106, 108, 121, 122, 130, 131, 133, 134, 136, 138, 140, 141, 142, 143, 145, 146, 147, 153, 154, 156, 157, 161, 162, 167, 168, 169, 171, 175, 177, 180, 182, 192, 193, 194, 195, 197, 198, 201, 204, 205], "object1": 105, "object_nam": 104, "obscur": 133, "observ": [1, 4, 9, 11, 39, 40, 45, 51, 103, 121, 122, 130, 131, 133, 147, 160, 170, 182, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 205, 206], "obsolet": 133, "obtain": [54, 82, 133, 181, 182, 194, 201, 205], "obviou": [40, 54, 97, 121, 133, 136, 139, 183], "obvious": [133, 198], "occas": 157, "occasion": [133, 143], "occass": [193, 197], "occup": 133, "occupi": 133, "occur": [21, 41, 50, 51, 54, 70, 72, 73, 74, 78, 87, 95, 133, 136, 143, 157, 174, 177, 183, 199], "occurr": [41, 54, 58, 104, 165, 201], "ocean": [195, 204], "ocean_r": 195, "ocr": 183, "oct": 89, "octadecim": 53, "octal": [53, 54, 93, 96], "octilleri": 171, "octob": 133, "od": 103, "odd": [29, 36, 44, 49, 50, 55, 57, 59, 73, 76, 79, 108, 157], "odd_numb": [39, 59], "odd_squar": 57, "oddish": 171, "ofcours": [201, 203, 205], "ofen": 183, "off": [7, 22, 54, 70, 110, 111, 121, 122, 133, 135, 136, 140, 141, 143, 146, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 190, 201, 203, 210], "offer": [1, 26, 53, 83, 97, 122, 133, 141, 142, 144, 148, 155, 158, 174, 176, 177, 179, 183, 189, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205], "offic": [133, 136, 146, 189], "office_print": 142, "offici": [24, 86, 121, 122, 133, 134, 182, 183, 193, 197, 199, 202, 203], "offlin": [12, 183, 200], "offset": [29, 62, 63, 70, 174, 190, 201], "offspr": 197, "often": [2, 6, 9, 50, 54, 96, 103, 108, 121, 133, 136, 140, 141, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 192, 194, 195, 197, 198, 199, 201, 203, 204, 205], "oh": [171, 178, 201], "ohc": [160, 161, 172], "ohcf": 172, "ohcv": [160, 161, 172], "ohh": 183, "oil": [121, 134], "ok": [54, 91, 122, 133, 135, 136, 139, 143, 144, 147, 182, 183, 189], "okai": [91, 175, 176, 178, 181, 182, 183, 194, 195, 197, 198, 200], "okta": [140, 141], "ol": 132, "old": [41, 46, 73, 86, 103, 108, 121, 122, 132, 133, 135, 136, 137, 143, 158, 160, 167, 180, 181, 191, 194], "old_col": 167, "old_nam": 160, "older": [46, 97, 121, 133, 135, 175], "oldest": [133, 137], "oliv": [121, 134, 192], "olli": 144, "omanyt": 171, "omastar": 171, "omit": [41, 121, 143, 182], "omma": 70, "on_chain_end": [131, 133], "on_chain_error": [131, 133], "on_llm_end": 133, "on_llm_error": 133, "on_tool_end": 131, "on_tool_error": 131, "onc": [0, 5, 6, 26, 37, 41, 49, 51, 54, 56, 57, 58, 61, 70, 73, 76, 77, 79, 82, 89, 92, 94, 100, 121, 122, 133, 135, 136, 146, 163, 164, 167, 174, 175, 176, 177, 178, 179, 181, 182, 183, 189, 190, 192, 195, 198, 199, 200, 201, 202, 203, 204, 205], "one": [0, 1, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 36, 37, 38, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 68, 70, 73, 77, 79, 80, 81, 82, 85, 86, 89, 90, 91, 93, 94, 95, 97, 100, 104, 105, 106, 108, 110, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 154, 155, 156, 157, 160, 161, 162, 164, 165, 167, 169, 170, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207], "one_sent": 148, "onedr": 71, "ones": [6, 54, 82, 121, 133, 135, 136, 137, 138, 143, 147, 153, 154, 156, 157, 158, 167, 169, 176, 177, 178, 179, 180, 181, 182, 183, 197, 199], "ones_lik": 174, "ongo": 203, "onion": [73, 134], "onix": 171, "onli": [0, 8, 14, 21, 24, 29, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 86, 91, 92, 94, 97, 98, 100, 103, 105, 106, 108, 121, 122, 130, 131, 133, 135, 136, 137, 143, 146, 147, 148, 154, 155, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 198, 200, 201, 203, 204, 205], "onlin": [6, 15, 16, 17, 18, 24, 122, 133, 143, 147, 177, 179, 182, 183, 185, 192, 200, 203], "onlinepdfload": 137, "onnx": 183, "ontario": 122, "onto": [132, 133, 134, 136, 147, 175, 182, 183, 194, 202], "onward": [0, 182], "ooo": 54, "oop": [24, 73, 107], "opac": [12, 192], "opaqu": 192, "open": [0, 1, 24, 26, 72, 73, 82, 86, 121, 122, 130, 133, 135, 136, 138, 143, 144, 146, 147, 148, 153, 160, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 212], "open_workbook": 70, "openai": [122, 131, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 174, 212], "openai_api_kei": [121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "openai_funct": 121, "openaiembed": [121, 122, 135, 136, 137, 139, 145, 146], "opendoor": 147, "openerp": 26, "openingattribut": 122, "openmeteo": 130, "openstreetmap": 122, "openvino": 183, "oper": [2, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 30, 31, 37, 38, 39, 41, 42, 49, 50, 53, 59, 61, 70, 72, 73, 76, 77, 79, 85, 87, 91, 94, 96, 99, 100, 102, 103, 104, 107, 120, 122, 133, 136, 139, 143, 144, 146, 154, 157, 160, 164, 165, 167, 168, 169, 170, 176, 177, 178, 179, 181, 182, 183, 184, 185, 203], "operand": [53, 54, 55, 72, 73, 95, 97, 106], "operatornam": 182, "opex": 142, "opim": 178, "opinion": [132, 143, 197, 201, 203], "opportun": [1, 51, 133, 140, 141, 143, 146, 147, 176, 177, 178, 181, 182, 183, 191], "oppos": 143, "opposit": [134, 143, 160], "opt": [121, 122, 131, 133, 135, 136, 137, 147], "optim": [1, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 51, 57, 94, 100, 133, 135, 143, 144, 146, 147, 164, 178, 179, 180, 181, 183, 184, 185], "optimist": 143, "option": [0, 5, 6, 40, 41, 47, 49, 50, 53, 54, 55, 56, 57, 59, 73, 74, 76, 79, 86, 96, 103, 104, 105, 121, 122, 133, 135, 136, 142, 147, 148, 154, 157, 161, 168, 175, 176, 177, 180, 181, 183, 184, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "orang": [49, 73, 93, 97, 122, 133, 162, 183, 192, 195], "oranges_r": 195, "orbital_period": 200, "orchard": 133, "order": [5, 8, 9, 17, 18, 19, 20, 37, 49, 50, 54, 70, 71, 76, 77, 79, 81, 82, 85, 94, 96, 104, 121, 122, 130, 133, 135, 146, 157, 160, 161, 167, 168, 174, 175, 176, 177, 178, 182, 190, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205], "ordereddict": [168, 175, 177], "ordin": [6, 15, 16, 17, 18, 201], "ordinari": [39, 133], "ordinarili": 133, "ore": [41, 205], "oregon": 133, "org": [26, 121, 122, 150, 156, 175, 176, 177, 180, 181, 182, 183, 196, 203, 207], "organ": [0, 26, 55, 61, 76, 82, 85, 96, 103, 121, 133, 143, 144, 146, 180, 203, 207, 214], "orient": [36, 38, 40, 74, 104, 105, 106, 108, 161, 168, 178, 190, 197, 198, 199, 200, 201, 202, 203], "origin": [9, 10, 11, 18, 20, 21, 38, 39, 41, 71, 100, 106, 108, 122, 133, 136, 155, 157, 160, 161, 164, 165, 166, 168, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 194, 199, 203, 204, 207], "orrd": 195, "orrd_r": 195, "orsanmichel": 133, "orthogonol": 28, "os": 133, "oserror": 72, "oshawott": 171, "ot": [41, 48], "otat": 70, "other": [0, 1, 6, 7, 8, 11, 15, 16, 21, 24, 26, 33, 34, 36, 37, 39, 41, 49, 50, 53, 54, 59, 67, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 86, 87, 90, 91, 93, 94, 97, 100, 103, 104, 105, 106, 108, 111, 121, 122, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 153, 154, 156, 157, 160, 161, 165, 166, 168, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212], "other_kei": 133, "other_mag": 106, "otherwis": [51, 54, 70, 73, 79, 100, 104, 105, 131, 133, 136, 156, 161, 166, 167, 174, 175, 176, 178, 180, 182, 183], "othwerwis": 50, "ottawa": 122, "otter": 133, "ou": 203, "ounc": 136, "ouput": [176, 183], "our": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 36, 40, 41, 46, 50, 51, 53, 70, 71, 72, 73, 74, 76, 80, 82, 85, 86, 87, 89, 90, 96, 103, 106, 108, 121, 122, 132, 133, 135, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 157, 160, 161, 163, 170, 174, 175, 179, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214], "our_plot": 195, "ourselv": [70, 87, 132, 133, 142, 176, 177, 178, 182, 183], "out": [0, 15, 21, 26, 27, 37, 38, 40, 41, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 72, 74, 79, 81, 82, 90, 91, 92, 93, 94, 97, 106, 113, 121, 122, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 155, 157, 158, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "out_channel": [177, 178, 179, 182, 184, 185], "out_featur": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "out_i": 176, "out_proj": 182, "outbound": 144, "outcom": [44, 76, 143, 147, 182, 193], "outer": [38, 48, 49, 50, 77, 156, 160, 174, 183, 199], "outer_fun": 77, "outer_funct": 98, "outermost": 98, "outisd": 180, "outlandish": 133, "outlet": 133, "outlier": [193, 194, 199, 201, 203, 207], "outlier_prop": 203, "outliers_indic": 9, "outlin": [133, 143, 150, 182, 198], "outnumb": 133, "outout": 92, "outperform": [1, 183], "output": [1, 5, 6, 7, 8, 12, 14, 19, 20, 36, 37, 38, 39, 41, 42, 45, 46, 48, 49, 51, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 79, 81, 82, 89, 95, 97, 100, 103, 104, 105, 106, 111, 122, 130, 131, 132, 133, 135, 136, 138, 140, 141, 143, 144, 147, 148, 154, 156, 160, 163, 167, 168, 174, 175, 178, 179, 181, 184, 185, 190, 203, 210, 212], "output_dict": 122, "output_featur": 176, "output_format": 148, "output_kei": [131, 133], "output_param_nam": [12, 14], "output_pars": [121, 122, 134, 138], "output_s": [180, 181, 182, 183], "output_shap": [177, 178, 179, 180, 184, 185], "output_text": [133, 144, 147], "outrun": 182, "outsid": [45, 48, 49, 51, 55, 56, 77, 78, 103, 104, 121, 122, 133, 136, 143, 146, 148, 155, 174, 175, 178, 181, 182, 194, 203, 205], "outstand": [181, 182, 183], "outwardli": 133, "outweigh": [177, 183], "over": [1, 12, 13, 14, 15, 16, 17, 18, 36, 37, 39, 49, 50, 51, 81, 91, 93, 105, 121, 122, 133, 134, 135, 136, 137, 141, 143, 146, 147, 148, 150, 154, 160, 161, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 196, 198, 201, 203, 204], "overal": [100, 143, 148, 150, 174, 178, 181, 182, 183, 190, 195, 200, 201, 203, 204], "overall_chain": 121, "overcom": [53, 147], "overconfid": 133, "overcorrect": 176, "overcurl": 133, "overfit": [12, 13, 14, 15, 16, 17, 18, 19, 20, 176, 177, 180, 182, 183], "overflow": [80, 158], "overflowerror": [72, 97], "overhead": 178, "overkil": 37, "overlai": [194, 201], "overlap": [133, 137, 145, 197, 198, 203], "overlap_cont": 145, "overlap_count": 145, "overli": 204, "overload": [24, 107, 143, 156], "overlook": 133, "overplot": 204, "overrid": [74, 108, 178], "overridden": [74, 105], "overset": 32, "overst": 121, "overt": 133, "overtim": 183, "overvalu": 133, "overview": [15, 16, 22, 29, 32, 91, 110, 121, 157, 174, 175, 193, 194, 201, 202], "overwhelm": 182, "overwrit": [57, 70, 79, 174, 178, 183, 185], "overwritten": 70, "ow": [41, 133], "own": [21, 36, 72, 73, 74, 81, 82, 85, 86, 87, 96, 98, 108, 133, 135, 136, 139, 143, 146, 147, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 198, 199, 200, 201, 203], "owner": 133, "oxford": [96, 200], "oxlei": 136, "ozzie_osman": 121, "p": [2, 26, 29, 32, 33, 41, 49, 51, 54, 55, 56, 58, 59, 62, 63, 68, 92, 96, 99, 103, 140, 141, 147, 174, 178, 180, 181, 182, 183, 191, 195, 198, 201], "p0": 174, "p1": [99, 103, 106, 108, 206], "p100": [174, 180], "p2": [99, 103, 106, 108], "p3": [106, 108], "p4": 108, "p5": 108, "p6": 108, "p7": 108, "p8": 174, "p_": 33, "p_letter": 59, "p_list": 26, "pa": 189, "pace": 143, "pachirisu": 171, "pacif": 148, "pack": [39, 56, 133, 134, 136, 182], "packag": [24, 70, 82, 88, 91, 121, 122, 131, 132, 133, 135, 136, 137, 142, 143, 147, 148, 160, 164, 167, 168, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 192, 196, 198, 200, 202, 203, 204, 205], "packagesin": 85, "packing_person_info": 73, "packym": 143, "pad": [54, 62, 63, 96, 97, 177, 178, 179, 182, 184, 185], "padding_mod": 178, "page": [7, 68, 83, 84, 91, 106, 111, 122, 130, 133, 137, 147, 174, 175, 176, 179, 180, 182, 192, 202, 210], "page_cont": [121, 122, 133, 135, 136, 137, 139, 144, 145, 146, 147, 148], "page_data": 144, "pagerduti": 147, "pai": [133, 136, 146, 147, 178, 182, 183], "paid": 133, "pain": [122, 133, 148, 204], "painfulli": 133, "paint": [122, 133, 143], "painter": 133, "pair": [12, 15, 16, 21, 49, 54, 58, 84, 94, 95, 148, 160, 161, 167, 168, 176, 195, 198, 200, 202, 203, 204], "paired_r": 195, "pairgrid": [191, 195, 196, 205, 208], "pairplot": [191, 195, 204, 205], "pairwis": 196, "pal": [32, 130, 205], "pale": [133, 192, 198], "palett": [181, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208], "palkia": 171, "palm": 141, "palpitoad": 171, "palplot": 192, "pan": [122, 134], "pancetta": 121, "pancham": 171, "panda": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 122, 138, 140, 141, 144, 150, 151, 175, 176, 177, 178, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213], "panel": [202, 204], "pangoro": 171, "panopt": 177, "panpour": 171, "pansag": 171, "pansear": 171, "paper": [1, 21, 121, 122, 133, 139, 146, 148, 174, 178, 180, 183, 188, 190, 192, 193, 203, 212, 213], "paperswithcod": [178, 180, 182], "paprika": 134, "par": [180, 182], "para": 171, "para1": 39, "para2": 39, "para3": 39, "paradigm": [103, 183], "paragraph": [148, 182], "parallel": [80, 122, 133, 148, 205], "param": [9, 10, 131, 133, 142, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 193, 198, 199, 203, 204, 205], "param1": 59, "param2": 59, "param3": 59, "param_1": [6, 10, 16], "param_2": [6, 10, 16], "paramet": [6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 41, 42, 54, 59, 70, 77, 81, 86, 100, 103, 105, 108, 121, 122, 130, 140, 141, 142, 145, 146, 148, 150, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "parameter": 104, "parameter1": [76, 86], "parameter2": 76, "parametr": [104, 203], "paramount": 178, "paranthes": 54, "paranthesi": 56, "parasect": 171, "parch": [199, 201], "parent": [74, 121, 132, 141, 146, 175, 177, 178, 179, 180, 181, 183, 184, 185, 197], "parent_splitt": 136, "parentattr": 105, "parentdocumentretriev": 136, "parenthes": [37, 41, 49, 54, 56, 72, 81, 89, 91, 93, 94, 133, 190], "parenthesi": [37, 72, 77, 157], "parentmethod": 105, "pareto": [83, 201], "paretovari": 83, "pari": [121, 122, 150], "park": [141, 143, 180, 193], "parkpicn": 143, "parmar": [39, 49, 54, 70, 76, 79, 82, 92, 103], "parmesan": 121, "parmet": 133, "parr": 146, "parramet": 205, "parrot": [103, 104], "pars": [67, 70, 72, 100, 122, 138, 140, 141, 146, 147, 160], "parser": [72, 122, 133, 136, 140, 141, 147], "parslei": 121, "part": [2, 39, 41, 49, 50, 51, 53, 54, 82, 84, 93, 94, 97, 98, 121, 133, 135, 136, 139, 141, 142, 144, 146, 148, 150, 153, 155, 165, 168, 174, 175, 176, 177, 180, 181, 182, 183, 186, 187, 189, 199, 203], "parti": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 61, 85, 133, 146, 148], "partial": [8, 180], "partial_vari": [121, 122, 134, 138], "particip": [0, 146], "particuar": [18, 19, 20], "particular": [21, 49, 50, 51, 53, 57, 58, 61, 66, 82, 92, 94, 103, 105, 122, 133, 135, 154, 160, 163, 164, 166, 167, 168, 170, 175, 176, 178, 182, 189, 190, 191, 193, 194, 198, 199, 200, 201, 203, 204, 205], "particularli": [54, 133, 146, 147, 199, 200], "partit": [4, 11, 54], "partli": 133, "partner": [131, 133, 148], "pascal": 133, "pass": [24, 36, 38, 39, 41, 42, 44, 45, 46, 52, 54, 61, 62, 63, 67, 72, 73, 74, 79, 81, 82, 86, 90, 92, 103, 104, 105, 108, 121, 122, 133, 134, 135, 136, 137, 141, 142, 144, 148, 154, 160, 161, 162, 163, 164, 167, 169, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205], "passag": [133, 135, 143, 203], "passeng": [201, 203, 205, 206], "passenger_count": 203, "passion": [0, 143, 144], "passiv": 143, "passport": 133, "password": [46, 122], "password_check": 46, "past": [21, 121, 133, 135, 139, 146, 147, 148, 151, 175, 177, 178, 179, 180, 181, 182, 183, 185, 190, 195, 198, 199, 200, 203], "pastel1": [195, 200], "pastel1_r": 195, "pastel2": 195, "pastel2_r": 195, "pat": 120, "patch": [183, 197, 201, 204], "patch_and_position_embed": 182, "patch_artist": 150, "patch_embed": 182, "patch_embedded_imag": 182, "patch_embedded_image_with_class_embed": 182, "patch_embedding_class_token": 182, "patch_embedding_lay": 182, "patch_embedding_with_class_token": 182, "patch_height": 182, "patch_siz": 182, "patch_width": 182, "patchcollect": 203, "patched_image_through_mlp_block": 182, "patched_image_through_msa_block": 182, "patchembed": 182, "patcher": 182, "patchifi": 182, "path": [0, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 70, 71, 85, 96, 111, 122, 133, 135, 136, 142, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 210, 213, 214], "path_to_dir": 183, "path_to_model": 183, "pathcollect": [197, 198], "pathlib": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "patienc": 193, "patrat": 171, "patrick": 133, "pattern": [1, 33, 39, 100, 133, 150, 174, 175, 176, 177, 178, 180, 181, 182, 183, 192, 204], "paul": [121, 133, 135, 136, 137, 189], "paul_graham_essai": 135, "paulg": 143, "paulgraham": [121, 133, 145], "paulgrahamessai": [121, 122, 133, 135, 136, 137], "paulgrahamessayslarg": 136, "paulgrahamessaysmal": [135, 139], "paulgrahamessaysmedium": 136, "paulgrahamessayssmal": 136, "paus": 37, "pawniard": 171, "payment": 133, "payoff": 121, "pb": 133, "pc": 183, "pca": 202, "pcie": 174, "pclass": [199, 201], "pctdistanc": 150, "pd": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 122, 138, 140, 141, 144, 150, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "pd_data": 9, "pd_test_data": [17, 18, 19, 20], "pd_train_data": [17, 18, 19, 20], "pdf": [135, 137, 193, 194, 196, 208], "peach": 201, "peak": [133, 172, 194, 200], "pear": [122, 133], "pearl": 100, "pearsonr": 204, "peculiar": [108, 160], "pedestrian": 8, "peek": [17, 18, 19, 20, 189], "peer": 148, "peggi": [103, 105], "pelipp": 171, "penal": 1, "penetr": 133, "penguin": [103, 105, 144], "penicillin": 49, "peopl": [0, 41, 54, 121, 122, 133, 135, 136, 137, 140, 141, 143, 144, 146, 147, 148, 174, 177, 178, 179, 180, 182, 183, 189, 192, 198, 203], "pep": 86, "pepper": [121, 134], "per": [12, 14, 74, 122, 133, 135, 137, 140, 141, 142, 148, 150, 151, 161, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 192, 193, 199, 200, 201, 203, 205], "peramet": 79, "perceiv": [136, 192], "percent": [39, 181, 183], "percentag": [15, 16, 17, 18, 19, 20, 49, 96, 103, 151, 160, 163, 167, 170, 183, 197, 199, 201, 203], "percentil": [157, 160, 203], "percep": [19, 20], "percept": [133, 200], "perceptron": 8, "perceptron_index": [19, 20], "perenni": 133, "perf": 174, "perfect": [2, 50, 91, 133, 135, 143, 148, 176, 183], "perfectli": [90, 91, 121, 175], "perform": [1, 8, 11, 19, 20, 21, 26, 36, 38, 42, 44, 49, 50, 53, 54, 55, 56, 57, 58, 59, 70, 73, 76, 81, 82, 87, 89, 94, 95, 96, 97, 100, 103, 106, 120, 121, 130, 133, 135, 142, 153, 156, 160, 164, 167, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 201], "performan": 176, "perhap": [133, 178, 180, 181, 182, 183], "perimet": 105, "period": [29, 81, 86, 133, 160, 183, 203], "periodic_function1": 29, "periodic_function2": 29, "perl": 26, "perm": 82, "perman": [70, 183], "permiss": [73, 133], "permit": 201, "permut": [174, 178, 182, 206], "permutebackward0": 182, "persev": 178, "persian": 171, "persist": [143, 174], "person": [0, 1, 49, 70, 76, 79, 86, 92, 103, 104, 105, 121, 122, 125, 131, 133, 135, 136, 140, 141, 143, 148, 149, 176, 178, 181, 182, 183, 198, 201, 203], "person_dct": 70, "person_info": [92, 103, 105], "person_json": 70, "person_schema": 141, "persons_nam": 147, "perspect": [134, 136, 140, 141, 143, 148, 177, 178, 181, 182], "peso": 122, "pet": [133, 148], "petal": [10, 11, 15, 189, 197], "petal_length": [4, 6, 11, 15, 189, 192, 194, 195, 197, 198, 204, 207], "petal_width": [4, 6, 11, 15, 189, 197, 198, 204, 207], "petallengthcm": 150, "petalwidthcm": 150, "petilil": 171, "pg": 121, "pg2148": 121, "pg_work": 121, "ph": 200, "phanpi": 171, "phantump": 171, "phase": [29, 136], "phd": 133, "phenomen": 182, "phenomena": 133, "philosohpi": 176, "philosoph": [135, 183], "philosophi": [133, 135], "philosophia": 135, "phind": 144, "phion": 171, "phone": [42, 96, 99, 133, 137, 143, 148, 183], "phone_num": 99, "phone_numb": 96, "photo": [21, 143, 150, 176, 177, 178, 180, 181, 182, 183], "photograph": [1, 133], "photorealist": 133, "photoshop": 148, "php": [57, 100], "phrase": [122, 135, 140, 141, 143], "physic": [80, 103, 121, 133, 143, 146, 182, 189], "physicist": 0, "pi": [29, 31, 32, 41, 53, 54, 72, 76, 82, 84, 92, 96, 101, 103, 133, 171, 183], "piazza": 133, "picalo": 26, "pichu": 171, "pick": [4, 9, 11, 15, 122, 133, 135, 140, 141, 148, 155, 175, 177, 178, 181, 182, 189, 192, 193, 195, 201, 203], "picki": 137, "pickl": [86, 175], "pickler": 86, "pickletool": 86, "pickup_datetim": 203, "pickup_latitud": 203, "pickup_longitud": 203, "picnic": 133, "pictori": 201, "pictur": [4, 5, 6, 8, 17, 18, 19, 20, 51, 132, 133, 143, 146, 182, 205], "pid": 174, "pidgei": 171, "pidgeot": 171, "pidgeotmega": 171, "pidgeotto": 171, "pidov": 171, "pie": 183, "piec": [40, 121, 122, 132, 133, 135, 136, 137, 141, 143, 144, 146, 147, 148, 155, 174, 175, 177, 178, 179, 181, 182, 183, 185, 201], "piecem": 139, "piechart": 150, "pignit": 171, "pikachu": 171, "pil": [177, 178, 180, 183], "pile": 201, "piloswin": 171, "pilot": [121, 122], "pin": [137, 182], "pin_memori": [179, 182, 185], "pinch": 136, "pine": 133, "pineappl": [122, 201], "pineco": 171, "pinecon": 121, "pinecone_api_env": 137, "pinecone_api_kei": [137, 146], "pinecone_env": 146, "ping": [140, 141], "pink": [49, 134, 192, 195], "pink_r": 195, "pinsir": 171, "pinsirmega": 171, "pinterest": 147, "pioneer": 144, "pip": [26, 70, 82, 121, 130, 135, 136, 137, 139, 142, 147, 176, 177, 178, 180, 181, 182, 183], "pip3": [180, 181, 182, 183], "pipe": [130, 200], "pipelin": [1, 122, 178, 180, 181, 182, 183, 185, 200], "piplein": 178, "piplup": 171, "pirat": [121, 122, 143], "pitti": 133, "pittsbugh": 122, "pivot": [160, 206], "pivot_t": 160, "pixel": [6, 8, 10, 17, 18, 19, 20, 133, 150, 174, 177, 178, 182], "pixel1": [18, 20], "pixel2": [18, 20], "pixel3": [18, 20], "pixel4": [18, 20], "pixel5": [18, 20], "pixel6": [18, 20], "pixel7": [18, 20], "pixel775": [18, 20], "pixel776": [18, 20], "pixel777": [18, 20], "pixel778": [18, 20], "pixel779": [18, 20], "pixel780": [18, 20], "pixel781": [18, 20], "pixel782": [18, 20], "pixel783": [18, 20], "pixel784": [18, 20], "pixel8": [18, 20], "pixel9": [18, 20], "piyg": 195, "piyg_r": 195, "pizel": [18, 19, 20], "pizza": [178, 179, 180, 181, 182, 183, 184, 185], "pizza_steak_sushi": [178, 179, 180, 181, 182, 184, 185], "pizza_steak_sushi_20_perc": [181, 183], "pl": 133, "place": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 53, 54, 55, 56, 57, 58, 61, 70, 73, 74, 79, 80, 82, 85, 91, 94, 96, 105, 108, 121, 133, 135, 136, 139, 141, 143, 146, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 201, 205, 206], "placehold": [51, 54, 96, 121, 135, 146], "plagu": 133, "plai": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 91, 98, 105, 122, 133, 135, 136, 137, 143, 146, 147, 148, 160, 174, 176, 183, 190, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205], "plain": [15, 16, 36, 108, 140, 141, 182, 200], "plan": [103, 122, 133, 136, 144, 146, 148, 176, 183, 203], "plane": [12, 16, 28, 121, 138], "planet": 200, "planets_data": 200, "plant": [121, 141, 176], "plant_schema": 141, "plant_typ": 141, "plasma": [195, 200, 203], "plasma_r": 195, "plate": 201, "platform": [24, 26, 70, 100, 130, 144, 148, 174, 203, 213, 214], "platon": 133, "plausibl": 133, "plausibli": 133, "playbook": 0, "player": [49, 50, 103, 105, 150], "playground": [8, 176], "ple": 41, "pleas": [21, 50, 121, 122, 133, 135, 140, 141, 142, 143, 144, 146, 147, 161, 180, 183, 190, 192, 193, 194, 196, 200, 201, 203, 205], "pleasur": [133, 143], "plenti": [72, 133, 160, 175, 176, 178, 180, 181, 182, 183], "plot": [5, 27, 113, 121, 133, 135, 175, 176, 177, 181, 183, 189, 204, 205, 206, 207, 208], "plot_confusion_matrix": [176, 177], "plot_data": 12, "plot_decision_boundari": 176, "plot_figur": 12, "plot_func": 205, "plot_function1": 29, "plot_function2": 29, "plot_index": [17, 18, 19, 20], "plot_joint": 194, "plot_kw": 195, "plot_layout": 12, "plot_loss_curv": [178, 180, 182, 183], "plot_predict": [175, 176], "plot_predictions_trac": 12, "plot_test_trac": 12, "plot_training_trac": 12, "plot_transformed_imag": 178, "plotcontour": 32, "plotdist": 32, "plotli": [12, 194], "plotlin": 151, "plotnonfinit": 198, "plotter": 198, "plottext": 32, "plotting_context": 190, "plt": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 29, 32, 113, 135, 150, 151, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "plu": [97, 133, 140, 141, 143, 146, 148, 174, 178, 202], "plug": [136, 148, 183], "plugin": [121, 122], "plural": 141, "plusl": 171, "pm": [31, 62, 63, 68, 148], "png": [32, 70, 71, 122, 150, 151, 178, 194], "po": [164, 182, 201], "pocoo": 26, "podcast": [122, 146, 147, 148, 175, 180], "podcastnot": 146, "poetri": [26, 133], "pofession": 205, "point": [5, 6, 9, 37, 38, 40, 41, 53, 54, 58, 67, 68, 72, 82, 83, 84, 93, 94, 97, 104, 106, 108, 121, 122, 133, 135, 136, 139, 143, 146, 147, 148, 150, 157, 174, 175, 176, 177, 178, 180, 181, 183, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206], "point_color": 198, "pointer": [0, 70], "pointplot": [197, 201], "poison": 171, "poisson": 197, "pokemon": 171, "pokemon_data": 171, "pol": 122, "poli": [103, 144], "polic": 189, "policekillingsu": 189, "polici": 144, "polio": 49, "polito": 171, "poliwag": 171, "poliwhirl": 171, "poliwrath": 171, "pollut": 40, "polluzion": 133, "poloclub": [177, 178, 179, 184, 185], "poly1d": 191, "polyfit": 191, "polygon": 105, "polynomi": [12, 13, 14, 15, 16, 17, 18, 153, 193], "polynomial_degre": [12, 13, 14, 15, 16, 17, 18], "ponyta": 171, "poochyena": 171, "pool": [133, 177], "pool_timeout": 131, "poor": [133, 174, 175, 176, 178, 180, 183], "poorli": [121, 178, 192], "pop": [44, 57, 58, 135, 150, 195, 199, 204, 207], "popitem": 57, "popul": [59, 83, 122, 134, 180, 181, 203, 205], "popular": [24, 26, 54, 68, 82, 86, 100, 103, 121, 122, 133, 139, 174, 175, 176, 178, 182, 185], "populu": 180, "por": 122, "poriod": 29, "pork": 134, "porn": 133, "porsch": 172, "port": [100, 133, 147], "portabl": [24, 86, 100], "portal": [130, 143, 202, 214], "portfolio": [183, 212], "portion": [54, 55, 73, 77, 98, 122, 133, 177, 178, 180, 181, 182, 189], "portrai": 192, "portrait": 133, "portug": [122, 150], "porygon": 171, "porygon2": 171, "posit": [1, 2, 16, 21, 31, 39, 41, 42, 45, 46, 47, 48, 54, 59, 73, 80, 81, 84, 93, 130, 131, 133, 135, 140, 141, 143, 146, 148, 160, 169, 170, 176, 178, 192, 194, 197, 198, 199, 201, 205], "position_embed": 182, "positional_or_keyword": 167, "positional_ord": 54, "positive_even_numb": 59, "positive_no": 81, "positive_numb": 96, "posixpath": [178, 181, 182, 183, 184, 185], "possess": 193, "possibl": [1, 9, 12, 17, 18, 19, 20, 40, 41, 46, 49, 51, 54, 56, 59, 73, 80, 82, 85, 92, 93, 96, 121, 122, 133, 139, 140, 141, 146, 147, 150, 156, 157, 160, 162, 163, 175, 176, 178, 179, 180, 182, 183, 192, 195, 197, 200, 203, 205, 206], "possibli": [8, 104, 136, 178, 201], "post": [27, 66, 113, 132, 133, 140, 141, 143, 147, 148, 178, 179, 181, 182, 183, 189, 192, 197, 198, 199, 200, 214], "postag": 204, "postal": 177, "postalcod": 122, "postdoc": 133, "poster": 190, "postscript": 133, "pot": [121, 134], "potato": [73, 97, 134, 140, 141, 142], "potenti": [121, 122, 143, 144, 146, 147, 148, 150, 160, 175, 176, 177, 178, 181, 182, 183, 195, 202, 204], "pound": 202, "pour": 121, "poverti": 143, "pow": [72, 82, 84], "pow2": [55, 59], "power": [0, 36, 37, 49, 54, 55, 59, 72, 82, 84, 91, 97, 98, 105, 106, 110, 121, 122, 123, 130, 133, 139, 140, 141, 142, 143, 144, 146, 153, 154, 156, 160, 174, 175, 177, 178, 180, 181, 182, 183, 203, 205], "powtwo": [36, 37], "powtwogen": 37, "pp": 41, "pple": 41, "ppp": 30, "pprint": 175, "practic": [24, 25, 30, 31, 41, 56, 73, 74, 76, 82, 87, 108, 133, 135, 136, 141, 146, 148, 154, 160, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 194, 200, 201, 202, 203, 205, 212], "practical_estimation_of_the_bandwidth": 196, "praction": [180, 181], "practition": [181, 182], "prantsus": 122, "prantsusmaa": 122, "pre": [1, 82, 100, 136, 144, 146, 175, 178, 180, 182, 193, 201, 202, 203, 205], "prebuilt": 26, "prec": 32, "preced": [45, 62, 63, 73, 79, 91, 105, 133, 194], "preceeed": 21, "precis": [2, 53, 97, 133, 136, 165, 170, 174, 176, 190, 193, 197, 203, 205], "precision_histori": 9, "precision_scor": 176, "preciss": [9, 17, 18, 19, 20], "pred": [176, 177, 178, 180, 183, 184, 185], "pred_and_plot": 182, "pred_and_plot_imag": [178, 180, 181, 182, 187], "pred_and_stor": 183, "pred_class": [177, 183], "pred_dict": 183, "pred_label": [177, 183], "pred_labels_and_prob": 183, "pred_list": 183, "pred_logit": [177, 183], "pred_prob": [177, 183], "pred_tim": 183, "predefin": [1, 6, 12, 70, 76, 82, 95, 133, 190], "predetermin": 121, "predicit": [176, 183], "prediciton": 177, "predict": [1, 5, 6, 15, 16, 21, 100, 122, 132, 133, 136, 143, 147, 184, 185, 187, 193, 203], "predict_and_pars": [136, 141], "predict_messag": 142, "predicted_label": [17, 18, 19, 20], "prediction_kei": 122, "predictions_num": [12, 13, 14], "predicton": 177, "predictor": 193, "predomin": 28, "prefer": [37, 38, 53, 105, 121, 135, 146, 150, 161, 175, 176, 177, 178, 179, 183, 190, 197, 200, 201], "prefix": [53, 85, 98, 103, 104, 121, 190, 192], "preidction": 180, "prematur": 133, "premis": [177, 178, 180, 182, 183], "premium": 146, "prep_output": [131, 133], "prep_prompt": 133, "prepar": [135, 137, 146, 147, 179, 180, 181, 183, 184, 185, 187, 189, 204, 212], "prepare_request": 131, "prepend": [96, 156, 182], "preprend": 182, "preprocess": [178, 180, 182, 183], "prescript": 133, "presenc": [7, 53, 97, 111, 133, 148, 182, 194, 210], "present": [21, 47, 49, 51, 54, 57, 58, 71, 73, 81, 86, 97, 133, 135, 143, 146, 148, 160, 163, 164, 167, 174, 177, 178, 181, 182, 183, 185, 190, 191, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205], "preserv": [53, 133, 143, 183], "preset": 190, "presid": [133, 143], "press": [50, 91, 133, 144, 181, 192], "pression": 41, "pressur": 203, "prestig": 133, "prestigi": 133, "presum": 133, "pretend": 147, "preternatur": 133, "pretrain": [176, 177, 178, 183], "pretrained_effnetb2_food101_model_s": 183, "pretrained_effnetb2_model_s": 183, "pretrained_vit": 182, "pretrained_vit_model_s": [182, 183], "pretrained_vit_result": 182, "pretrained_vit_transform": 182, "pretrained_vit_weight": 182, "pretti": [15, 16, 26, 39, 66, 133, 135, 136, 143, 148, 160, 175, 176, 178, 180, 181, 183, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "prevent": [12, 13, 14, 15, 16, 17, 18, 19, 20, 85, 92, 103, 105, 136, 143, 177, 178, 180, 182, 183], "preview": [121, 122, 133, 135, 140, 141, 144, 148, 189, 191, 193, 194, 195, 199, 200, 201, 203, 205], "previou": [8, 21, 40, 46, 53, 70, 77, 82, 98, 108, 146, 155, 174, 175, 176, 177, 179, 180, 181, 182, 183, 190, 194, 195, 197, 198, 199, 200, 202, 203, 205], "previous": [73, 82, 144, 146, 178, 179, 180, 181, 182, 183, 194, 195, 198, 200, 203, 204, 205], "prgn": 195, "prgn_r": 195, "price": [1, 5, 6, 103, 104, 133, 136, 140, 141, 144, 148, 150, 160, 161, 162, 171, 182, 203], "price_df": 162, "price_list": 162, "pricedf": 172, "primari": [133, 178, 182, 192, 203], "primarili": [49, 50, 143], "prime": [49, 50, 182], "primeap": 171, "primit": 133, "princeton": 203, "princip": 202, "principl": [103, 122, 133, 178, 181, 182, 203], "prinplup": 171, "print": [7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 26, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91, 92, 93, 94, 95, 97, 98, 99, 103, 104, 105, 106, 108, 111, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 197, 203, 210], "print_data": 77, "print_financial_forecast": 142, "print_full_nam": 39, "print_fullnam": [76, 79], "print_hello": 68, "print_hello_three_tim": 68, "print_hi": 68, "print_hi_three_tim": 68, "print_msg": 38, "print_this_to_screen": 90, "print_train_tim": 177, "printer": [38, 39, 133, 142], "printer_nam": 142, "printf": 54, "printhello": 98, "printinfo": 79, "printnam": 103, "printoutput": [140, 141], "printstudentdata": 104, "prior": [8, 133, 175, 177, 178, 180, 203], "priori": 1, "priorit": [122, 137, 146], "prioriti": [146, 148], "prism": [195, 204], "prism_r": 195, "privaci": [144, 183, 212, 214], "privat": [40, 82, 103, 104, 133, 147, 183], "privatenam": 91, "privileg": 204, "priyav": 146, "pro": [174, 178, 181, 183], "proactiv": 146, "prob": [176, 178, 180, 183, 184, 185], "probabl": [2, 6, 9, 12, 13, 14, 21, 25, 53, 121, 133, 136, 148, 150, 154, 175, 177, 178, 180, 181, 182, 183, 184, 185, 192, 194, 199, 200, 206, 212], "problem": [1, 13, 26, 31, 38, 40, 42, 54, 73, 80, 103, 121, 122, 130, 133, 135, 136, 143, 146, 175, 177, 178, 180, 181, 182, 183, 192, 200, 204, 205], "probopass": 171, "proce": [8, 51, 96, 195], "procedur": [104, 203], "process": [0, 1, 8, 12, 14, 15, 16, 18, 19, 20, 21, 26, 30, 31, 33, 37, 50, 51, 56, 59, 68, 73, 80, 95, 100, 103, 104, 105, 108, 122, 133, 135, 136, 137, 139, 144, 146, 147, 148, 160, 162, 166, 174, 177, 178, 180, 182, 183, 193, 204, 205, 212], "processor": [100, 133, 177], "procrastin": [133, 136], "prod": [30, 82], "prod_": 30, "prod_i": 30, "prod_j": 30, "produc": [10, 16, 37, 41, 46, 73, 89, 105, 121, 133, 150, 151, 156, 164, 167, 174, 175, 176, 177, 181, 182, 183, 190, 212], "product": [12, 25, 28, 80, 82, 86, 100, 106, 121, 122, 133, 135, 136, 140, 141, 143, 144, 146, 147, 148, 153, 156, 174, 177, 178, 179, 182, 192, 193, 194, 195, 205, 212], "production": 148, "profession": [133, 150, 190, 191, 192, 197, 198, 200], "professor": [122, 133], "profici": 193, "profil": [133, 146, 147, 181, 183], "profit": [122, 133, 146, 147], "profit_rang": 151, "profitlist": 151, "program": [1, 8, 19, 20, 21, 26, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 78, 81, 82, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 104, 105, 106, 108, 121, 122, 133, 134, 139, 144, 148, 178, 179, 181, 183, 193, 203, 212, 214], "programdata": [63, 82, 164, 167, 168, 169, 189, 192, 196, 198], "programm": [1, 40, 53, 59, 73, 76, 86, 103, 108, 133, 195], "programmar": 87, "programmat": [175, 181], "progress": [26, 135, 143, 144, 146, 175, 176, 177, 178, 181], "project": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 61, 85, 87, 121, 122, 133, 136, 140, 141, 143, 144, 146, 147, 175, 176, 178, 179, 181, 182, 183, 185, 193, 195, 202, 205, 212], "promin": 197, "promis": [108, 121, 136, 147, 178, 182, 189, 195, 203], "promontori": 133, "promopt": [135, 147], "promot": [97, 136], "prompt": [76, 82, 96, 122, 132, 133, 136, 138, 140, 141, 142, 143, 147, 153, 183], "prompt_templ": [121, 136], "prompt_token": [140, 141], "prompttempl": [121, 122, 132, 134, 135, 136, 143, 144, 147], "promptvalu": 121, "prone": [178, 182], "pronoun": 103, "pronounc": [182, 204], "prop": [175, 183, 198, 201], "prop_cycl": [27, 113], "proper": [72, 103, 122, 133, 148, 165, 183], "properli": [70, 71, 72, 104, 148, 199, 200, 205], "properti": [21, 24, 43, 82, 103, 105, 121, 136, 140, 142, 146, 163, 198, 203], "propon": 180, "proport": [1, 5, 6, 12, 14, 17, 18, 19, 20, 34, 133, 176, 183, 199, 201, 203], "proportion": 133, "propos": [108, 134, 135, 143], "prospect": [1, 133, 136, 144, 148], "protect": [56, 73, 94, 103, 104, 146, 148], "protein": [134, 174, 175], "protocol": [26, 36], "prototaxit": 122, "prototyp": [4, 11, 104, 133], "proud": 181, "prove": [121, 133, 143], "proven": 180, "provid": [1, 24, 26, 38, 40, 44, 49, 51, 53, 54, 55, 57, 68, 71, 73, 74, 79, 82, 86, 96, 103, 104, 105, 121, 122, 130, 131, 133, 135, 136, 143, 144, 146, 151, 153, 156, 158, 160, 161, 162, 164, 167, 172, 177, 179, 182, 183, 192, 194, 197, 199, 203, 204, 205, 213, 214], "provinc": 122, "proxi": [72, 105, 131, 183], "prudent": [133, 146], "prune": [137, 191], "prwrxu49dd": 143, "pry": 136, "pseudo": [73, 83, 122], "pseudocod": 182, "pseudocolor": 192, "pseudorandom": 174, "psychic": 171, "psyduck": 171, "pt": [175, 179, 184, 185], "pth": [175, 177, 179, 181, 182, 183, 184, 185], "ptp": 197, "pubic": 183, "public": [86, 103, 138, 143, 181, 182, 183], "publicli": [133, 181], "publish": [133, 139, 180, 182, 183, 203], "pubu": 195, "pubu_r": 195, "pubugn": 195, "pubugn_r": 195, "pull": [122, 133, 136, 140, 141, 142, 143, 146, 148, 155, 182, 192, 201, 202, 205], "pull_from_greenhous": [140, 141], "pull_from_websit": 147, "pullov": [18, 20, 177], "puls": [133, 202], "pump": 136, "pumpkabooaverag": 171, "pumpkaboolarg": 171, "pumpkaboosmal": 171, "pumpkaboosup": 171, "punch": 133, "punctuat": 82, "puor": 195, "puor_r": 195, "pupitar": 171, "purchas": [1, 148, 176, 178, 183], "purd": 195, "purd_r": 195, "pure": [175, 181, 183], "puri": 146, "purpl": [192, 195, 197], "purples_r": 195, "purpos": [8, 26, 44, 70, 74, 81, 82, 83, 91, 103, 104, 105, 106, 110, 133, 162, 174, 175, 176, 178, 181, 182, 185, 191, 192, 193, 198, 199, 202, 203, 205], "purposefulli": 122, "purrloin": 171, "pursuit": 133, "purugli": 171, "push": [133, 183], "put": [0, 40, 41, 45, 46, 51, 54, 73, 89, 98, 121, 122, 133, 135, 136, 137, 140, 141, 143, 146, 147, 148, 158, 177, 179, 180, 181, 183, 184, 185], "puzzl": [133, 177, 182, 183], "pvalu": 191, "pwr": 174, "py": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 63, 74, 78, 82, 85, 86, 89, 92, 96, 121, 122, 131, 133, 135, 136, 137, 164, 167, 168, 169, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 189, 192, 196, 198], "py3": 82, "py_list": 55, "py_tupl": 56, "pybrain": 26, "pyc": 183, "pycharm": [26, 190], "pycodestyl": 122, "pydant": 121, "pydantic_schema": 140, "pydantic_v1": [121, 140], "pydata": [189, 203, 207], "pygam": 26, "pykyra": 26, "pynb": 82, "pypdf": 137, "pypdfload": [135, 137], "pyplot": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 27, 29, 113, 135, 150, 151, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "pyqt": 26, "pyramid": [26, 49], "pyroar": 171, "pyscript": 82, "pyth0ndatatyp": 54, "pythagora": 135, "pythagorean": 133, "pytho": 54, "python": [0, 99, 100, 121, 122, 130, 131, 135, 139, 144, 150, 155, 156, 163, 164, 167, 170, 174, 175, 177, 178, 180, 181, 182, 184, 186, 187, 191, 193, 195, 198, 200, 203, 204, 212, 213, 214], "python3": [57, 73, 121, 122, 131, 133, 135, 136, 137, 177, 178, 183], "python32": 54, "python38": 82, "python4datasci": 82, "python99": [46, 70], "python_datatyp": 54, "python_learn": 71, "python_repl": 130, "python_studi": 71, "pythonblogsoftwar": 26, "pythondatatyp": 54, "pythonpath": 82, "pythonregex": 41, "pythonthi": 91, "pythonwikiengin": 26, "pythonwin": 82, "pytorch": [184, 187, 212, 213], "pytorch_project": 185, "pytz": [61, 65], "pyweek": 26, "q": [33, 92, 125, 149, 174, 177, 180, 181, 182, 183, 195, 199], "q9trqo4yau": 147, "qa": [122, 139, 146], "qaevalchain": 122, "qkv": 182, "qspeci": 122, "quad": [29, 33, 34], "quagsir": 171, "qualit": [180, 181, 192], "qualiti": [122, 133, 135, 136, 137, 143, 144, 146, 150, 151, 177, 178, 180], "quantil": [150, 199], "quantit": [180, 199, 201, 204], "quantiti": [137, 141, 201], "quantiz": 192, "quarter": 203, "quarterli": 205, "quartet": 195, "quartil": [150, 199, 200, 201], "queen": 198, "queenstown": 199, "queer": 133, "queri": [130, 133, 139, 140, 142, 143, 146, 160, 182, 193, 203], "query_constructor": 136, "question": [50, 121, 125, 130, 133, 135, 136, 146, 147, 148, 149, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 204], "question_answ": [122, 133, 137], "question_kei": 122, "questoin": 147, "quetion": 147, "quick": [86, 121, 122, 135, 136, 146, 158, 178, 179, 182, 183, 191, 198, 204], "quicker": [180, 181, 183], "quickest": [133, 183], "quickli": [0, 121, 122, 133, 136, 144, 146, 157, 178, 179, 180, 181, 182, 190, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "quiet": 136, "quietli": 133, "quilava": 171, "quilladin": 171, "quintero": 189, "quit": [8, 12, 14, 49, 56, 72, 73, 133, 136, 155, 157, 174, 175, 178, 180, 181, 182, 183, 191, 193, 194, 195, 196, 197, 198, 202, 203, 205, 206], "quo": 135, "quot": [54, 70, 76, 86, 91, 93, 94, 133, 140, 141, 143, 147, 175, 182, 190, 192], "quotat": [86, 89, 121], "quoted_statu": [143, 147], "quux": 55, "quz": 55, "qwilfish": 171, "qxzw7gfumi": 143, "r": [5, 12, 13, 14, 32, 33, 34, 49, 50, 51, 54, 55, 56, 57, 58, 63, 68, 70, 71, 73, 76, 92, 93, 103, 104, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 160, 168, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "r1": 154, "race": [133, 189, 197], "rachel": [122, 141], "ractangular": 33, "rad": [34, 150], "rad2deg": 34, "radian": [82, 84], "radio": [133, 148], "radiu": [103, 133], "rag": 133, "rage": [122, 146], "raichu": 171, "raikou": 171, "rail": 133, "railroad": 133, "railwai": 132, "rain": [6, 133], "rainbow": [192, 195, 198, 200, 201, 203], "rainbow_r": 195, "rais": [9, 36, 37, 40, 51, 54, 55, 56, 57, 58, 63, 70, 72, 74, 82, 84, 86, 90, 97, 106, 108, 131, 133, 136, 143, 164, 169, 178, 198], "raise_for_statu": 131, "raise_from": 131, "raison": 133, "raleigh": 146, "ralph": 133, "ralt": 171, "ram": 70, "rambl": 133, "ramen": 183, "ramp": [122, 147, 192], "rampardo": 171, "ran": [21, 49, 72, 73, 103, 104, 133, 174], "rana": 154, "rand": [82, 160, 174, 195, 197, 203, 204, 206], "randaug": 178, "randint": [82, 83, 177, 195, 204], "randn": [27, 113, 175, 177, 181, 182, 196, 199, 203], "random": [2, 4, 9, 12, 14, 17, 18, 19, 20, 21, 24, 27, 53, 58, 70, 88, 113, 135, 137, 153, 160, 175, 176, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "random_idx": 177, "random_image_path": [178, 183], "random_image_size_tensor": 174, "random_image_tensor": 182, "random_index": 182, "random_input_imag": 182, "random_input_image_error": 182, "random_numb": 82, "random_sampl": 154, "random_samples_idx": 178, "random_se": [174, 176], "random_split": 183, "random_split_1": 183, "random_split_2": 183, "random_st": [135, 176, 204], "random_tensor": [174, 177], "random_tensor_a": 174, "random_tensor_b": 174, "random_tensor_c": 174, "random_tensor_d": 174, "randomhorizontalflip": 178, "randomli": [4, 175, 176, 178, 180, 181, 183, 191, 203], "randomlist": 73, "randomst": 193, "randon": 204, "randrang": [53, 82, 83], "rang": [5, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 30, 31, 37, 41, 50, 51, 54, 55, 56, 57, 59, 68, 72, 73, 74, 76, 82, 83, 91, 94, 105, 113, 133, 135, 141, 153, 154, 155, 156, 160, 161, 162, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214], "rangeindex": [19, 20, 160, 170], "rank": [10, 12, 14, 153, 154, 155, 156], "rank_bm25": 136, "ranska": 122, "ranskan": 122, "rant": 133, "rapid": [24, 133, 147], "rapidash": 171, "rapidli": [24, 133, 183], "rapidroad": 144, "rare": [9, 73, 108, 133, 141, 174], "rarer": 133, "raspberri": 183, "rate": [5, 6, 12, 13, 14, 133, 141, 143, 146, 150, 175, 176, 177, 178, 179, 181, 182, 183, 185, 194, 197, 198, 202], "ratelimiterror": 143, "rather": [0, 6, 8, 19, 20, 61, 68, 82, 86, 91, 105, 121, 133, 135, 136, 140, 142, 143, 146, 147, 160, 161, 163, 167, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 190, 199, 201, 203], "ratic": 171, "ratio": [1, 6, 15, 16, 17, 18, 84, 137, 146, 147, 183, 205], "ration": [53, 135], "rational": 183, "rattata": 171, "raw": [41, 93, 122, 136, 140, 141, 143, 147, 177, 178, 179, 180, 181, 182, 183, 184, 185, 203], "raw__payload__headers__deliv": 131, "raw_str": 93, "rayquaza": 171, "rayquazamega": 171, "rb": 70, "rbg": 207, "rbodi": 133, "rc": [190, 192, 201], "rcode": 133, "rcparam": [27, 29, 113, 201, 203, 204], "rdbm": 205, "rdbu": [176, 195], "rdbu_r": 195, "rdgy": 195, "rdgy_r": 195, "rdpu": 195, "rdpu_r": 195, "rdwtg8e7gpws62or6": 122, "rdylbu": [176, 195], "rdylbu_r": 195, "rdylgn": 195, "rdylgn_r": 195, "re": [1, 8, 12, 21, 26, 50, 54, 55, 76, 82, 121, 122, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 160, 169, 170, 171, 184, 186, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205], "rea": 49, "reacal": 9, "reach": [0, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 40, 49, 51, 70, 120, 122, 133, 140, 141, 146, 178], "react": [54, 70, 121, 122, 130, 131, 135], "reaction": 136, "reactor": 133, "read": [0, 21, 24, 37, 38, 41, 42, 68, 72, 73, 76, 77, 78, 86, 91, 98, 100, 104, 121, 122, 131, 132, 133, 135, 136, 140, 141, 143, 144, 146, 148, 154, 155, 156, 160, 168, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 193, 194, 204, 212], "read_clipboard": [144, 160], "read_csv": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 138, 150, 151, 160, 161, 168, 171, 172, 189, 194, 200, 201], "read_excel": [160, 171], "read_html": 160, "read_imag": 178, "read_json": 160, "read_sql": 160, "read_sql_queri": 122, "read_tabl": 160, "read_timeout": 131, "readabl": [24, 30, 31, 44, 59, 70, 81, 82, 91, 100, 108, 161], "reader": [70, 121, 133, 135, 143], "readi": [0, 73, 103, 105, 121, 122, 133, 139, 140, 141, 146, 147, 174, 175, 177, 178, 180, 181, 182, 183], "readili": [87, 96], "readinto": 131, "readlin": [70, 131, 183], "readm": 70, "readthedoc": 176, "real": [2, 4, 5, 8, 9, 11, 25, 26, 33, 53, 92, 93, 94, 103, 104, 122, 133, 136, 138, 143, 144, 146, 148, 160, 175, 176, 178, 179, 180, 181, 183, 185, 193, 198, 199, 200, 203, 204, 212], "realist": 133, "realiti": [0, 92, 130, 133, 182], "realiz": [0, 133, 136, 137, 200], "realli": [17, 18, 19, 20, 21, 41, 103, 121, 122, 133, 134, 136, 137, 139, 141, 143, 144, 146, 147, 148, 174, 175, 177, 178, 180, 181, 182, 183, 189, 191, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206], "rear": 141, "rearrang": [174, 178, 181, 182], "reason": [5, 13, 21, 37, 38, 39, 40, 53, 81, 98, 104, 108, 121, 122, 130, 131, 133, 135, 136, 139, 146, 147, 157, 166, 174, 177, 182, 183, 189, 191, 198, 200, 205], "reassign": [39, 54, 56, 92, 166, 167, 174, 178], "rebel": 133, "rebelli": 0, "rebind": 98, "recal": [2, 133, 176, 177, 181, 182], "recalcul": [175, 176], "recall_histori": 9, "recall_scor": 176, "recap": [146, 176], "receiv": [8, 45, 46, 59, 79, 108, 121, 131, 133, 140, 182, 183], "recent": [21, 36, 37, 38, 39, 40, 42, 50, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 77, 78, 79, 80, 82, 93, 94, 95, 96, 97, 103, 104, 105, 106, 108, 131, 133, 143, 155, 164, 167, 169, 174, 177, 178, 180, 198, 203], "reciev": 26, "recip": [121, 136, 139, 175, 179, 183], "reciproc": 73, "recogn": [1, 6, 8, 17, 18, 19, 20, 40, 82, 178, 180, 181], "recognit": [1, 8, 17, 18, 136, 182, 183], "recollect": 195, "recomend": 92, "recommend": [1, 26, 40, 41, 42, 62, 63, 68, 70, 85, 104, 121, 133, 135, 136, 146, 147, 148, 153, 154, 174, 175, 178, 180, 182, 183, 185, 193, 195, 197, 198, 199, 201, 204, 212, 213], "record": [99, 121, 133, 148, 168, 174, 189, 203, 205], "recount": [133, 146], "recours": 122, "recov": 178, "recreat": [138, 177, 178, 180, 182, 183, 184, 185], "recruit": [133, 178], "rect": [103, 197], "rectangl": [49, 103, 197, 199, 201, 205], "rectangular": [201, 205, 206], "rectifi": [46, 176], "rectifier_": 176, "recur": 108, "recurr": 212, "recurs": [24, 33, 88, 105, 183], "recursionerror": 80, "recursivecharactertextsplitt": [121, 122, 133, 135, 136, 137, 139, 144, 145, 146, 147, 148], "recursor": 80, "recv_into": 131, "red": [5, 9, 17, 18, 19, 20, 49, 91, 104, 122, 133, 141, 150, 151, 174, 175, 177, 181, 192, 195, 196, 198], "reddit": 133, "redeclar": 92, "redefin": [105, 203], "redirect": 131, "rediu": 103, "redownload": [180, 183], "reds_r": 195, "reduc": [5, 6, 12, 13, 14, 19, 20, 39, 49, 50, 76, 80, 121, 134, 140, 141, 143, 146, 147, 148, 158, 160, 175, 176, 178, 182, 183, 194, 200, 202, 203], "reduce_chain": 135, "reduceat": 158, "reduced_data_tsn": 135, "reduct": [1, 28, 135, 143, 212], "redund": [108, 160, 164], "refactor": [40, 175], "refect": 193, "refer": [24, 26, 38, 39, 51, 54, 55, 56, 70, 72, 82, 85, 86, 87, 92, 93, 97, 98, 103, 105, 108, 121, 122, 130, 133, 135, 136, 142, 143, 156, 157, 158, 160, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 187, 189, 190, 192, 193, 195, 198, 199, 201, 202, 203, 204, 205, 209], "referec": 203, "referenc": [77, 78, 174, 178, 182, 189, 198, 199], "reference_vari": 103, "referenceerror": 72, "referr": 148, "refil": 146, "refin": [143, 193], "refinedocumentschain": 133, "reflect": [80, 133, 136, 143, 175, 182, 183, 193, 197, 199, 201, 203, 205], "reform": 205, "reformat": [54, 121], "refresh": [25, 133, 175, 183, 190], "refus": 133, "reg": [41, 192, 194, 195, 196, 203, 208], "regard": [133, 144, 191, 198, 203], "regardless": [45, 174, 175, 183], "regex": [24, 43, 122, 171], "regex101": 41, "regex_pattern": 41, "regic": 171, "regigiga": 171, "regim": [181, 182], "region": [122, 133, 143], "regirock": 171, "regist": [86, 178], "registeel": 171, "reglot": 193, "regplot": [191, 195, 197, 204], "regress": [3, 8, 10, 175, 176, 190, 191, 193, 194, 197, 203, 204, 208, 212], "regret": 137, "regular": [22, 41, 49, 54, 59, 110, 136, 146, 147, 160, 176, 177, 178, 180, 181, 182, 183, 184, 199, 203], "regularization_param": [12, 13, 14, 15, 16, 17, 18, 19, 20], "regularli": [0, 103, 133], "reheat": 134, "reign": 178, "reilli": 133, "reindex": 164, "reindex_axi": 201, "reinforc": 212, "reinvent": 203, "reiter": 176, "reject": 51, "rejoic": 133, "rel": [100, 121, 137, 177, 180, 190, 197, 201, 203], "relat": [5, 25, 61, 67, 68, 70, 72, 73, 79, 106, 121, 122, 136, 137, 140, 141, 176, 178, 182, 183, 189, 191, 198, 199, 202, 203, 204, 205, 206, 213], "relationa": 160, "relationship": [1, 5, 6, 12, 13, 14, 15, 16, 17, 18, 34, 133, 175, 178, 191, 192, 193, 194, 195, 196, 201, 205], "releas": [73, 76, 121, 133, 136, 150, 174, 180, 182, 183], "release_conn": 131, "relentlessli": 137, "relev": [122, 132, 136, 140, 141, 143, 146, 148, 160, 177, 190, 194, 198, 202, 205, 206], "reli": [54, 70, 133, 183], "reliabl": [122, 140, 141], "relicanth": 171, "relief": 133, "reliev": 133, "reload": [9, 175, 202], "reload_ext": 9, "relplot": 203, "relu": [176, 177, 178, 179, 184, 185], "rem": 79, "remain": [10, 17, 18, 19, 20, 56, 70, 97, 133, 136, 176, 177, 178, 180, 182, 183, 189, 190, 193, 194, 195, 197, 202, 203, 204], "remaind": [50, 51, 79, 82, 84, 97, 106, 150], "remark": [133, 139, 143], "remean": 51, "rememb": [0, 17, 18, 19, 20, 37, 38, 49, 51, 71, 76, 77, 93, 97, 105, 108, 121, 133, 154, 174, 175, 176, 177, 178, 180, 181, 182, 197, 198, 199, 200, 201, 203], "remind": [133, 137, 143, 175, 176, 181, 183, 192], "reminisc": 132, "remoraid": 171, "remot": [73, 144, 146, 174, 181, 182], "remov": [1, 29, 38, 41, 49, 53, 54, 56, 70, 72, 82, 104, 121, 122, 131, 134, 135, 136, 140, 143, 146, 147, 164, 165, 166, 170, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 190, 193, 196, 198, 199, 200, 203, 204], "remove_sourc": 181, "renam": [16, 26, 133, 142, 153, 170, 201, 205], "rename_axi": 167, "render": [12, 14, 26, 71, 110], "renown": 133, "rent": [133, 182], "reorgan": 133, "rep": [144, 148], "repeat": [1, 49, 50, 54, 55, 56, 57, 76, 80, 87, 89, 103, 105, 136, 148, 154, 157, 174, 175, 177, 182, 183, 203, 205], "repeatedli": [44, 49, 50, 51], "repel": 133, "repes": 21, "repetit": [41, 49], "rephras": [148, 199], "repl": 130, "replac": [10, 18, 20, 37, 40, 41, 51, 54, 59, 92, 104, 105, 133, 135, 143, 144, 155, 160, 167, 169, 172, 183, 190, 192, 194, 196, 198, 200, 203], "repli": [125, 131, 133, 142, 147, 149], "replic": [175, 177, 179, 183, 184, 185, 188, 203], "repo": [122, 136, 146, 176, 177, 183], "repons": [122, 142], "report": [12, 14, 122, 133, 140, 141, 146, 148, 176], "repositori": [10, 54, 174, 179, 182, 183, 185], "repr": 26, "repres": [2, 9, 17, 18, 19, 20, 21, 30, 31, 33, 53, 54, 62, 63, 64, 66, 67, 72, 73, 79, 86, 90, 93, 94, 100, 103, 104, 108, 121, 133, 135, 143, 164, 167, 169, 170, 174, 175, 176, 177, 182, 189, 190, 192, 193, 194, 197, 199, 200, 201, 203, 205, 206], "represent": [1, 21, 26, 53, 54, 62, 63, 86, 103, 133, 160, 175, 178, 180, 181, 182, 183, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "reprint": 133, "reproduc": [27, 113, 174, 176, 178, 179, 181, 182, 183, 200], "reproducbl": 174, "repubblica": 122, "republ": 122, "republiek": 122, "republik": 122, "republika": 122, "republiken": 122, "rep\u00fablica": 122, "request": [26, 122, 130, 131, 133, 140, 141, 142, 143, 147, 148, 155, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "request_id": 133, "request_timeout": [133, 135, 146], "requestor": 133, "requir": [0, 1, 5, 12, 13, 14, 26, 28, 36, 37, 40, 44, 49, 50, 53, 59, 72, 73, 74, 76, 79, 81, 85, 91, 92, 93, 95, 100, 103, 104, 105, 108, 120, 121, 122, 133, 135, 140, 142, 146, 160, 164, 166, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 213, 214], "required_datatyp": 95, "requires_cons": [140, 141], "requires_grad": [174, 175, 176, 180, 181, 182, 183], "requires_processing_cons": [140, 141], "requires_retention_cons": [140, 141], "requis": 198, "requset": 147, "reread": 133, "rerun": 175, "resampl": 203, "resarch": 54, "rescan": 133, "rescu": [37, 40], "research": [0, 54, 122, 125, 133, 135, 144, 146, 149, 174, 176, 177, 178, 180, 183, 188, 192, 193, 198, 199, 201, 202, 205, 212, 213], "resembl": [143, 203, 205], "reserv": [90, 92, 214], "reset": [174, 175, 177, 178, 190], "reset_index": [160, 161, 171, 201], "resghap": 9, "reshap": [1, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 32, 141, 153, 156, 158, 178, 180, 182, 206], "reshiram": 171, "resid": [82, 196], "residplot": 204, "residu": [12, 14, 182, 195], "resiz": [70, 133, 150, 153, 178, 179, 180, 181, 182, 184, 185], "resize_s": [180, 181, 182, 183], "resnet": [180, 182], "resnet18": 180, "resnet50": 180, "resolut": [143, 150, 182], "resolv": [143, 162, 182, 183, 204], "reson": 203, "resound": 133, "resourc": [0, 36, 70, 73, 144, 147, 174, 175, 180, 182, 192, 194, 195, 200, 201, 202, 203, 213, 214], "resp": [131, 133, 134], "respecitv": 178, "respect": [54, 61, 68, 79, 94, 95, 96, 104, 133, 161, 163, 167, 168, 174, 175, 176, 177, 182, 183, 185, 191, 192, 193, 194, 201, 202, 203, 204, 205], "respectivv": 201, "respond": [121, 122, 132, 133, 142, 143, 146, 147, 148], "respons": [0, 106, 121, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 146, 147, 183, 198, 202, 212], "response_kw": 131, "response_schema": [121, 122, 138], "responseschema": [121, 122, 138], "rest": [7, 21, 49, 51, 54, 55, 70, 73, 76, 86, 111, 133, 142, 148, 164, 167, 177, 178, 182, 183, 190, 193, 195, 197, 198, 199, 201, 202, 203, 204, 210, 214], "restart": [37, 49, 82, 177, 181, 182, 183, 190], "restaur": [133, 146, 193, 197, 198, 200], "restcountri": 122, "restor": [83, 141], "restrict": [40, 103, 108, 133, 141, 200], "restructur": 86, "result": [0, 4, 8, 12, 13, 14, 21, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 46, 49, 50, 51, 53, 54, 55, 56, 67, 68, 72, 73, 76, 77, 79, 80, 82, 87, 90, 91, 96, 97, 105, 106, 121, 122, 131, 133, 136, 138, 139, 141, 143, 144, 145, 146, 155, 156, 157, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 184, 185, 186, 190, 192, 193, 194, 195, 201, 202, 203, 204, 205], "resum": 133, "resurc": 202, "ret": 198, "retail": [133, 138], "retain": [177, 182], "retention_period": [140, 141], "rethink": 180, "retir": 133, "retool": 147, "retrac": 139, "retri": [131, 133, 140, 141, 143], "retriev": [40, 54, 57, 79, 86, 94, 122, 125, 137, 139, 145, 146, 148, 169, 174, 180], "retrievalqa": [122, 139, 146], "retrieved_doc": 136, "retriever_from_llm": 136, "retriever_mmr": 145, "retriever_vanilla": 145, "retro": 147, "retrospect": 133, "retry_decor": 133, "retry_object": 133, "retry_st": 133, "retry_with": 133, "retrycallst": 133, "return": [9, 12, 14, 17, 18, 19, 20, 26, 32, 36, 37, 39, 40, 41, 49, 50, 54, 58, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 96, 97, 103, 104, 105, 106, 108, 121, 122, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 160, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 190, 191, 192, 197, 198, 200, 203, 204, 205], "return_direct": 131, "return_full_docu": 136, "return_intermediate_step": [121, 122, 133], "return_only_output": [131, 133], "return_source_docu": 139, "return_split_parent_docu": 136, "retweet": [143, 147], "retweeted_statu": [143, 147], "reuniclu": 171, "reus": [26, 40, 103, 133, 155, 178, 179, 181, 182, 184, 185], "reusabl": [42, 76, 82, 103, 105, 179, 182, 185, 186], "rev": 150, "rev_str": 37, "reveal": [108, 178, 182, 183, 192, 204], "reveng": 146, "revenu": [140, 148, 192], "revers": [37, 39, 54, 56, 57, 133, 143, 147, 153, 174, 192], "review": [121, 122, 140, 148, 153, 178, 182, 183, 197, 198], "revis": [0, 200, 201], "revisit": [146, 194, 195], "reviv": 133, "revolut": 150, "revolution": [1, 147], "revolv": 148, "reward": [1, 41, 54, 122, 148], "rewrit": [46, 76, 179, 185], "rewritten": 59, "rf": [180, 181, 182, 183], "rfind": 54, "rfloor": 97, "rgb": [12, 177, 178, 180, 184, 185, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "rgba": [192, 194], "rheader": 133, "rhydon": 171, "rhyhorn": 171, "rhyperior": 171, "ribbon": 133, "ricasoli": 133, "rich": [133, 136, 146, 199, 203, 204], "richard": [0, 181], "rid": [133, 136, 176, 190, 196, 198, 200], "ride": [133, 143], "rideau": 122, "ridg": 133, "ridicul": 21, "right": [21, 29, 30, 32, 34, 44, 54, 74, 79, 86, 91, 96, 97, 105, 106, 121, 122, 132, 133, 136, 137, 143, 146, 148, 150, 151, 155, 160, 174, 175, 176, 177, 178, 180, 181, 182, 183, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 205, 214], "rightarrow": [29, 30, 31, 33, 34], "rigid": 136, "rigor": [133, 203], "rim": 133, "riolu": 171, "rippl": 147, "risd": 133, "rise": 182, "risk": [121, 136, 143, 148, 203, 204], "riski": 121, "river": [122, 133], "rjust": [32, 54, 96], "rm": [180, 181, 182, 183], "rmdir": 82, "rmtree": [71, 183], "road": 180, "roam": 82, "robert": [133, 136, 175, 192], "robocal": 146, "robot": 1, "robust": [100, 141, 146, 157, 178, 193, 207], "rock": 171, "rocket": [0, 26, 133, 195, 197, 198, 200, 201, 202, 203, 204, 205], "rocket_r": 195, "rocki": 133, "rococo": 133, "rodriguez": 189, "roduct": 30, "roger": 150, "roggenrola": 171, "rohan": [6, 144], "roi": [133, 203], "role": [0, 22, 91, 105, 134, 142, 143, 144, 146, 147, 148, 160, 212], "roll": [133, 158, 169, 175, 182], "roman": 133, "rome": 121, "romero": [160, 161, 172], "ron": 133, "ronald": [11, 15], "ronaldo": [49, 50, 150], "roof": [133, 141], "room": [5, 133, 136, 143, 146], "roommat": 133, "root": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 70, 73, 82, 84, 122, 133, 153, 156, 177, 178, 183, 184, 185], "root_dir": 122, "rootsoflisp": 139, "rose": [141, 163], "roselia": 171, "roserad": 171, "rosini": 133, "ross": 177, "rot": [133, 192], "rotat": [178, 182, 183, 192], "rotom": 171, "rotomfan": 171, "rotomfrost": 171, "rotomheat": 171, "rotommow": 171, "rotomwash": 171, "rough": [147, 203], "roughli": [121, 133, 182, 183, 194, 205], "round": [33, 37, 45, 54, 59, 82, 95, 97, 136, 147, 176, 183], "rout": [136, 183], "routin": [89, 156, 201, 203], "row": [9, 10, 13, 16, 17, 18, 19, 20, 21, 33, 49, 50, 59, 70, 122, 133, 150, 153, 154, 155, 156, 157, 160, 164, 165, 167, 169, 170, 171, 174, 177, 180, 182, 183, 191, 193, 194, 195, 197, 201, 202, 204, 205, 206, 207], "row1": 166, "row2": 166, "row_color": 207, "row_index": 168, "row_index1": 162, "row_index2": 162, "row_labl": 160, "row_ord": [193, 202, 205], "row_posit": 160, "row_r1": 155, "row_r2": 155, "row_set": [180, 181, 182, 183], "royalti": 133, "rpm": 172, "rss": 133, "rstrip": 54, "rt": 70, "rtm": 133, "rtol": 177, "rtx": [174, 180], "ru": 122, "rubi": 100, "rufflet": 171, "rug": [133, 191, 196], "rule": [1, 8, 19, 20, 33, 34, 54, 76, 100, 105, 156, 160, 174, 175, 176, 183, 198, 201, 205], "run": [0, 7, 24, 25, 26, 36, 37, 38, 39, 49, 50, 51, 53, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 76, 77, 78, 79, 82, 98, 100, 103, 105, 111, 121, 122, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 147, 148, 175, 176, 177, 178, 179, 180, 182, 185, 186, 190, 192, 200, 202, 203, 210, 213, 214], "run_as_str": 131, "runawai": 133, "runnabl": 100, "runner": 133, "runtim": [72, 73, 82, 105, 139, 175, 177, 178, 180, 181, 182, 183, 185, 189], "runtimeerror": [72, 73, 174, 177, 178], "runtimewarn": 156, "rupert": 146, "russel": 133, "rusti": 133, "rvalu": 191, "rvert_": 29, "rw": 175, "rwightman": 180, "r\u00e9publiqu": 122, "s1": [61, 103, 169, 170], "s2": [61, 103, 169, 170], "s2023": 144, "s3": [169, 170, 177], "s4": 170, "s_car": 105, "saa": 144, "sabley": 171, "sableyemega": 171, "sach": 133, "sacrific": [174, 177, 183], "sad": 38, "safe": [56, 70, 103, 133, 136, 140, 141, 144, 192, 196], "safer": [70, 71, 143], "safeti": 138, "sagemak": 183, "sai": [2, 5, 6, 8, 21, 39, 41, 50, 79, 82, 104, 105, 121, 122, 131, 132, 133, 134, 136, 137, 142, 146, 147, 148, 160, 174, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 203, 204, 205], "said": [2, 9, 54, 105, 133, 134, 135, 136, 139, 146, 156, 176, 178, 182, 190, 192, 193, 194], "saint": 150, "sake": [133, 161, 189], "salad": [121, 134, 140], "salam": 171, "salamencemega": 171, "salari": [74, 103, 105, 136, 150, 164], "salary_rang": 141, "salarynotinrangeerror": 74, "sale": [122, 133, 140, 141, 144, 148, 203], "sales_data_of_bathingsoap": 151, "sales_rep": 144, "sales_rep_compani": 148, "sales_rep_nam": 148, "salesdata": 151, "salesforc": 140, "salk": 49, "salli": 121, "salmon": 201, "salt": 121, "salvag": 133, "sam": [121, 133, 135, 144, 146, 161, 163, 164, 165, 166, 167, 170], "same": [8, 10, 18, 20, 21, 22, 30, 31, 33, 34, 36, 37, 39, 42, 45, 46, 49, 51, 54, 58, 73, 76, 77, 78, 79, 81, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 122, 131, 133, 135, 136, 140, 141, 142, 143, 146, 147, 151, 153, 154, 155, 156, 157, 160, 163, 164, 165, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "sampl": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 36, 70, 83, 93, 103, 105, 113, 121, 137, 140, 141, 143, 147, 154, 157, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 194, 195, 197, 198, 199, 200, 203, 204, 205], "sample_1": 199, "sample_2": 199, "sample_3": 199, "sample_cmap": 192, "sample_color": 192, "sample_combo": 199, "sample_decscription_str": 143, "sample_descript": 143, "sample_melt": [197, 205], "samsara": 147, "samsung": 79, "samurott": 171, "san": [121, 122, 133, 142, 144, 146, 148, 150, 189], "san_francisco_tre": 122, "sandal": [8, 18, 20, 177], "sandil": 171, "sandshrew": 171, "sandslash": 171, "sandwich": 143, "sandwichlov": 143, "sanit": 143, "sanitize_sequ": 198, "santa": 133, "sapp": 189, "sarah": 146, "sarban": 136, "sarcasm": 132, "sassi": 132, "sat": [174, 198, 199, 200, 201], "satisfi": [0, 21, 33, 39, 44, 50, 51, 59, 105, 133, 155, 182], "satur": [192, 199, 200, 201, 203], "sauerkraut": 134, "saunter": 133, "sausag": 134, "saut\u00e9": 134, "save": [26, 32, 36, 37, 82, 89, 100, 121, 133, 136, 138, 141, 143, 144, 146, 150, 174, 176, 178, 180, 181], "save_filepath": 181, "save_model": [179, 181, 182, 183, 184, 185], "saved_model": 185, "saved_model_01": 175, "savefig": [32, 150, 151, 183], "savor": [137, 143], "saw": [26, 133, 142, 146, 176, 180, 181, 182, 183], "sawk": 171, "sawsbuck": 171, "scalabl": [135, 183, 205], "scalar": [28, 156, 157, 160, 161, 176, 181, 200, 201], "scale": [1, 133, 146, 147, 148, 150, 157, 176, 177, 179, 180, 181, 182, 183, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "scale_hu": 200, "scan": [100, 133, 178, 204], "scandir": 178, "scar": 133, "scarc": 133, "scare": 133, "scari": 133, "scatter": [0, 9, 11, 12, 13, 14, 15, 16, 135, 162, 175, 176, 183, 191, 193, 195, 196, 197, 198, 202, 204, 205, 208], "scatter3d": 12, "scatter_kw": [193, 194, 195, 197, 204], "scatterbug": 171, "scatterplot": [193, 194, 195, 197, 198, 205], "scc": 194, "scenario": [1, 5, 78, 105, 142, 146, 178, 182, 183, 190, 193, 194, 198, 199, 200, 203], "scene": [12, 174, 175, 177, 181], "sceneri": 121, "sceptil": 171, "sceptilemega": 171, "schedul": [0, 148, 175, 182], "schema": [134, 135, 138, 140, 141, 142, 146, 148], "scheme": [133, 136, 182, 192], "schnitzel": 134, "school": [25, 53, 121, 122, 132, 133, 136, 143, 144, 161, 174, 200, 201], "schtick": 133, "scienc": [1, 2, 9, 24, 26, 57, 70, 76, 82, 121, 122, 130, 133, 135, 137, 140, 141, 143, 146, 160, 163, 173, 175, 176, 182, 185, 191, 193, 202, 203, 205, 213, 214], "scientif": [26, 153, 182, 192, 200], "scientist": [121, 122, 132, 176, 181], "scikit": [146, 153, 176, 204, 212], "scipi": [26, 156, 191, 196, 203, 204], "scizor": 171, "scizormega": 171, "scoliped": 171, "scope": [24, 38, 72, 77, 78, 82, 91, 96, 102, 132, 136, 147, 176, 198, 199, 205], "score": [2, 5, 9, 10, 12, 14, 122, 133, 138, 161, 176, 199, 201], "scorebook": 201, "scorecard": [201, 205], "scott": [143, 200], "scrafti": 171, "scraggi": 171, "scrap": 133, "scrape": [0, 147, 148], "scratch": [36, 103, 105, 135, 174, 179, 180, 181, 182, 183], "scream": 133, "screen": [0, 54, 61, 89, 96, 143, 193, 202], "screen_nam": [143, 147], "screw": 133, "script": [0, 26, 73, 82, 100, 132, 133, 146, 147, 176, 177, 178, 180, 181, 182, 186], "scroll": 175, "scrub": 146, "scrum": 144, "scrumptiou": 143, "sculptur": 133, "scyther": 171, "sd": [157, 201, 203], "sdk": 183, "se": [133, 146], "sea": 133, "seaborn": [194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 213], "seadra": 171, "seagreen": 205, "seak": 171, "seal": 133, "sealeo": 171, "search": [40, 54, 57, 85, 98, 105, 121, 122, 130, 131, 135, 136, 140, 141, 172, 177, 181, 182, 183, 202], "search_kwarg": [136, 145], "search_str": 131, "search_term": 131, "search_typ": 145, "searchabl": 121, "season": 133, "seat": 133, "sec": 148, "second": [8, 33, 36, 37, 39, 48, 49, 54, 55, 56, 59, 62, 63, 65, 66, 67, 68, 72, 73, 77, 79, 82, 87, 92, 96, 97, 104, 105, 108, 133, 134, 142, 143, 144, 145, 148, 155, 163, 164, 167, 169, 172, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 190, 198, 199, 200, 201, 203, 205], "second_last": 54, "second_lett": 54, "second_numb": 96, "second_respons": 142, "secondari": 48, "secondli": [140, 141, 174, 193, 203], "secret": 182, "section": [0, 3, 8, 38, 53, 54, 59, 70, 91, 96, 114, 115, 116, 117, 120, 121, 122, 135, 143, 144, 148, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 200, 202, 203, 214], "sector": [15, 16, 147], "secur": [103, 122, 136, 140, 141, 144, 148, 175, 177], "sedan": [160, 161, 172], "sediment": 133, "see": [5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 36, 37, 38, 39, 40, 41, 42, 46, 49, 50, 51, 53, 54, 57, 59, 68, 70, 72, 73, 76, 77, 78, 79, 81, 82, 83, 86, 90, 91, 94, 95, 96, 97, 100, 103, 105, 106, 108, 110, 111, 113, 121, 122, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 209, 210], "seed": [27, 83, 113, 133, 136, 175, 177, 178, 180, 182, 183, 184, 185, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "seedot": 171, "seek": [70, 174], "seek_set": 70, "seekabl": 70, "seeker": [133, 140, 141], "seel": 171, "seem": [53, 85, 108, 121, 122, 133, 135, 136, 137, 139, 176, 177, 181, 182, 183, 191, 199, 200, 202, 203, 204, 205], "seen": [38, 40, 70, 108, 133, 136, 143, 160, 161, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 195, 196, 197, 198, 199, 204, 205], "segment": [1, 87, 122, 146, 177, 190, 191, 193, 197, 202], "segreg": [190, 197, 200, 201, 203, 205], "seismic": 195, "seismic_r": 195, "seismitoad": 171, "seiz": 146, "seldom": 133, "select": [0, 1, 5, 6, 26, 54, 121, 122, 133, 135, 146, 147, 148, 150, 153, 155, 161, 164, 167, 172, 180, 181, 183, 192, 200, 203, 204, 205], "select_difficulti": 85, "select_threshold": 9, "selectbackward0": [176, 182], "selected_doc": 135, "selected_indic": 135, "selenium": 0, "self": [0, 1, 36, 37, 40, 59, 73, 74, 86, 103, 105, 106, 122, 131, 133, 141, 164, 167, 169, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 189, 198], "self_attn": 182, "self_mag": 106, "self_queri": 136, "selfattent": 182, "selfqueryretriev": 136, "sell": [103, 133, 135, 136, 144, 146], "seller": 136, "semant": [121, 135, 136, 138, 139], "semanticsimilarityexampleselector": 121, "semest": 175, "semi": [26, 105, 180], "send": [131, 140, 141, 142, 146, 148, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 203], "senior": 141, "sens": [1, 5, 12, 13, 14, 21, 39, 49, 90, 92, 133, 137, 139, 143, 156, 160, 175, 176, 177, 179, 182, 185, 189], "sensat": 182, "sensibl": 106, "sensit": [51, 90, 92, 97, 181, 192, 203], "sent": [8, 122, 133, 134, 141, 142, 146, 148, 183], "sentenc": [21, 41, 49, 54, 96, 121, 122, 132, 133, 137, 143, 144, 146, 148, 182], "sentiment": 148, "sentinel": 36, "sentret": 171, "sep": [62, 63, 86, 89, 157, 171], "sepal": [10, 11, 15, 150, 189, 197], "sepal_length": [11, 15, 189, 195, 197, 198, 204, 207], "sepal_width": [11, 15, 189, 194, 195, 197, 198, 204, 207], "sepallength": 150, "sepallengthcm": 150, "sepalwidthcm": 150, "separ": [0, 8, 19, 20, 21, 46, 49, 53, 54, 55, 56, 57, 58, 59, 70, 71, 73, 74, 76, 90, 92, 94, 96, 97, 98, 103, 105, 121, 122, 133, 135, 136, 143, 146, 148, 151, 162, 168, 175, 176, 177, 178, 190, 191, 193, 195, 197, 199, 200, 203, 204, 205], "separatelli": 16, "seper": 178, "septemb": [133, 140], "seq": [30, 31, 83], "sequenc": [30, 31, 36, 37, 49, 51, 55, 56, 57, 70, 71, 72, 76, 80, 81, 82, 83, 89, 91, 93, 94, 95, 97, 98, 121, 140, 155, 157, 169, 170, 174, 180, 182, 193, 194, 203, 204], "sequencemethod": 91, "sequenti": [1, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "sequoia": 141, "seren": 189, "serena": 135, "seri": [31, 37, 48, 49, 50, 66, 82, 100, 121, 122, 135, 136, 138, 143, 144, 146, 172, 175, 177, 178, 179, 180, 182, 183, 193, 196, 197, 200, 202, 205, 212], "serial": [86, 175], "serie_function1": 29, "serie_function2": 29, "serif": [201, 203], "seriou": [132, 133], "serp_api_kei": 121, "serpapi": [121, 130], "serpapi_api_kei": [121, 130], "serperior": 171, "serv": [4, 10, 11, 18, 20, 74, 86, 110, 121, 133, 134, 142, 147, 175, 182, 202], "server": [2, 9, 133, 136, 143, 181, 183, 203], "servic": [121, 133, 138, 142, 144, 147, 177, 179, 181, 183], "servin": 171, "session": [82, 131, 148, 178, 181], "set": [0, 1, 2, 4, 5, 10, 11, 13, 14, 15, 16, 24, 26, 36, 40, 41, 50, 54, 55, 60, 70, 76, 82, 93, 95, 97, 104, 105, 121, 122, 131, 133, 134, 135, 136, 137, 142, 143, 144, 147, 148, 150, 154, 155, 157, 160, 161, 162, 164, 165, 166, 167, 174, 176, 177, 179, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "set1": [193, 195, 198, 201, 205], "set1_cont": 145, "set1_r": 195, "set2": [195, 199, 200, 201, 204], "set2_cont": 145, "set2_r": 195, "set3": [195, 199, 200], "set3_r": 195, "set_": 198, "set_1": 104, "set_access_token": [143, 147], "set_axis_label": [202, 205], "set_context": 190, "set_except": 133, "set_fonts": 201, "set_hatch": 150, "set_index": [160, 168, 177, 183, 201], "set_opt": 160, "set_printopt": 158, "set_se": [181, 182, 183], "set_styl": [190, 192, 194, 200, 201], "set_temperatur": 40, "set_titl": [151, 178, 183, 202, 205], "set_transform": 198, "set_vis": 204, "set_xlabel": [182, 183, 200, 201, 203], "set_xtick": [182, 201], "set_xticklabel": [200, 202], "set_ylabel": [182, 183, 200, 201, 203], "set_ytick": [182, 201], "setattr": [104, 105], "setenec": 144, "seterr": 158, "setlevel": 136, "setmaxpric": 103, "setosa": [10, 11, 15, 150, 189, 197, 207], "setstat": 83, "settabl": 53, "setter": 103, "settl": [0, 133, 146], "settler": 133, "setup": [15, 16, 19, 20, 174, 175, 178, 179, 184, 185], "seven": [133, 144, 147, 148], "sever": [5, 6, 10, 11, 15, 26, 37, 41, 47, 55, 67, 68, 73, 82, 96, 133, 136, 155, 174, 176, 178, 179, 180, 181, 182, 183, 185, 200], "severli": 182, "sevip": 171, "sewaddl": 171, "sex": [176, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "sex_tim": 200, "sfdc": 140, "sfp": 133, "sftree": 122, "sgd": [175, 176, 177, 182], "sgml": 133, "shaan": 146, "shaanvp": 143, "shade": [133, 192, 194], "shadow": [133, 193], "shake": [133, 176], "shakespear": 135, "shall": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "shame": 133, "shampoo": 151, "shampoosalesdata": 151, "shape": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 103, 133, 147, 153, 154, 155, 156, 157, 160, 164, 175, 179, 180, 181, 183, 184, 185, 189, 193, 197, 200], "sharabl": 103, "share": [0, 10, 18, 20, 82, 104, 108, 121, 131, 133, 135, 137, 143, 144, 146, 147, 148, 160, 174, 179, 180, 181, 182, 183, 191, 192, 198, 203, 205], "shareabl": [181, 183], "sharei": [32, 182, 191, 193, 202, 205], "sharex": [32, 151, 182, 191, 193, 200, 202, 205], "sharpedo": 171, "sharpedomega": 171, "sharpli": 178, "shayminland": 171, "shayminski": 171, "she": [74, 103, 121, 133, 143, 146, 148], "shear": 133, "shedinja": 171, "sheet": [133, 152, 159, 160, 173, 175], "sheet_nam": 70, "shelfwar": 148, "shelgon": 171, "shell": [37, 38, 39, 68, 89, 130, 174, 183, 193], "shellder": 171, "shello": 171, "shelmet": 171, "shelter": 133, "shelton": 189, "shepherd": 148, "shibbi": 122, "shieldon": 171, "shift": [26, 46, 49, 50, 51, 91, 97, 106, 133, 140, 174, 181, 204], "shiftri": 171, "shimmer": 133, "shine": [133, 182, 195, 197, 200], "shinx": 171, "ship": [121, 122, 143], "shirt": [18, 20, 133, 177], "shoe": 133, "shoot": [133, 189], "shop": [133, 136], "shopifi": 122, "shopper": 133, "shore": 133, "short": [47, 49, 59, 76, 81, 86, 91, 121, 132, 133, 135, 137, 143, 148, 168, 174, 177, 178, 179, 181, 182, 183, 185, 202], "short_list": [143, 147], "shortcut": [24, 33, 174], "shorten": 73, "shorter": 136, "shortest": 133, "shorthand": 150, "shortli": [182, 183, 193, 200, 204], "shot": [121, 122, 130, 131, 133, 135, 189, 201, 203], "should": [5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 37, 38, 39, 41, 42, 45, 46, 49, 53, 59, 70, 71, 73, 76, 86, 91, 92, 96, 100, 104, 108, 111, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 150, 151, 155, 156, 160, 161, 164, 165, 168, 169, 170, 174, 175, 176, 179, 182, 183, 184, 185, 191, 192, 193, 194, 198, 199, 203, 205, 210, 212], "shouldn": [177, 178, 181, 198, 203], "shout": 182, "shovel": 133, "show": [5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 50, 51, 54, 62, 63, 67, 77, 79, 80, 81, 82, 93, 100, 103, 104, 106, 110, 111, 121, 122, 133, 135, 137, 139, 144, 146, 147, 150, 160, 161, 163, 166, 167, 168, 170, 174, 175, 177, 178, 180, 182, 183, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210], "show_config": 158, "show_progress": 136, "showcap": 197, "showcas": [143, 174, 180, 182, 183], "showflier": [197, 199], "shown": [4, 36, 39, 40, 46, 49, 51, 54, 55, 72, 85, 100, 103, 141, 160, 161, 162, 164, 165, 166, 167, 168, 179, 190, 199, 201, 206], "showroom": 160, "shrdlu": 133, "shrimp": 134, "shroomish": 171, "shuckl": 171, "shuffl": [53, 83, 133, 177, 178, 179, 183, 184, 185], "shuppet": 171, "shutil": [71, 183], "si": 121, "sibl": 8, "sibsp": [199, 201], "side": [105, 122, 133, 134, 148, 160, 174, 177, 178, 179, 184, 185, 190, 197, 199, 205], "sierra": 133, "sig": 198, "sight": [36, 133], "sigilyph": 171, "sigma": [9, 30, 83], "sigma_squar": 9, "sigmoid": [6, 8, 176], "sigmoidbackward0": 176, "sign": [27, 31, 79, 84, 91, 113, 122, 133, 140, 141, 148, 183, 193, 198], "signal": [1, 8, 137, 140, 141, 143, 146, 147, 183, 203], "signatur": [108, 133], "signer": 148, "signific": [21, 25, 53, 92, 148, 160, 177, 182, 189, 192, 193], "significantli": [9, 12, 13, 14, 133], "signs_of_mental_il": 189, "silcoon": 171, "silenc": 168, "silent": 133, "silicon": [132, 133, 143], "siliconoracl": 132, "siliconvallei": 136, "silu": 180, "silver": 178, "silverman": 200, "simiar": 94, "similar": [0, 1, 5, 8, 9, 12, 14, 21, 35, 37, 39, 41, 42, 49, 50, 54, 56, 59, 76, 82, 85, 91, 98, 104, 110, 121, 122, 133, 135, 136, 138, 143, 145, 146, 155, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 193, 194, 196, 197, 198, 200, 202, 203, 205, 206, 207], "similar_prompt": 121, "similari": 97, "similarity_": 32, "similarity_search": [136, 137], "similarli": [33, 34, 40, 41, 53, 54, 58, 70, 71, 77, 78, 85, 93, 94, 98, 103, 104, 105, 106, 108, 133, 163, 170, 177, 182, 189, 191, 192], "similiar": [176, 177, 181, 182], "simipour": 171, "simisag": 171, "simisear": 171, "simmer": 134, "simmon": 192, "simpl": [0, 8, 19, 20, 21, 22, 24, 26, 36, 37, 38, 39, 40, 50, 54, 57, 61, 70, 73, 74, 82, 89, 93, 97, 99, 100, 104, 108, 110, 133, 135, 137, 139, 144, 147, 148, 162, 164, 167, 168, 170, 175, 176, 178, 181, 183, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 212], "simple_transform": [178, 181], "simplefilt": 135, "simpler": [26, 80, 121, 176, 193, 194, 200, 204], "simplesequentialchain": 121, "simplest": [45, 49, 54, 82, 130, 154, 156, 177, 182, 183, 193, 199, 201], "simpli": [36, 37, 39, 40, 50, 54, 76, 85, 91, 96, 97, 98, 104, 105, 122, 133, 136, 143, 146, 148, 156, 164, 182, 202], "simplier": [12, 13, 14, 15, 16, 17, 18, 19, 20], "simplif": 182, "simplifi": [6, 8, 39, 122, 164, 178, 182], "simul": [106, 121, 133], "simultan": [5, 6, 79, 194, 195, 200, 203], "sin": [12, 13, 14, 15, 16, 17, 18, 29, 82, 84, 153, 156, 190, 203, 205], "sinc": [8, 9, 11, 12, 13, 14, 37, 39, 41, 46, 49, 51, 55, 56, 57, 58, 67, 68, 70, 73, 76, 79, 82, 83, 94, 103, 104, 105, 106, 108, 122, 132, 133, 136, 137, 143, 146, 147, 148, 155, 157, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 195, 196, 197], "sine": [29, 82, 84, 153, 190, 203], "sing": [96, 103, 133, 174], "singer": 121, "singl": [5, 12, 14, 21, 28, 39, 41, 49, 54, 55, 58, 68, 73, 78, 81, 93, 94, 100, 103, 108, 133, 135, 136, 140, 141, 143, 144, 145, 146, 147, 154, 155, 160, 162, 169, 174, 176, 177, 179, 181, 183, 184, 185, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207], "single_feature_map": 182, "single_flattened_feature_map": 182, "singular": [33, 141, 156], "sinh": [53, 82, 84], "sink": 133, "sinlg": 183, "sinplot": 190, "sinusoid": [5, 12, 13, 14, 15, 16, 17, 18, 205], "sinusoid_degre": [12, 13, 14, 15, 16, 17, 18], "sister": [133, 141], "sit": [122, 133], "sitcom": 136, "site": [82, 121, 122, 130, 131, 133, 135, 136, 137, 148, 164, 167, 168, 169, 178, 189, 192, 196, 198], "sitter": 133, "situat": [0, 37, 48, 56, 73, 76, 79, 95, 133, 143, 190], "six": [108, 131, 133, 160, 161, 172, 192], "sixteen": 133, "size": [5, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 49, 50, 51, 54, 70, 85, 103, 121, 133, 135, 136, 144, 146, 148, 153, 154, 156, 157, 160, 161, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "size_func": 204, "skarmori": 171, "sketch": [103, 104, 133], "skew": [183, 203], "skewer": 134, "skiddo": 171, "skiff": 133, "skill": [1, 49, 70, 92, 103, 105, 133, 141, 150, 180, 182, 183, 203, 204, 213, 214], "skillet": [121, 134], "skim": 133, "skinnier": 200, "skip": [45, 46, 49, 50, 51, 54, 73, 79, 133, 137, 147, 176, 177, 178, 180, 181, 182, 183, 185], "skiploom": 171, "skitti": 171, "sklearn": [135, 176, 177, 204], "skorupi": 171, "skrelp": 171, "skuntank": 171, "sky": [133, 192], "slack": [122, 131, 148], "slake": 171, "slakoth": 171, "slash": [54, 71, 200], "slashdot": 133, "sled": 133, "sleep": [24, 69, 82, 89, 133], "sleev": 137, "slice": [58, 91, 94, 134, 155, 160, 204], "slice_a": 155, "slicebackward0": [176, 182], "slick": 133, "slide": 133, "slidingtackl": 150, "sliggoo": 171, "slight": [22, 56, 110, 177, 183, 205], "slightli": [68, 133, 136, 174, 175, 178, 180, 181, 182, 183, 189, 198], "slip": [133, 136], "slk": 122, "slope": [133, 191, 201], "sloppi": [122, 135], "slot": 155, "slow": [133, 136, 156, 164, 183], "slowbro": 171, "slowbromega": 171, "slower": [100, 183], "slowk": 171, "slowli": [133, 178, 181, 182, 183, 197, 198, 199, 203], "slowpok": 171, "slugma": 171, "slurpuff": 171, "sly": 21, "sm_doc": 133, "sm_loader": 133, "small": [8, 12, 13, 14, 22, 51, 59, 74, 82, 87, 100, 110, 121, 122, 133, 135, 136, 137, 144, 146, 148, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 195, 197, 201, 203, 204, 205], "smaller": [0, 48, 76, 95, 122, 133, 135, 136, 146, 153, 156, 163, 174, 175, 177, 178, 180, 181, 182, 183, 195, 197, 204], "smallest": [58, 84, 135, 182], "smallpox": 49, "smart": [92, 121, 132, 133, 146, 182, 183], "smart_divid": 39, "smarter": 144, "smartest": 146, "smartphon": [177, 182, 183], "smash": 180, "smeargl": 171, "smi": 174, "smile": 133, "smim": 161, "smith": [121, 146, 161], "smoke": [133, 176, 203, 205], "smoker": [193, 196, 197, 198, 199, 200, 201, 202, 203, 205], "smoochum": 171, "smoot": 203, "smooth": [139, 183, 200, 203], "smoother": 193, "smoothli": 79, "sn": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "snail": 143, "snake": 92, "snake_cas": 92, "sname": 167, "snapshot": [140, 141], "sne": 135, "sneak": [133, 189], "sneaker": [18, 20, 146, 177], "sneaki": 182, "sneasel": 171, "snippet": [121, 122, 138], "snivi": 171, "snore": 136, "snorlax": 171, "snorunt": 171, "snover": 171, "snow": [6, 133], "snowfal": 133, "snowflak": 133, "snowi": 133, "snowsho": 133, "snubbul": 171, "so": [0, 2, 4, 7, 8, 15, 16, 18, 19, 20, 21, 24, 29, 33, 34, 36, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 70, 72, 73, 76, 77, 79, 81, 82, 83, 87, 90, 91, 92, 95, 97, 98, 100, 103, 104, 105, 106, 108, 111, 121, 122, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 155, 156, 160, 161, 164, 166, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210], "soak": 143, "soar": 202, "soccer": [150, 205], "social": [2, 9, 133, 148], "societi": [130, 133, 136, 143], "socket": [26, 131], "socketerror": 131, "sockettimeout": 131, "sofifa": 150, "soften": [133, 134], "softmax": [174, 176, 177, 178, 179, 180, 183, 184, 185], "softwar": [0, 26, 133, 136, 138, 141, 144, 148, 180, 182, 183, 193], "solar": 143, "sold": [122, 133, 140, 141, 146, 151], "sole": [191, 192, 203], "solemn": 133, "solid": [133, 143, 147, 183, 190], "solo": 121, "solosi": 171, "solrock": 171, "solut": [1, 38, 40, 42, 72, 78, 95, 135, 136, 143, 144, 147, 151, 156, 172, 183, 200, 203, 205], "solv": [33, 59, 78, 103, 130, 133, 135, 143, 162, 182, 192, 193], "som": 147, "some": [0, 2, 6, 8, 21, 22, 23, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 44, 49, 50, 53, 54, 55, 56, 57, 58, 59, 70, 72, 73, 76, 78, 80, 82, 86, 89, 94, 96, 97, 100, 103, 105, 108, 110, 112, 113, 121, 122, 125, 133, 134, 135, 136, 137, 142, 143, 144, 146, 147, 148, 149, 155, 156, 157, 160, 161, 164, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 209, 213], "some_tensor": 174, "some_transform": [179, 185], "somebodi": 148, "somedai": 203, "somehow": [193, 201], "someon": [87, 122, 133, 135, 139, 140, 141, 147, 148, 174, 176, 179, 182, 183, 203], "somersault": 133, "someth": [0, 18, 19, 20, 21, 36, 37, 46, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 80, 82, 91, 96, 122, 131, 133, 135, 136, 137, 139, 143, 144, 146, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205], "sometim": [21, 49, 51, 54, 73, 74, 76, 79, 80, 89, 96, 103, 133, 136, 140, 141, 154, 160, 167, 168, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 190, 198, 200, 204], "somewher": [51, 55, 133, 143, 175, 177, 192, 199], "son": [133, 137], "song": [85, 103, 122, 174, 175, 178, 183], "songwrit": 121, "soon": [49, 72, 103, 104, 114, 115, 116, 117, 118, 121, 122, 130, 131, 133, 136, 137, 144, 176, 177, 182, 193, 195], "sophiaamoruso": 143, "sophist": [122, 174], "sophomor": 133, "sorri": [132, 133, 143], "sort": [0, 49, 58, 82, 133, 135, 136, 143, 146, 147, 148, 170, 175, 177, 178, 181, 183, 197, 198, 200, 205], "sort_kei": [140, 141], "sort_valu": [160, 171, 172, 200, 201, 205], "sorted_tweet": [143, 147], "sota": 178, "sought": 1, "sound": [30, 31, 133, 136, 143, 148, 178, 183, 191, 201], "soup": [93, 134, 140, 141, 147], "sourc": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 86, 89, 91, 100, 121, 122, 130, 133, 135, 136, 137, 140, 142, 147, 153, 155, 157, 160, 165, 168, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 189, 212], "source_docu": 139, "source_path": 142, "south": [122, 150], "southampton": [199, 201], "southern": 122, "sox": 122, "sp": [168, 171], "spa": 122, "space": [28, 41, 44, 49, 51, 54, 72, 76, 79, 86, 89, 91, 96, 120, 122, 133, 135, 136, 143, 146, 147, 153, 157, 160, 176, 177, 178, 180, 182, 192, 194, 196, 200, 203, 205], "spaghetti": 121, "spain": [122, 150], "spam": [5, 6, 15, 16, 17, 18, 133, 146], "span": [110, 122, 140, 141, 197, 205], "spanish": 122, "spare": 133, "spatial": [182, 201, 203], "speak": [21, 36, 37, 108, 143, 148, 174, 201, 205], "speaker": [133, 136, 146, 190], "spearow": 171, "spec": 133, "speci": [10, 11, 15, 103, 104, 122, 133, 150, 189, 192, 195, 197, 198, 204, 207], "special": [0, 5, 13, 36, 39, 42, 90, 91, 92, 104, 108, 110, 133, 135, 140, 141, 147, 160, 178, 182, 185, 189, 190, 202, 204, 205], "specialattribut": 91, "specialidentifi": 91, "specialist": 133, "specialmethod": 91, "specialti": 133, "specif": [0, 1, 5, 8, 12, 14, 17, 18, 19, 20, 21, 42, 49, 50, 54, 70, 76, 82, 86, 87, 95, 96, 100, 103, 105, 110, 121, 122, 130, 131, 132, 133, 136, 142, 143, 144, 146, 147, 148, 151, 155, 160, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 190, 191, 192, 193, 194, 198, 199, 200, 202, 203, 204, 205, 206], "specifi": [1, 39, 40, 49, 51, 54, 68, 70, 71, 73, 81, 83, 91, 92, 93, 105, 106, 121, 122, 131, 141, 142, 145, 148, 150, 153, 154, 155, 157, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 180, 181, 182, 183, 185, 192, 194, 195, 203, 205], "specifici": [176, 178], "specimen": 133, "spectacular": 133, "spectacularli": 133, "spectral": 195, "spectral_r": 195, "speed": [105, 121, 122, 133, 143, 160, 171, 174, 178, 180, 181, 182, 205], "speed_of_light": 92, "speedup": [176, 182], "spell": 121, "spelt": 176, "spend": [133, 136, 137, 143, 175, 176, 177, 178, 180, 182], "spent": [121, 133, 143, 178, 183], "spewpa": 171, "spheal": 171, "sphere": 26, "sphinx": [22, 86, 110], "spike": 203, "spinach": 121, "spinarak": 171, "spinda": 171, "spine": [133, 190, 194, 199, 200], "spirit": [178, 181, 203], "spiritomb": 171, "spiritu": 133, "split": [4, 10, 11, 16, 26, 32, 39, 49, 54, 96, 121, 122, 133, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 153, 160, 168, 177, 180, 181, 183, 190, 197, 198, 200, 204], "split_dataset": 183, "split_docu": [121, 122, 133, 136, 137, 139, 144, 145], "split_siz": 183, "split_string_decor": 39, "splitlin": 70, "splitted_str": 39, "splitter": [122, 135, 136, 139, 146, 147], "splunk": 141, "spoiler": [140, 141], "spoink": 171, "spoke": [148, 190], "spontan": 133, "spook": 136, "sporad": 178, "sport": [105, 133], "sports_car_info": 105, "sportscar": 105, "spot": 141, "spotifi": 121, "spread": [143, 183, 193, 199, 200, 203, 205], "spreadsheet": [70, 160, 175, 177], "spring": [108, 133, 141, 195, 199, 201], "spring_r": 195, "sprinkl": [134, 182], "sprint": 144, "sprintf": 54, "spritze": 171, "sprung": 133, "spur": 133, "spyder": 190, "sp\u00e4tzle": 134, "sqaur": [17, 18, 19, 20], "sql": [122, 141, 144, 160, 168], "sql_databas": 122, "sqldatabas": 122, "sqldatabasechain": 122, "sqlite": 122, "sqlite3": 122, "sqlite_db_path": 122, "sqlqueri": 122, "sqlresult": 122, "sqr": 81, "sqrt": [17, 18, 19, 20, 32, 34, 82, 84, 153, 156, 158], "squar": [4, 5, 17, 18, 19, 20, 33, 37, 38, 39, 45, 49, 50, 51, 54, 55, 56, 57, 59, 81, 82, 84, 86, 103, 108, 133, 147, 153, 154, 156, 174, 176, 177, 178, 184, 191, 194, 195, 204, 205, 206], "square_numb": [76, 79], "squash": 133, "squeez": [55, 176, 177, 178, 182], "squeezebackward0": 176, "squeezebackward1": 177, "squirrel": 133, "squirtl": 171, "sr": 167, "src": 183, "srp": 122, "ssh": 174, "ssl": 131, "sss": 31, "st": 57, "st_size": [181, 182, 183], "stabil": [133, 202], "stabl": [175, 176], "stack": [21, 55, 80, 81, 133, 140, 141, 148, 156, 157, 158, 161, 177, 182, 189, 201, 202, 203, 205], "stackexchang": 6, "stackoverflow": 174, "stackplot": 151, "staff": [133, 141], "stage": [133, 136, 137, 147, 178, 181, 182, 191, 203], "stai": [133, 135, 136, 144, 148, 161, 164, 174, 177, 182, 183, 191, 214], "staid": 133, "stair": 182, "stakehold": 204, "stamp": [203, 204], "stanc": 143, "stand": [22, 70, 110, 133, 136, 175, 176, 177, 178, 181, 182, 183, 199], "standard": [0, 26, 33, 73, 74, 82, 84, 86, 92, 96, 121, 125, 130, 133, 138, 140, 141, 153, 154, 157, 160, 163, 170, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 199, 201, 207], "standard_scal": 207, "standardized_industri": 138, "standardtransform": [178, 184, 185], "standarized_industri": 138, "standingtackl": 150, "standpoint": 181, "standup": 139, "stanford": [0, 144], "stantler": 171, "stanza": 143, "star": [39, 49, 99, 180], "staraptor": 171, "starat": 171, "staravia": 171, "stare": 137, "starli": 171, "starmi": 171, "start": [0, 1, 7, 8, 21, 22, 24, 36, 37, 39, 44, 45, 49, 50, 54, 55, 56, 68, 70, 73, 76, 83, 85, 90, 91, 92, 94, 96, 98, 110, 111, 120, 121, 122, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 147, 148, 153, 155, 157, 160, 161, 162, 163, 164, 166, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 197, 198, 199, 200, 201, 203, 205, 210, 213, 214], "start_color": 131, "start_dim": [177, 178, 182, 184, 185], "start_index": 26, "start_tim": [178, 180, 183, 184, 185], "startindex": 155, "startofweek": 122, "startswith": 54, "startup": [121, 122, 133, 135, 136, 144, 147], "startupidea": 135, "startuplesson": 136, "staryu": 171, "stat": [157, 181, 182, 189, 191, 194, 196, 200, 201, 203, 204], "stat_meth": 108, "state": [1, 27, 37, 83, 103, 113, 121, 122, 133, 134, 136, 142, 148, 150, 154, 175, 176, 177, 178, 179, 180, 182, 183, 189, 194, 198, 199], "state_dict": [177, 179, 181, 183, 184, 185], "statement": [24, 37, 52, 55, 57, 61, 68, 70, 72, 74, 81, 96, 97, 100, 102, 103, 104, 121, 137, 143, 155, 205], "static": [108, 121, 133], "staticmethod": 108, "station": 133, "statist": [2, 5, 9, 13, 53, 133, 172, 183, 189, 191, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 212, 213], "statistician": 204, "statsmodel": [195, 200], "statu": [122, 131, 135, 143, 147, 176, 189], "status_cod": [133, 140, 141], "std": [104, 153, 157, 158, 160, 180, 181, 182, 183, 189, 194, 196, 201, 205], "std1": 104, "std2": 104, "std3": 104, "stderr": 191, "stdev": 82, "stdout": 86, "steadi": 197, "steak": [178, 179, 180, 181, 182, 183, 184, 185], "steak_sushi": 182, "steam": 133, "steamboat": 133, "steel": [29, 171, 189], "steelix": 171, "steelixmega": 171, "steep": [133, 136], "steer": [0, 141], "stem": [178, 183], "steno": 146, "step": [1, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 29, 39, 49, 54, 55, 56, 70, 80, 83, 96, 98, 104, 122, 133, 135, 136, 139, 143, 147, 148, 153, 157, 160, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 204], "step3": 96, "step_siz": 49, "steph": 146, "stephen": 204, "stephsmithio": 143, "stepsiz": 155, "stern": 133, "stetement": 47, "steve": [133, 135], "stick": [136, 174, 176, 177, 180, 181, 182, 183, 200, 201, 203], "still": [0, 21, 30, 31, 38, 54, 86, 91, 103, 104, 108, 121, 122, 133, 135, 136, 137, 140, 141, 161, 163, 164, 167, 170, 174, 175, 176, 177, 178, 180, 182, 183, 190, 191, 193, 201, 202, 203, 204], "sting": 70, "stipend": 133, "stir": [121, 134], "stochast": [175, 176, 182, 203], "stock": [0, 133, 141, 195, 200, 201], "stockprice_data": 160, "stockx": 146, "stoke": 205, "stone": [133, 176, 177], "stop": [0, 41, 49, 50, 51, 54, 55, 56, 70, 73, 76, 80, 83, 131, 133, 136, 137, 153, 157, 160, 170, 178, 181, 183, 203], "stopiter": [36, 37, 51, 72], "storag": [103, 136, 174, 178, 182, 183], "store": [26, 36, 37, 38, 40, 49, 51, 53, 54, 55, 62, 66, 70, 74, 78, 85, 92, 95, 96, 98, 100, 103, 105, 121, 122, 133, 135, 136, 140, 141, 143, 146, 147, 156, 160, 161, 162, 168, 174, 175, 177, 178, 179, 180, 181, 182, 184, 190, 195, 203], "store_and_fwd_flag": 203, "storefront": 133, "stori": [0, 121, 130, 133, 135, 143, 146, 147, 177, 183, 202], "storm": 133, "stoutland": 171, "stove": 133, "str": [11, 16, 26, 41, 51, 54, 55, 63, 70, 72, 76, 86, 94, 95, 96, 104, 105, 106, 121, 122, 131, 133, 140, 142, 145, 150, 167, 171, 177, 178, 179, 180, 181, 183, 184, 185, 200, 201], "str1": 54, "str2": 54, "str3": 54, "str4": 54, "straight": [5, 21, 72, 121, 133, 174, 175, 177, 182, 183, 185, 194, 206], "straightforward": [121, 122, 143, 192], "strang": [133, 135, 139, 182], "stranger": 133, "stranieri": 133, "strat": 54, "strateg": [140, 141], "strategi": [121, 135, 136, 146, 147, 160, 213], "strawberri": [93, 104], "streak": 133, "stream": [70, 86, 131, 133, 213, 214], "stream_error": 133, "streaming_stdout": 134, "streamingstdoutcallbackhandl": 134, "streamlin": 186, "streamlit": [147, 183], "street": [49, 121, 133], "strength": 8, "stress": [133, 193], "stretch": 133, "strftime": [24, 63, 64, 65, 66, 68, 69, 140, 141, 181], "strict": [133, 174], "strictli": [133, 191], "stride": [177, 178, 179, 182, 184, 185], "stride_trick": 158, "strike": 136, "string": [24, 36, 37, 38, 40, 45, 51, 53, 56, 58, 60, 64, 65, 66, 67, 70, 71, 72, 73, 76, 81, 91, 92, 95, 97, 103, 104, 106, 122, 130, 133, 134, 135, 136, 138, 140, 141, 142, 143, 146, 147, 160, 161, 167, 169, 178, 181, 183, 192, 193, 205], "string1": 54, "string2": 54, "string_process": 122, "stringifi": [70, 131], "stringmethod": 91, "stringprocessingtest": 122, "stringprocessor": 122, "strip": [54, 122, 133, 135, 138, 150, 167, 183, 189, 192, 197, 199, 202, 203, 208], "strip_data": 198, "stripe": 147, "stripplot": [189, 192, 197, 198, 199, 203], "strive": 156, "strlist": 200, "stroke": [133, 172], "stroll": 143, "strong": [29, 133, 140, 141, 143], "stronger": 194, "strongest": 133, "strongli": [21, 182], "strptime": [24, 62, 69], "struck": 133, "structur": [1, 10, 18, 20, 22, 26, 39, 44, 49, 55, 70, 72, 85, 86, 103, 110, 122, 125, 133, 136, 138, 139, 142, 143, 147, 149, 150, 151, 160, 161, 162, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 185, 186, 189, 197, 205, 212], "structured_data": 138, "structuredoutputpars": [121, 122, 138], "struggl": [143, 198], "strung": [121, 122], "stuck": [133, 136, 182, 200], "stud": 103, "stud1": 161, "stud2": 161, "stud3": 161, "stud_ag": 167, "stud_mark": 167, "stud_nam": 167, "student": [49, 96, 103, 104, 121, 133, 135, 143, 146, 160, 161, 163, 164, 168, 169, 170, 197, 198, 201, 205], "student_count": 104, "student_data": 168, "student_df": [160, 161, 163, 164, 165, 166, 167, 169, 170], "student_dict": [160, 161, 163, 164, 165, 166, 167, 169, 170], "student_id": 201, "student_nam": 49, "studentdf": 168, "studentdict": 168, "students_enrol": 200, "studentstud": 104, "studi": [25, 28, 37, 89, 103, 122, 133, 135, 146, 157, 175, 180, 194, 203, 205, 206, 212], "studio": [133, 146], "studnet": 104, "stuff": [105, 122, 135, 136, 137, 139, 146], "stuffdocumentschain": [133, 148], "stumbl": 133, "stunfisk": 171, "stunki": 171, "style": [91, 122, 133, 134, 140, 141, 143, 146, 148, 150, 157, 160, 161, 164, 167, 171, 172, 175, 177, 179, 180, 184, 185, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "sub": [38, 56, 71, 76, 80, 85, 86, 153, 201, 203, 205], "sub_doc": 136, "subalpin": 133, "subarrai": 155, "subcategori": 201, "subclass": [73, 86, 105, 175, 176, 177, 178, 182], "subdirectori": [71, 85, 178], "subdiretori": 178, "subdivid": 203, "subgroup": 41, "subject": [121, 131, 133, 141, 143, 174, 191, 203], "sublim": 133, "submit": 133, "subplot": [9, 11, 17, 18, 19, 20, 27, 32, 113, 176, 177, 178, 182, 183, 190, 191, 200, 202, 204, 205], "subplot_kw": 205, "subplots_adjust": [17, 18, 19, 20], "subprocess": [178, 184, 185], "subregion": 122, "subscript": [91, 94], "subsect": [184, 185], "subsequ": [1, 36, 55, 177, 178, 182, 185], "subset": [1, 12, 17, 18, 19, 20, 68, 133, 135, 143, 146, 160, 165, 166, 178, 180, 181, 193, 204, 205, 212], "subsistut": 122, "substack": 174, "substanti": 146, "substitut": [41, 105], "substr": [41, 54], "substract": [97, 153, 174], "subtli": 133, "subtract": [28, 53, 76, 97, 106, 142, 153, 156, 174], "succe": [122, 144, 147], "success": [1, 37, 41, 121, 122, 133, 136, 140, 141, 146, 147, 148, 176, 178, 183, 203], "successful": [15, 16, 26], "successful_request": [140, 141], "successfulli": [40, 73, 147, 175, 181, 183, 198, 200], "succinct": 135, "sudden": [73, 147], "suddenli": [133, 180], "sudowoodo": 171, "suffic": 133, "suffici": [133, 135], "suffix": [121, 122], "sugar": [39, 134], "suggest": [61, 72, 121, 122, 133, 135, 136, 140, 141, 143, 144, 146, 175, 181, 182, 193, 199, 205], "suhail": 143, "suhsi": 181, "suicun": 171, "suit": [100, 103, 121, 137, 144, 160, 176, 178, 179, 181, 182, 183, 192, 197, 198, 203], "suitabl": [37, 54, 193, 201], "sulli": 182, "sum": [4, 8, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 37, 38, 42, 49, 50, 53, 58, 61, 76, 79, 82, 84, 86, 87, 91, 95, 106, 122, 133, 151, 153, 156, 157, 171, 172, 176, 178, 179, 183, 184, 185, 196, 199, 201], "sum1": 96, "sum_": [29, 31, 32], "sum_1": 33, "sum_al": 73, "sum_all_num": 79, "sum_i": [31, 34], "sum_j": 31, "sum_numb": 38, "sum_of_five_num": 73, "sum_of_kd": 196, "sum_of_numb": 76, "sum_two_numb": 76, "sumbackward0": 176, "summar": [38, 86, 125, 131, 140, 141, 144, 146, 148, 149, 161, 176, 182, 189, 198], "summari": [86, 121, 131, 133, 135, 144, 146, 147, 148, 150, 178, 181, 183, 199, 200, 201, 204], "summaris": [174, 178], "summary_chain": 135, "summary_list": 135, "summary_output_opt": 148, "summary_prompt": 135, "summaryif": 133, "summat": [30, 38, 156], "summer": [133, 195], "summer_r": 195, "summit": 133, "sun": [41, 62, 63, 133, 193, 196, 198, 199, 200, 201, 205], "sundai": [62, 63], "sunflora": 171, "sung": 183, "sunkern": 171, "sunni": [6, 133, 142], "sunroof": 104, "sunshin": 143, "super": [74, 103, 108, 121, 122, 131, 133, 146, 157, 164, 167, 175, 176, 177, 178, 179, 182, 184, 185, 205], "superclass": 105, "superhead": 205, "superintellig": 143, "superior": 1, "supervis": [8, 19, 20, 176, 212], "suppli": [71, 73, 122, 133, 167], "support": [0, 7, 16, 26, 49, 51, 53, 55, 56, 58, 70, 76, 84, 92, 93, 94, 96, 100, 105, 111, 121, 122, 130, 131, 133, 134, 135, 136, 143, 144, 146, 148, 156, 179, 180, 181, 192, 193, 196, 201, 203, 205, 210], "suppos": [37, 40, 42, 44, 51, 59, 61, 82, 85, 86, 103, 106, 108, 121, 133, 156, 161, 162, 166, 167, 168, 169, 170, 203], "suppport": [11, 15], "supress": 164, "suptitl": [32, 178, 182, 196, 200, 205], "sure": [5, 26, 27, 41, 42, 73, 78, 113, 121, 122, 130, 132, 133, 135, 136, 140, 141, 142, 143, 144, 148, 153, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 190, 193, 197, 199, 200, 201, 203, 213, 214], "surfac": [76, 133, 174, 183], "surfaceaxi": 12, "surnam": [79, 86, 163, 170], "surpass": 133, "surplu": 133, "surpris": [133, 136, 183], "surreptiti": 133, "surround": [1, 37, 91, 93, 133, 146], "surskit": 171, "survei": 192, "surviv": [133, 199, 201], "suryansh": [5, 6], "susan": 121, "sushi": [178, 179, 180, 181, 182, 183, 184, 185], "susmelj": 179, "suspect": 199, "suspend": [67, 68], "suspens": [68, 143], "suspicion": [9, 133], "sustain": [0, 143], "sutton": 181, "suv": 133, "svd": [28, 158], "svg": 122, "sw": 73, "swablu": 171, "swadloon": 171, "swalot": 171, "swampert": 171, "swampertmega": 171, "swampi": 139, "swanna": 171, "swap": [54, 76, 121, 122, 138, 143, 146, 147, 174, 182], "swapcas": 54, "swarm": [189, 199, 202], "swarmplot": [189, 192, 197, 198, 199], "swartz": 133, "swe": 122, "sweatystartup": 143, "sweden": [12, 14, 73], "sweep": 133, "sweet": [51, 135, 148], "swellow": 171, "swelter": 133, "swim": [103, 105, 133], "swing": 143, "swinub": 171, "swirlix": 171, "swiss": 133, "switch": [133, 135, 137, 140, 141, 146, 148, 174, 190, 194, 203], "switzerland": [12, 14, 122, 194], "swoobat": 171, "sx": 54, "sy": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 61, 72, 73, 85, 86, 96, 133, 174, 181], "syantax": 55, "sylveon": 171, "symbol": [21, 30, 31, 39, 41, 42, 54, 82, 86, 90, 91, 92, 97, 106, 122, 143, 174, 182], "symmetr": 49, "symmetri": 8, "symmetric_differ": 58, "symmetric_difference_upd": 58, "synaps": 8, "sync": 153, "syntact": [39, 76], "syntax": [22, 24, 37, 39, 40, 41, 54, 55, 56, 57, 58, 71, 73, 76, 81, 86, 90, 95, 96, 100, 103, 104, 105, 110, 143, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 190, 202, 203, 205], "syntaxerror": [54, 72, 79, 90, 92], "syntaxwarn": 97, "synthet": [136, 205], "syslog": 141, "system": [8, 19, 20, 26, 33, 36, 51, 53, 67, 70, 72, 82, 91, 106, 121, 122, 133, 134, 143, 146, 148, 175, 178, 183, 212], "system_message_prompt": [132, 134, 148], "system_message_prompt_combin": 148, "system_message_prompt_map": [146, 148], "system_templ": [132, 146], "systemat": 135, "systemerror": 72, "systemexit": [72, 131], "systemmessag": [121, 134, 140, 148], "systemmessageprompttempl": [132, 134, 146, 148], "t": [0, 8, 11, 12, 18, 19, 20, 27, 29, 33, 34, 40, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 63, 65, 67, 70, 73, 76, 78, 79, 82, 85, 89, 92, 93, 94, 96, 100, 103, 104, 105, 106, 108, 113, 121, 122, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 153, 156, 157, 158, 160, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "t1": [56, 61, 65, 67, 68], "t10": 192, "t10k": 177, "t2": [56, 61, 65, 68], "t3": [56, 61, 65], "t4": [56, 61], "t5": 61, "t6": 61, "t_i": 29, "tab": [44, 54, 72, 91, 93, 135, 183, 192], "tab10": 195, "tab10_r": 195, "tab20": 195, "tab20_r": 195, "tab20b": 195, "tab20b_r": 195, "tab20c": 195, "tab20c_r": 195, "taberror": 72, "tabl": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 49, 51, 53, 62, 63, 82, 97, 106, 121, 122, 133, 146, 160, 161, 168, 174, 175, 176, 177, 181, 197, 206], "table_nam": 160, "tableau": [192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "tableau_20": [194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "tablespoon": 121, "tablet": 143, "tabul": [55, 57, 106], "tabular": [70, 160, 169, 170, 176, 183], "tacit": 133, "tackl": [1, 140, 193], "taco": 183, "tag": [6, 26, 70, 121, 141, 146], "tag_scalar_dict": 181, "taggar": 133, "taho": 133, "tail": [8, 160, 171, 172, 203], "taillow": 171, "take": [0, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 38, 39, 41, 42, 45, 49, 50, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 86, 92, 96, 100, 103, 104, 105, 108, 121, 122, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 156, 160, 161, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206], "taken": [70, 133, 139, 146, 175, 183, 202, 203], "talk": [67, 68, 121, 122, 133, 135, 136, 142, 143, 144, 146, 147, 148, 174, 176, 177, 182, 183, 190, 195, 199, 205], "tall": 122, "talli": 205, "talonflam": 171, "tamper": [92, 103], "tan": [82, 84], "tangela": 171, "tangent": [82, 84], "tangrowth": 171, "tanh": [82, 84], "tap": 204, "tar": 82, "targ_dir": 178, "targ_imag": 178, "targ_image_adjust": 178, "targ_label": 178, "targ_sampl": 178, "target": [1, 6, 15, 16, 17, 18, 68, 100, 140, 141, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 192], "target_dir": [179, 181, 182, 183, 184, 185], "target_dir_path": [179, 184, 185], "target_directori": 178, "target_fil": 181, "target_imag": 178, "target_image_pr": [178, 180], "target_image_pred_label": [178, 180], "target_image_pred_prob": [178, 180], "target_transform": [177, 178, 184, 185], "tasavalta": 122, "taser": 189, "task": [0, 1, 8, 19, 20, 21, 26, 49, 50, 55, 57, 58, 64, 67, 68, 73, 76, 80, 82, 87, 89, 97, 100, 106, 121, 122, 132, 135, 142, 143, 144, 146, 176, 177, 178, 180, 182, 192, 202, 203, 212], "tast": [121, 136, 148], "tau": 82, "taught": [0, 133], "tauro": 171, "tax": 133, "taxi": [133, 203], "tbd": 122, "tchapter": 54, "tchp": 54, "tdatatyp": 54, "te": 41, "tea": 136, "teach": [1, 39, 41, 54, 133, 158, 177, 186], "teacher": [41, 54, 70, 133], "teal": 192, "team": [0, 79, 121, 122, 140, 141, 144, 148, 150, 178, 179, 181, 182, 183, 203, 205], "teas": 182, "tech": [0, 132, 133, 140, 141, 147], "techcrunch": 144, "technic": [0, 36, 108, 122, 133, 136, 144, 182, 213, 214], "technician": 141, "techniqu": [0, 1, 8, 19, 20, 38, 82, 132, 146, 147, 176, 178, 180, 181, 182, 183, 197, 198, 203, 204, 212, 213, 214], "technolog": 143, "technologi": [0, 1, 122, 130, 133, 136, 140, 141, 143, 147, 148, 174, 177], "teddiursa": 171, "tediou": [133, 178], "tell": [45, 46, 51, 70, 73, 89, 96, 121, 122, 133, 135, 136, 141, 142, 143, 148, 155, 174, 175, 176, 177, 178, 181, 182, 183, 191], "temp": [76, 92, 138, 174], "temp_convert": 73, "temperatur": [40, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148], "templ": 146, "templat": [122, 136, 138, 143, 146, 147, 148], "template_format": 134, "tempor": 203, "temporari": [105, 133, 200], "temporarili": 190, "tempt": [133, 183], "ten": [38, 49, 76, 133, 151, 183], "ten_zero": 174, "tenac": 133, "tend": [29, 105, 121, 133, 139], "tendenc": [189, 193, 197, 199, 200, 201], "tender": 134, "tension": 143, "tensor": [28, 175, 177, 178, 179, 181, 182, 184, 185], "tensor_a": 174, "tensor_b": 174, "tensor_back_on_cpu": 174, "tensor_c": 174, "tensor_d": 174, "tensor_float16": 174, "tensor_int8": 174, "tensor_on_gpu": 174, "tensordot": 158, "tensorflow": [8, 153, 176, 181, 212], "tentacool": 171, "tentacruel": 171, "tepig": 171, "terabyt": 205, "term": [5, 6, 31, 37, 39, 80, 87, 121, 122, 133, 135, 139, 144, 148, 174, 176, 177, 180, 182, 183, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205], "termin": [36, 37, 49, 50, 51, 72, 73, 130, 133, 153, 179, 183], "terminologi": 146, "terrain": 195, "terrain_r": 195, "terrakion": 171, "terri": 133, "terribli": 133, "terrif": 183, "terrifi": 181, "territori": [133, 194], "tesla": [174, 183], "test": [0, 13, 15, 16, 26, 41, 45, 46, 50, 51, 70, 71, 72, 73, 78, 82, 89, 97, 104, 122, 133, 136, 137, 142, 143, 171, 174, 179, 181, 182, 184, 185, 201, 203], "test1": 82, "test_1": [70, 71], "test_2": [70, 71], "test_acc": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "test_accuraci": [178, 179, 184, 185], "test_cost": [12, 14], "test_data": [12, 14, 17, 18, 19, 20, 175, 176, 177, 178, 179, 183, 184, 185], "test_data_custom": 178, "test_data_food101_20_perc": 183, "test_data_path": 183, "test_data_simpl": 178, "test_dataload": [177, 178, 179, 180, 181, 182, 183, 184, 185], "test_dataloader_custom": 178, "test_dataloader_effnetb2": 183, "test_dataloader_food101_20_perc": 183, "test_dataloader_pretrain": 182, "test_dataloader_simpl": 178, "test_dataloader_vit": 183, "test_dir": [178, 179, 180, 181, 182, 183, 184, 185], "test_express": 50, "test_imag": 177, "test_image01": 179, "test_image02": 179, "test_image_01": 185, "test_image_02": 185, "test_image_path_list": [180, 181], "test_image_path_sampl": [180, 181], "test_image_through_conv": 177, "test_image_through_conv_and_max_pool": 177, "test_label": [175, 176, 177], "test_logit": 176, "test_loss": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "test_loss_valu": 175, "test_modul": 82, "test_pr": [175, 176, 177], "test_precis": [17, 18, 19, 20], "test_pred_dict": 183, "test_pred_label": [178, 179, 184, 185], "test_pred_logit": [178, 179, 184, 185], "test_predict": [12, 14], "test_predictions_t": [12, 14], "test_replace_non_letters_non_numbers_with_whitespac": 122, "test_sampl": 177, "test_siz": 176, "test_step": [177, 181], "test_str": 41, "test_transform": 178, "testcas": 122, "tester": 41, "testfil": [71, 73], "tex": [27, 113], "text": [7, 21, 22, 23, 29, 34, 41, 46, 54, 70, 76, 86, 110, 111, 112, 130, 131, 132, 133, 134, 137, 139, 143, 144, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 194, 196, 200, 201, 203, 205, 209, 210, 212], "text_1": 70, "text_embed": 121, "text_splitt": [121, 122, 133, 135, 136, 137, 139, 144, 145, 146, 147, 148], "textbook": [133, 182], "textcoord": 201, "textil": 133, "textiobas": 70, "textiowrapp": 70, "textload": [121, 122, 137], "textrequestswrapp": 122, "textual": [54, 64], "textwrap": 54, "th": [2, 5, 6, 13, 41, 54], "than": [0, 5, 9, 11, 12, 17, 18, 19, 20, 24, 26, 37, 38, 41, 42, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 59, 61, 62, 68, 74, 80, 81, 82, 84, 92, 93, 94, 96, 97, 98, 100, 104, 105, 106, 108, 121, 122, 133, 135, 136, 140, 143, 146, 148, 153, 155, 156, 160, 161, 163, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 195, 197, 199, 200, 201, 202, 203, 205], "thank": [96, 133, 140, 141, 144, 148, 175, 176, 177, 180, 181, 182, 183, 193], "that_particular_class": 201, "that_particular_class_men": 201, "thaw": 133, "thefuzz": 122, "thei": [0, 1, 8, 9, 12, 14, 19, 20, 21, 36, 37, 39, 40, 44, 46, 48, 51, 53, 54, 55, 56, 57, 58, 70, 72, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 90, 91, 93, 94, 96, 97, 98, 100, 103, 104, 108, 110, 121, 122, 131, 132, 133, 135, 136, 137, 140, 141, 144, 146, 147, 148, 154, 156, 160, 165, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205], "theirs": [14, 37, 133], "them": [0, 9, 15, 16, 17, 18, 19, 20, 21, 26, 34, 36, 38, 53, 54, 55, 56, 57, 58, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 84, 92, 96, 97, 98, 103, 104, 105, 106, 120, 122, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 157, 160, 162, 174, 175, 176, 177, 178, 180, 181, 182, 189, 190, 192, 194, 195, 197, 198, 200, 203, 205, 206, 213, 214], "theme": [143, 146, 190, 192], "themselv": [41, 133, 135, 136, 182, 212], "theologi": 121, "theorem": [1, 133], "theoret": [0, 30, 31, 36, 133], "theori": [37, 121, 133, 135, 137, 199, 202], "therefor": [40, 41, 54, 100, 103, 178, 183], "thermodynam": 40, "thesi": 133, "theta": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 34], "theta_index": 16, "theta_t": [12, 13, 14], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213, 214], "thick": [190, 200, 201], "thicken": 190, "thimbl": [131, 148], "thimbleai": [131, 148], "thin": [133, 134, 135, 200], "thing": [0, 7, 21, 26, 29, 37, 39, 44, 49, 51, 54, 59, 71, 82, 91, 98, 104, 105, 108, 111, 121, 122, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 148, 154, 157, 160, 174, 175, 177, 178, 180, 181, 182, 183, 191, 192, 193, 199, 205, 210], "think": [21, 66, 92, 103, 104, 121, 122, 131, 133, 135, 136, 138, 140, 141, 143, 146, 147, 148, 154, 174, 175, 176, 177, 178, 180, 182, 183, 190, 193, 199, 201, 202], "thinker": 133, "thinnest": 133, "third": [21, 26, 54, 61, 82, 85, 94, 96, 105, 121, 133, 142, 143, 150, 157, 160, 163, 174, 175, 183, 193, 199, 201], "third_respons": 142, "thirti": [54, 133], "this_is_a_long_vari": 90, "thise": [135, 198], "thorn": 133, "thorugh": 177, "those": [0, 21, 26, 44, 68, 77, 81, 82, 83, 87, 104, 110, 121, 122, 132, 133, 135, 136, 143, 146, 147, 148, 158, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 190, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "though": [19, 20, 54, 73, 77, 86, 105, 121, 122, 133, 136, 156, 160, 161, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 198, 200, 201, 202, 203, 204, 205], "thought": [44, 121, 122, 131, 133, 135, 136, 140, 141, 143, 177, 183, 192, 198, 199, 200, 201], "thousand": [40, 133, 141, 143, 174, 177], "thread": [0, 67, 68, 82, 122, 133, 134, 135, 183], "threat": 189, "threat_level": 189, "threaten": 189, "three": [4, 8, 10, 11, 15, 16, 19, 20, 40, 41, 42, 44, 49, 50, 54, 59, 61, 70, 78, 79, 92, 95, 96, 98, 104, 105, 108, 121, 122, 133, 135, 136, 142, 146, 147, 160, 163, 166, 167, 168, 174, 175, 176, 177, 178, 180, 182, 183, 189, 193, 197, 198, 199, 203, 204, 205, 206], "thresh": [160, 166], "threshold": [2, 8], "thrice": 199, "throguh": 182, "throh": 171, "through": [0, 1, 9, 17, 18, 19, 20, 37, 49, 50, 51, 53, 59, 73, 79, 80, 106, 121, 122, 133, 134, 135, 137, 140, 141, 142, 147, 148, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205, 206, 212, 214], "throughout": [122, 135, 174, 178, 179, 181, 182, 183, 184, 185, 191, 193, 197, 204], "throughput": [9, 10], "throughput_from": 9, "throughput_grid": 9, "throughput_rang": 9, "throughput_to": 9, "throw": [26, 73, 77, 100, 161, 163, 164, 167, 169, 181, 183], "thu": [11, 29, 40, 49, 50, 54, 67, 73, 91, 100, 103, 108, 133, 180, 182, 183, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206], "thumb": [175, 176, 178, 180, 182, 198, 201], "thump": 136, "thundurusincarn": 171, "thundurustherian": 171, "thur": [198, 201], "thursdai": [121, 133, 199], "ti": [70, 143, 193], "tick": [182, 183, 190, 195, 196, 202, 204, 205], "tick_param": [17, 18, 19, 20, 183], "ticket": 201, "ticklabel_format": 200, "tickmark": 150, "tide": 133, "tidi": [193, 197, 198, 202], "tier": [143, 182], "tight": [32, 133, 181], "tightli": [122, 133, 194], "tile": 156, "till": [49, 50, 51, 70, 94, 133, 161, 164, 167, 170, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205], "tim": 189, "timberlin": 133, "timburr": 171, "time": [0, 1, 6, 8, 21, 26, 32, 33, 36, 37, 39, 48, 49, 50, 51, 53, 54, 56, 63, 77, 80, 81, 82, 90, 91, 92, 98, 100, 104, 105, 106, 108, 121, 122, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 150, 156, 160, 164, 165, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 212], "time_for_pr": 183, "time_left_for_newyear": 65, "time_per_pred_cpu": 183, "time_str": 67, "timedelta": 65, "timedelta64": 158, "timeit": [177, 178, 180, 183, 184, 185], "timeout": [131, 133, 135, 174], "timeout_valu": 131, "timepoint": 203, "timer": [177, 178, 180, 183, 184, 185], "times2": 33, "times3": 38, "times5": 38, "timescal": 183, "timeseri": 208, "timestamp": [24, 69, 181], "timezon": 122, "timm": [177, 180, 182], "timplay": 26, "tine": 180, "ting": 41, "tini": [133, 200], "tinker": [122, 147], "tinyvgg": [177, 179, 180, 187], "tip": [41, 143, 180, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205], "tire": [133, 197], "tirtouga": 171, "titan": [174, 180, 189, 191, 199, 203, 205], "titl": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 135, 136, 140, 141, 142, 150, 151, 175, 176, 177, 178, 180, 182, 183, 193, 196, 205, 206], "title_text": 177, "tk": 26, "tkinter": 82, "tl": 121, "tlc": 203, "tld": 122, "tldr": 122, "tm_hour": 67, "tm_isdst": 67, "tm_mdai": 67, "tm_min": 67, "tm_mon": 67, "tm_sec": 67, "tm_wdai": 67, "tm_ydai": 67, "tm_year": 67, "tmdb": 130, "tmp": 174, "to__email": 131, "to_csv": [160, 171, 172], "to_dict": 160, "to_excel": [160, 171], "to_fahreheit": 40, "to_fahrenheit": 40, "to_json": 160, "to_messag": [122, 132, 134, 138], "to_sql": 160, "to_str": 141, "to_usernam": 131, "todai": [1, 65, 66, 121, 122, 133, 135, 136, 137, 140, 141, 143, 146, 147, 148, 191, 194, 198, 199, 200, 201, 202, 203, 204], "togekiss": 171, "togepi": 171, "toget": 171, "togeth": [8, 9, 19, 20, 37, 54, 92, 100, 106, 121, 122, 133, 136, 138, 143, 144, 146, 147, 156, 179, 181, 183, 185, 194, 197, 199, 203], "toi": [146, 176, 177, 189], "toilet": 146, "toiletri": 136, "token": [122, 133, 135, 140, 141, 143, 144, 146, 147, 148], "told": [51, 133, 136, 142, 143, 194], "toler": 177, "tolist": [150, 151, 200], "tom": 133, "tomato": [73, 97, 121], "tomb": 133, "tomorrow": 121, "ton": [54, 82, 121, 122, 135, 143, 147], "tone": [125, 132, 149], "tone_sampl": 143, "too": [0, 5, 6, 21, 39, 72, 74, 97, 98, 121, 122, 133, 134, 135, 136, 143, 146, 148, 174, 175, 176, 177, 178, 180, 181, 182, 183, 198], "took": [0, 39, 121, 133, 143, 177, 178, 180, 183, 184, 185], "tool": [0, 41, 86, 110, 122, 131, 135, 140, 141, 142, 144, 146, 148, 150, 151, 153, 160, 171, 172, 176, 181, 182, 183, 194, 203, 204, 205, 212], "tool_input": 131, "tool_nam": 130, "toolchain": 144, "toolkit": [26, 122, 131, 135, 174], "tooth": 151, "toothpastesalesdata": 151, "top": [7, 9, 17, 18, 19, 20, 92, 111, 121, 130, 134, 135, 143, 144, 147, 148, 153, 155, 156, 160, 174, 176, 177, 179, 182, 183, 185, 190, 192, 193, 194, 199, 200, 201, 203, 205, 210], "topbar": 201, "topic": [0, 54, 79, 122, 133, 135, 136, 143, 147, 149, 151, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 191, 192, 195, 197, 199, 200, 201, 203, 204, 205, 213, 214], "topic_nam": 146, "topic_timestamp": 146, "topics_found": 146, "topics_structur": 146, "toprow": 163, "torch": [174, 176, 177, 178, 179, 180, 181, 183, 184, 185], "torch_transformer_encoder_lay": 182, "torchaudio": [178, 180, 181, 182, 183], "torchdata": 178, "torchic": 171, "torchinfo": [181, 182, 183], "torchmetr": [176, 177], "torchmetrics_accuraci": 176, "torchrec": [178, 180], "torchscript": 183, "torchserv": 183, "torchtext": [178, 180], "torchvis": [177, 179, 181, 183, 184, 185], "torkoal": 171, "tornadusincarn": 171, "tornadustherian": 171, "toronto": 122, "torterra": 171, "toss": 134, "total": [8, 11, 15, 21, 49, 50, 53, 61, 76, 79, 81, 94, 104, 106, 122, 131, 135, 136, 140, 141, 145, 154, 160, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205], "total_bil": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "total_cost": [140, 141], "total_list1": 145, "total_list2": 145, "total_profit": 151, "total_second": 61, "total_stud": 200, "total_tim": 177, "total_token": [140, 141], "total_train_time_model_0": 177, "total_train_time_model_1": 177, "total_train_time_model_2": 177, "total_women_per_class": 201, "totensor": [177, 178, 179, 180, 181, 182, 184, 185], "totodil": 171, "touch": [122, 133, 157, 194, 205], "tough": [122, 182], "tourist": 133, "toward": [121, 133, 135, 139, 143, 175, 178, 182, 183], "town": [121, 146, 199, 201], "toxicroak": 171, "toyotadf": 172, "tp": 2, "tpg": 122, "tpuv3": 182, "tpython": 54, "tqdm": [137, 177, 178, 179, 181, 183, 184, 185], "tqdmexperimentalwarn": 137, "tr": 133, "trace": [133, 156, 181, 193, 203], "traceback": [36, 37, 38, 39, 40, 42, 50, 54, 55, 56, 57, 58, 63, 68, 70, 72, 73, 74, 77, 78, 79, 80, 82, 91, 93, 94, 95, 96, 97, 103, 104, 105, 106, 108, 131, 133, 155, 164, 167, 169, 174, 177, 178, 198, 203], "track": [37, 121, 133, 142, 143, 144, 148, 174, 175, 178, 180, 182, 183, 188, 199, 201, 203], "tracker": 181, "tractor": 174, "tradeoff": [178, 180], "tradit": [1, 120, 133, 134, 179, 184, 185], "tradition": 142, "trail": [53, 54, 56, 121, 122, 148], "train": [1, 2, 4, 5, 8, 10, 120, 121, 133, 146, 147, 174, 186, 187], "train_acc": [177, 178, 179, 180, 181, 182, 183, 184, 185], "train_accuraci": [178, 179, 184, 185], "train_cost": [12, 14], "train_data": [12, 14, 17, 18, 19, 20, 175, 176, 177, 178, 179, 183, 184, 185], "train_data_aug": 178, "train_data_custom": 178, "train_data_food101_20_perc": 183, "train_data_simpl": 178, "train_dataload": [177, 178, 179, 180, 181, 182, 183, 184, 185], "train_dataloader_10_perc": 181, "train_dataloader_20_perc": 181, "train_dataloader_aug": 178, "train_dataloader_custom": 178, "train_dataloader_effnetb2": 183, "train_dataloader_food101_20_perc": 183, "train_dataloader_pretrain": 182, "train_dataloader_simpl": 178, "train_dataloader_vit": 183, "train_dir": [178, 179, 180, 181, 182, 183, 184, 185], "train_dir_10_perc": 181, "train_dir_20_perc": 181, "train_features_batch": 177, "train_image01": 179, "train_image_01": 185, "train_image_02": 185, "train_label": [175, 176], "train_labels_batch": 177, "train_loss": [177, 178, 179, 180, 181, 182, 183, 184, 185], "train_loss_valu": 175, "train_precis": [17, 18, 19, 20], "train_split": [175, 176], "train_step": [177, 181], "train_test_split": 176, "train_time_end_model_2": 177, "train_time_end_on_cpu": 177, "train_time_end_on_gpu": 177, "train_time_start_model_2": 177, "train_time_start_on_cpu": 177, "train_time_start_on_gpu": 177, "train_transform": 178, "train_transform_trivial_aug": 178, "trainabl": [178, 180, 181, 182, 183], "trainbl": 183, "traingin": 13, "training_tim": 177, "traininggggggg": 183, "trainint": [13, 14], "trajectori": 133, "tranform": [54, 178], "tranquil": 171, "transact": [6, 15, 16, 17, 18, 176, 183], "transax": 204, "transcript": [122, 125, 146, 147, 149], "transcript_path": 146, "transcript_subsection_charact": 146, "transfer": [37, 49, 50, 51, 133, 176, 177, 178, 181, 182, 183, 187, 188, 212], "transform": [8, 28, 33, 100, 133, 140, 141, 142, 143, 174, 177, 179, 184, 185, 192, 212], "transformed_imag": [178, 180, 183], "transformer_encod": 182, "transformer_encoder_block": 182, "transformerencod": 182, "transformerencoderblock": 182, "transformerencoderlay": 182, "transit": [21, 141, 143, 148], "translat": [72, 100, 104, 122, 133, 139, 192], "transluc": 203, "transmit": 8, "transpar": [148, 192, 194, 198], "transport": 138, "transpos": [28, 29, 59, 153, 156, 161, 162, 168, 174, 197], "transposed_row": 59, "transposit": 33, "trap": 133, "trapinch": 171, "trapper": 133, "travel": [8, 96, 121, 138, 143, 179, 182, 201], "travers": [8, 49, 178], "treasur": [133, 182], "treat": [7, 38, 41, 72, 77, 78, 103, 111, 133, 136, 142, 156, 183, 210], "tree": [1, 11, 15, 70, 121, 122, 133, 141], "treecko": 171, "trekhleb": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "trelli": [204, 205], "trend": [131, 146, 180, 181, 182, 183, 193, 197, 199, 203, 214], "treven": 171, "trevi": 121, "trevor": [133, 136], "tri": [39, 72, 103, 106, 133, 136, 139, 146, 154, 167, 174, 176, 178, 180, 182, 183, 191, 194, 199, 200, 203], "trial": [1, 140, 141], "triangl": [49, 105, 204], "triangular": 83, "triband": 122, "tribe": 133, "tribut": 143, "tributari": 133, "trick": [0, 133, 135, 136, 148, 153, 155, 174, 176, 178, 191, 198], "trickeri": 133, "tricki": 56, "trigger": 51, "trignometr": 203, "trigonometri": 53, "trio": 146, "trip": [133, 136, 143, 203], "trip_dur": 203, "tripl": [54, 76, 86, 91, 93, 94, 135, 182], "triple_quot": 141, "triu_indices_from": 204, "trivial": 178, "trivialaug": 178, "trivialaugmentwid": [178, 183], "trophi": 133, "tropiu": 171, "troubl": [179, 180], "troubleshoot": [141, 176], "trouser": [18, 20, 177], "trout": 133, "trubbish": 171, "truck": [8, 105], "truck_info": 105, "trucke": 133, "true": [2, 13, 17, 18, 19, 20, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 68, 70, 72, 74, 76, 81, 82, 84, 90, 91, 92, 93, 94, 96, 97, 104, 105, 106, 121, 122, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 154, 155, 157, 160, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "true_divid": 156, "truecal": 146, "truli": [133, 143, 181, 183], "trunc": [82, 84, 158], "truncat": [53, 70, 84, 94, 95, 97, 193], "trust": [12, 14, 143, 175], "trusti": 181, "trustworthi": 203, "truth": [121, 122, 133, 175, 176, 177, 178, 183], "truth_label": 177, "truthvalu": 91, "try": [1, 5, 9, 11, 15, 16, 18, 19, 20, 36, 38, 41, 45, 46, 47, 51, 54, 55, 56, 57, 59, 61, 70, 72, 74, 76, 77, 79, 90, 91, 94, 95, 98, 103, 104, 106, 121, 122, 131, 133, 135, 136, 137, 139, 140, 141, 143, 147, 148, 156, 161, 164, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "tryagain": 133, "tryton": 26, "tsne": 135, "tsplot": 203, "tsv": 160, "tt": 63, "ttopic": 54, "tue": 62, "tuesdai": [121, 133], "tuft": [133, 204], "tug": 133, "tukei": 203, "tumor": [6, 15, 16, 17, 18], "tune": [121, 143, 146, 164, 175, 180, 182, 183, 203], "tunnel": 133, "tupl": [24, 26, 36, 37, 38, 39, 41, 42, 54, 58, 59, 60, 67, 76, 79, 82, 91, 93, 95, 96, 97, 104, 105, 153, 154, 157, 161, 162, 172, 177, 178, 179, 180, 183, 184, 185, 192, 194], "tuple1": 94, "tuple_1": 104, "tupleliter": 91, "tuppl": 154, "tur": 122, "turbo": [121, 122, 132, 135, 140, 141, 142, 143, 146, 148], "ture": 133, "turn": [0, 36, 53, 70, 73, 97, 100, 106, 121, 122, 133, 139, 142, 143, 147, 174, 175, 177, 179, 180, 181, 184, 185, 186, 197, 199, 200, 203, 204, 205], "turtwig": 171, "tutori": [24, 36, 39, 46, 54, 70, 92, 105, 106, 121, 122, 137, 146, 147, 148, 153, 172, 178, 181, 183, 191, 203], "twa": 133, "tweak": [178, 180, 182, 190, 192, 197, 202, 205], "tweepi": [143, 147], "tweepy_result": [143, 147], "tweet": [122, 131, 132, 140, 141, 146, 147, 148, 175, 183], "tweet_exampl": 143, "tweet_mod": [143, 147], "tweets_to_pul": [143, 147], "tweets_to_return": [143, 147], "twelv": 41, "twenti": [133, 136], "twice": [105, 122, 133, 136, 181], "twilight": 192, "twist": 134, "twitch": [133, 146, 182], "twitter": [121, 122, 125, 131, 133, 135, 138, 140, 141, 146, 148, 149, 178, 182], "twitter_access_token": [143, 147], "twitter_access_token_secret": [143, 147], "twitter_api_kei": [143, 147], "twitter_api_key_secret": 143, "twitter_api_secret": 147, "twittertwitt": 144, "two": [7, 9, 11, 15, 16, 21, 26, 33, 34, 36, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 53, 55, 56, 57, 58, 59, 63, 68, 70, 72, 73, 74, 77, 79, 80, 82, 85, 86, 87, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 108, 110, 111, 121, 122, 132, 133, 135, 136, 139, 142, 144, 145, 146, 147, 148, 154, 155, 156, 160, 162, 163, 164, 167, 168, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 210], "two_power_of_f": 59, "twofold": 121, "tworld": 89, "txt": [0, 41, 71, 72, 73, 121, 122, 133, 135, 136, 137, 139, 146, 148, 157, 171], "ty": 54, "tympol": 171, "tynamo": 171, "typ": 57, "type": [0, 5, 6, 8, 11, 15, 18, 20, 26, 36, 38, 41, 42, 44, 49, 50, 51, 54, 58, 59, 61, 63, 65, 66, 72, 73, 77, 79, 80, 82, 89, 90, 91, 92, 97, 98, 100, 102, 103, 106, 108, 121, 122, 125, 133, 135, 136, 138, 139, 140, 141, 142, 146, 148, 150, 153, 155, 156, 157, 160, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "type1": 171, "typecast": 95, "typeerror": [42, 54, 55, 58, 73, 79, 82, 94, 95, 106, 131, 174], "typeobject": 91, "typescript": [121, 122, 141], "typeset": 133, "typewrit": 133, "typhlos": 171, "typic": [8, 51, 106, 133, 134, 136, 156, 160, 175, 176, 177, 180, 182, 183, 200, 203], "typo": 72, "tyranitar": 171, "tyranitarmega": 171, "tyrantrum": 171, "tyrogu": 171, "tyrunt": 171, "tz_london": [61, 65], "tz_ny": [61, 65], "tzinfo": 61, "tzname": 63, "u": [1, 15, 16, 21, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 70, 71, 72, 73, 76, 79, 82, 87, 89, 93, 96, 98, 100, 103, 104, 105, 106, 108, 121, 122, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 156, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "u00dc": 93, "u00dcnic": 93, "u00f6": 93, "u00f6d": 93, "u_": 34, "u_1": 34, "u_2": 34, "u_i": 34, "u_n": 34, "ubyt": 177, "uc": 144, "uci": 10, "ud83c": 122, "udde8": 122, "uddeb": 122, "uddf4": 122, "uddf7": 122, "uesd": 122, "uganda": 143, "uhd": 144, "ui": [26, 122, 133], "uint8": 178, "uk": 61, "ukool": 54, "ular": 41, "ulivi": 133, "ultim": [133, 148, 182, 202], "um": 31, "umbreon": 171, "umpteen": 198, "umpteenth": 21, "unari": [91, 97], "unarm": 189, "unauthor": 103, "unavail": 205, "unawar": 203, "unbound": 171, "unboundlocalerror": [72, 77, 78], "unbridg": 133, "uncertainti": [143, 203], "unchang": [58, 93, 174, 177], "unchart": 194, "unclear": 160, "uncom": [58, 176, 177, 180, 181, 182, 183], "uncommon": 199, "uncorr": 174, "uncov": 135, "und": 41, "undefin": 104, "under": [1, 33, 49, 51, 53, 61, 72, 84, 87, 94, 122, 132, 133, 141, 143, 148, 150, 170, 175, 181, 183, 199, 200, 203, 204], "underestim": 121, "underfit": [176, 180, 182], "undergrad": 133, "undergradu": 133, "underli": [70, 84, 98, 100, 121, 136, 153, 160, 167, 175, 180, 192, 194, 197, 198, 200, 201, 202, 203, 205, 206], "undermin": 204, "underneath": [122, 133], "underpaint": 133, "underscor": [1, 40, 82, 90, 92, 103, 104, 105, 106], "underset": 32, "understand": [1, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 28, 38, 39, 41, 44, 49, 50, 51, 53, 59, 86, 87, 91, 98, 100, 103, 108, 111, 120, 121, 133, 135, 139, 142, 143, 148, 150, 151, 160, 161, 174, 175, 176, 177, 178, 179, 180, 182, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212], "understat": 133, "understood": [29, 100, 122, 133], "undervalu": 122, "undestand": [29, 122], "undetermin": 189, "undoubtedli": 190, "uneasi": [121, 133], "unequ": 182, "uner": [121, 133], "unexpect": [51, 73], "unfamiliar": [175, 192], "unfez": 171, "unfold": 143, "unfortun": [133, 136], "unfrozen": 181, "unhandl": 72, "unhash": 58, "unhelp": [121, 122], "unicod": [41, 54, 72, 91, 92, 94], "unicodedecodeerror": 72, "unicodeencodeerror": 72, "unicodeerror": 72, "unicodetranslateerror": 72, "unifi": 93, "uniform": [54, 82, 83, 154, 157, 158, 203, 204], "uniform_data": 206, "unifrom": [17, 18], "unimport": 133, "unind": 45, "unint": 151, "uninterruptedli": 133, "union": [49, 94, 122, 136], "uniqu": [49, 57, 58, 76, 83, 94, 98, 108, 133, 134, 140, 141, 143, 145, 160, 162, 169, 178, 203, 207], "unique_doc": 136, "unique_label": [15, 16, 17, 18], "unique_to_list1": 145, "unique_to_list1_cont": 145, "unique_to_list1_count": 145, "unique_to_list2": 145, "unique_to_list2_cont": 145, "unique_to_list2_count": 145, "unit": [19, 20, 121, 122, 140, 141, 142, 150, 151, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 193, 194, 200, 201, 202, 203, 205], "unittest": 122, "univari": [3, 5, 196, 198, 199, 202, 204, 205], "univers": [1, 8, 96, 200, 201], "university_nam": 200, "unix": [61, 66, 67, 133], "unknown": [5, 11, 12, 13, 14, 17, 18, 19, 20, 72, 121, 164, 167, 169, 189, 199, 203], "unknowncol": 167, "unlabel": 1, "unless": [41, 48, 76, 91, 133, 136, 174, 176, 177, 180, 190, 193, 203], "unlik": [37, 55, 56, 70, 154, 156, 160, 163, 176, 182, 185, 193, 203], "unlimit": [73, 144, 176, 180, 183], "unlock": 144, "unmemb": 122, "unmodifi": 176, "unnam": [150, 172, 202], "unnatur": 133, "unnecessari": [40, 136, 182], "unnot": 133, "unobserv": 202, "unoffici": 178, "unord": [49, 57, 58, 94, 160], "unorderd": 58, "unown": 171, "unpack": [54, 56], "unpackbit": 158, "unpacking_person_info": 73, "unpickl": [86, 175], "unpredict": 122, "unprestigi": 133, "unravel": 1, "unravel_index": 158, "unreferenc": [70, 104], "unriv": 133, "unruffl": 200, "unseen": [175, 178, 182], "unsolicit": 133, "unsqueez": [175, 176, 177, 178, 180, 182, 183, 184, 185], "unstructur": [122, 137, 139, 140, 177], "unstructured_fil": 139, "unstructuredfileload": 133, "unstructuredpdfload": 137, "unstructuredurlload": [121, 144], "unsuccess": 41, "unsuervis": 11, "unsupervis": [11, 212], "unsuperwis": 11, "unsupport": [72, 95, 106], "unsur": [41, 42, 182], "until": [5, 36, 49, 50, 51, 70, 73, 74, 80, 121, 131, 133, 134, 156, 169, 182, 183], "untrain": [180, 181, 182], "untrained_pr": 176, "unusu": [38, 53, 139], "unzip": [121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 178, 179, 180, 181, 183, 184, 185], "uolp": 54, "up": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 40, 44, 49, 50, 51, 53, 70, 73, 76, 77, 79, 80, 87, 91, 94, 95, 100, 121, 122, 131, 132, 133, 135, 139, 140, 141, 142, 143, 147, 148, 153, 160, 171, 174, 175, 176, 177, 179, 183, 184, 191, 192, 193, 194, 196, 199, 201, 204, 205], "upcom": [144, 180, 183, 189, 191, 197, 205], "updat": [5, 6, 40, 50, 55, 58, 78, 121, 133, 135, 136, 140, 141, 142, 160, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 189, 191, 195, 198, 204, 214], "updated_at": [140, 141], "upfront": [100, 174], "upgrad": [137, 142, 177, 178, 182, 183], "upload": [137, 178, 181], "upon": [1, 36, 51, 74, 105, 106, 108, 133, 177, 181, 182, 189, 198, 203, 204, 205], "upper": [30, 31, 39, 41, 54, 96, 133, 151, 167, 174, 191, 199, 200, 203, 204], "uppercas": [41, 54, 82, 90, 92, 97, 174], "uppercase_decor": 39, "upscal": 177, "uptil": 94, "upto": [198, 203, 205], "upvot": 133, "upward": [180, 202], "urd": 122, "urg": 195, "urgent": [133, 135], "url": [121, 122, 130, 131, 133, 140, 141, 144, 147, 160, 177, 180, 181, 182, 183, 196], "urllib3": 131, "urlopen": 131, "ursar": 171, "us": [0, 1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 36, 39, 42, 44, 45, 46, 47, 48, 51, 54, 57, 58, 59, 63, 64, 66, 67, 68, 70, 71, 72, 74, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 111, 125, 130, 132, 133, 134, 135, 136, 137, 139, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 160, 165, 166, 170, 171, 176, 179, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212], "usa": [122, 134, 150], "usabl": [40, 86, 174, 178, 182, 183], "usag": [19, 20, 25, 40, 81, 100, 160, 161, 174, 176, 179, 181, 184, 185, 192, 193, 200, 205], "usd": [122, 140, 141, 150, 182, 200, 205], "useabl": 26, "useless": 8, "user": [21, 24, 26, 36, 39, 44, 46, 47, 49, 50, 53, 57, 59, 71, 72, 73, 75, 76, 79, 82, 88, 91, 95, 106, 121, 122, 130, 131, 132, 133, 134, 135, 136, 138, 142, 146, 147, 148, 158, 164, 167, 172, 174, 181], "user_check": 47, "user_industri": 138, "user_inform": 147, "user_input": [121, 138], "user_loc": [121, 142], "user_m": 121, "user_prompt": 122, "user_queri": 142, "user_request": 142, "user_screen_nam": 143, "user_screenname_str": 143, "user_select": 148, "user_timelin": [143, 147], "user_tweet": 147, "user_unit": 142, "usernam": 122, "users_tweet": [143, 147], "userwarn": [121, 122, 135, 136, 174, 180, 189], "usless": 1, "usr": [174, 177], "usual": [1, 29, 39, 50, 51, 59, 73, 76, 85, 92, 94, 100, 105, 121, 133, 135, 136, 141, 147, 148, 154, 160, 166, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 193, 199], "utc": [61, 62, 63, 66, 67, 122], "utf": [70, 73, 122, 133], "uti": 183, "util": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 59, 121, 122, 131, 133, 135, 136, 167, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 201, 205], "utmost": [192, 199, 203, 204], "uuaoqyxbtl": 143, "uv": 34, "uxi": 171, "v": [8, 26, 28, 34, 49, 54, 57, 70, 73, 92, 102, 122, 133, 136, 146, 147, 156, 176, 177, 178, 180, 181, 193, 195, 197, 198, 202, 208], "v0": [180, 181, 182, 183, 190], "v1": [106, 131, 140, 141, 157, 205], "v2": [106, 157, 205], "v3": [26, 122], "v_": 34, "v_1": [34, 205], "v_2": [34, 205], "v_i": 34, "v_n": 34, "va": [191, 201], "vabariik": 122, "vacanc": 146, "vacant": 133, "vacat": 133, "vaccin": 49, "vagu": [8, 19, 20, 193], "vairabl": 96, "val": [40, 49, 51], "valid": [0, 6, 12, 14, 16, 17, 18, 19, 20, 54, 56, 90, 91, 98, 108, 122, 130, 160, 175, 177, 178, 183, 184, 192], "validate_templ": 134, "vallei": [132, 133, 136], "valu": [2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 28, 29, 34, 36, 37, 40, 41, 42, 45, 46, 48, 49, 50, 53, 54, 58, 59, 61, 67, 70, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 86, 91, 93, 94, 95, 97, 98, 104, 121, 122, 131, 133, 135, 136, 138, 141, 143, 144, 146, 148, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206], "valuabl": [1, 18, 19, 20, 133, 136, 147, 148], "value1": 55, "value2": 55, "value3": 55, "value_count": [150, 160, 172, 176, 183], "value_var": 205, "valueerror": [40, 73, 95, 96, 108, 131, 133, 155, 161, 169, 197], "valuen": 55, "valuetoolargeerror": 74, "valuetoosmallerror": 74, "vancouv": 122, "vanilla": [148, 182], "vanilla_relevant_doc": 145, "vanillish": 171, "vanillit": 171, "vanillux": 171, "vanish": 133, "vanishingli": 133, "vaporeon": 171, "var": [73, 79, 131, 133, 150, 195, 204], "var_1": 90, "var_nam": [180, 181, 182, 183, 197, 198, 199], "var_scope_test": 77, "vari": [9, 12, 14, 73, 103, 133, 135, 141, 146, 160, 176, 178, 180, 181, 182, 183, 190, 192, 197, 205], "variabel": 206, "variabl": [2, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 24, 26, 30, 31, 37, 40, 41, 42, 45, 46, 47, 49, 50, 51, 53, 54, 59, 61, 62, 64, 66, 72, 73, 76, 81, 82, 85, 86, 90, 93, 94, 95, 96, 97, 102, 104, 105, 108, 121, 122, 137, 140, 141, 142, 143, 147, 148, 164, 166, 167, 169, 170, 174, 175, 177, 182, 183, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "variable1": 90, "varianc": [2, 4, 154, 157, 193], "variant": [180, 182], "variat": [2, 22, 46, 47, 49, 110, 192, 194, 197, 198, 199, 200, 201, 202, 203, 205], "varieti": [26, 54, 140, 141, 147, 178, 197, 201, 204, 205], "variou": [0, 1, 3, 26, 39, 41, 49, 50, 53, 54, 55, 56, 57, 59, 70, 82, 86, 93, 97, 98, 122, 133, 136, 143, 146, 147, 153, 160, 165, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 190, 191, 194, 195, 201, 204, 205, 206, 213, 214], "variti": 197, "vartupl": 79, "vast": [1, 153, 160, 163, 182, 183], "vaswani": 182, "vatican": 121, "vb": 137, "vc": [131, 133, 136, 146], "vcsqueez": 136, "vdot": [33, 34], "ve": [17, 18, 19, 20, 41, 73, 121, 122, 133, 136, 137, 138, 143, 147, 148, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205], "vec": 34, "vector": [4, 5, 12, 17, 18, 19, 20, 21, 28, 32, 33, 35, 106, 121, 122, 136, 137, 146, 156, 157, 176, 177, 180, 181, 182, 197, 201, 203], "vectordb": [136, 145], "vectorestor": 122, "vectorestoreretriev": 121, "vectorstor": [122, 135, 136, 137, 139, 145, 146], "vectorstoreretriev": 121, "veg": 73, "vega": 146, "veget": [73, 122, 134], "vehicl": [105, 141, 143, 160, 203], "vehicle_info": 105, "ven": 122, "vendor": [148, 179, 183, 203], "vendor_id": 203, "veniped": 171, "venomoth": 171, "venonat": 171, "ventur": [131, 133, 136, 146], "venusaur": 171, "venusaurmega": 171, "venv": [26, 183], "verb": 133, "verbos": [121, 122, 130, 131, 133, 134, 135, 136, 144, 146, 147, 148, 180, 181], "verdana": 201, "verfi": 183, "veri": [0, 1, 2, 5, 6, 9, 21, 24, 26, 29, 30, 31, 37, 44, 50, 54, 57, 58, 59, 70, 81, 89, 94, 100, 108, 120, 121, 133, 135, 136, 143, 148, 153, 156, 157, 160, 161, 163, 164, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205], "veriabl": 77, "verifi": [105, 131, 174, 181, 182, 183], "verify_integr": 169, "verison": 177, "versa": [33, 175], "versatil": [54, 204], "versicolor": [10, 11, 15, 189, 197], "version": [0, 26, 68, 70, 81, 82, 83, 96, 97, 121, 131, 133, 135, 136, 137, 142, 146, 147, 156, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 196, 204], "versor": 34, "versu": [147, 175, 177, 182, 183], "vert": 198, "vertex": 183, "vertiac": 200, "vertic": [41, 54, 108, 122, 135, 156, 157, 197, 198, 199, 200, 201, 202, 205], "verticalalign": 182, "vespiquen": 171, "vest": [133, 136], "vet": 144, "vgg": 180, "vgg16": 180, "via": [40, 51, 105, 121, 122, 133, 136, 137, 146, 147, 175, 177, 178, 179, 180, 181, 182, 183, 185, 203], "viabl": 182, "viaweb": 133, "vibrava": 171, "vice": [33, 175], "victini": 171, "victreebel": 171, "video": [26, 121, 122, 125, 135, 143, 146, 147, 149, 174, 175, 176, 177, 178, 182, 183, 205], "video_edit": 121, "video_text": 147, "video_url": 147, "videos_text": 147, "view": [72, 105, 133, 135, 136, 141, 143, 144, 146, 155, 158, 163, 174, 176, 177, 180, 182, 183, 189, 191, 193, 201, 202, 206], "viewabl": 181, "viewer": 192, "vigoroth": 171, "vijai": 104, "vileplum": 171, "villain": 133, "vinegar": 134, "violin": [192, 199, 201, 202, 203, 208], "violinplot": [197, 198, 200], "viral": [132, 147], "virginica": [10, 11, 15, 189, 197], "viridi": [192, 195, 201], "viridian": 192, "viridis_r": 195, "virizion": 171, "virtual": 199, "virtualenv": 26, "virtuou": 136, "visibl": [77, 82, 96, 104, 133, 144, 148, 193, 200, 203, 204, 205], "visibli": 191, "vision": [0, 133, 144, 147, 174, 176, 178, 179, 180, 182, 183, 188], "visiontransform": 180, "visit": [24, 36, 40, 41, 54, 61, 67, 68, 72, 74, 76, 77, 83, 84, 86, 91, 105, 106, 121, 133, 143, 160, 193], "visual": [1, 12, 13, 14, 29, 54, 55, 105, 120, 133, 144, 150, 151, 174, 175, 176, 179, 180, 181, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212], "visuali": 193, "visualizaion": 205, "visualstudio": 26, "vit": 180, "vit_average_time_per_pr": 183, "vit_b_16": [180, 182, 183], "vit_b_16_weight": [182, 183], "vit_b_32": 180, "vit_result": 183, "vit_stat": 183, "vit_test_pred_df": 183, "vit_test_pred_dict": 183, "vit_total_param": 183, "vit_transform": 183, "vivid": 143, "vividli": [133, 203], "vivillon": 171, "vlag": 195, "vlag_r": 195, "vmax": [19, 20, 198, 206], "vmin": [19, 20, 198, 206], "vocabulari": [21, 133], "vocubulari": 21, "vodka": 136, "voic": [132, 143], "voil": 130, "volatil": [70, 174], "volbeat": 171, "volcanion": 171, "volcarona": 171, "volkswagen": [160, 161, 172], "voltorb": 171, "volvo": [160, 161, 172], "vonmis": 83, "vonmisesvari": 83, "vound": 146, "vowel": [55, 56, 92, 93], "vpython": 26, "vscode": [26, 174, 181], "vstack": 153, "vullabi": 171, "vulpix": 171, "vv": 156, "vw": 133, "vx0qtjbfxt": 143, "vysxuyy7rje0xreyvcvzxa": 181, "w": [1, 49, 50, 51, 54, 55, 56, 58, 62, 63, 70, 73, 121, 122, 132, 135, 136, 137, 142, 156, 174, 177, 178, 180, 182, 183, 189, 192, 204, 205], "w320": 122, "w_i": 32, "wa": [0, 1, 15, 16, 36, 37, 38, 39, 40, 41, 46, 49, 51, 54, 59, 70, 72, 73, 77, 82, 92, 105, 106, 108, 121, 122, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 155, 156, 161, 174, 175, 176, 177, 178, 180, 181, 182, 183, 187, 189, 190, 191, 193, 199, 201, 203, 204, 205], "wage": 203, "wagon": [160, 161, 172], "wai": [0, 1, 21, 24, 26, 36, 37, 39, 40, 44, 48, 49, 50, 53, 54, 56, 57, 58, 59, 61, 64, 65, 70, 73, 74, 79, 82, 85, 87, 91, 94, 96, 97, 98, 106, 108, 121, 122, 133, 134, 135, 136, 137, 139, 141, 143, 144, 145, 148, 150, 154, 155, 160, 161, 162, 163, 164, 168, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 206], "wailmer": 171, "wailord": 171, "wait": [0, 46, 68, 133, 136, 137, 143, 177, 178, 181, 182, 183], "walk": [122, 133, 136, 178, 182, 202], "walk_through_dir": 178, "walker": 133, "walkthrough": 182, "wall": [133, 146, 147, 174, 181], "walli": 30, "wallow": 133, "walrein": 171, "wandb": 181, "wang": 182, "wanna": [135, 143, 148], "want": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 39, 40, 41, 44, 46, 48, 49, 50, 51, 53, 54, 55, 70, 71, 73, 77, 82, 85, 89, 91, 92, 96, 98, 103, 105, 106, 108, 113, 121, 122, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 195, 198, 199, 200, 203, 204, 205], "warm": [105, 133, 192], "warmest": 133, "warmup": 182, "warn": [100, 121, 122, 135, 136, 147, 156, 168, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "wartortl": 171, "wash": 151, "washington": 189, "wasn": [121, 133, 136, 146, 181, 183], "wast": [121, 133, 136, 137], "wat": 195, "watch": [0, 49, 133, 137, 143, 147, 148, 175, 176, 177], "watchog": 171, "water": [121, 133, 171], "watev": 54, "watson": 49, "wave": [133, 135, 190, 205], "wayve_ai": 143, "wb": [70, 176, 177, 178, 179, 180, 181, 182, 184, 185], "we": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 120, 121, 122, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214], "we6ptjwdnp": 143, "weak": [72, 86], "wealth": 145, "weapon": [189, 203], "wear": 189, "weather": [6, 121, 130, 133, 142], "weather_info": 142, "weaviat": 121, "weavil": 171, "web": [0, 24, 26, 100, 133, 136, 147, 183, 192, 214], "web_tech": 54, "webbaseload": 145, "weber": 133, "webinar": 122, "webpag": [0, 121, 122, 177], "websit": [26, 92, 121, 122, 144, 145, 174, 175, 176, 177, 178, 179, 184, 185, 192, 213, 214], "website_data": 147, "wed": [131, 174], "wednesdai": [121, 148], "weedl": 171, "week": [0, 61, 62, 63, 65, 76, 133, 144, 148, 182, 198, 200, 201], "weekdai": [62, 63], "weekend": [136, 137, 148, 199, 201], "weekli": 150, "weep": 105, "weepinbel": 171, "weez": 171, "weibul": 83, "weibullvari": 83, "weight": [8, 76, 136, 141, 150, 164, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 195, 201, 203], "weight_decai": 182, "weight_of_object": 76, "weird": [133, 160], "weirder": 39, "welcom": [39, 54, 70, 76, 82, 103, 121, 147, 181, 183, 193, 198, 199, 200, 202, 203, 204, 205, 214], "well": [0, 5, 6, 12, 13, 14, 17, 18, 19, 20, 21, 26, 27, 38, 46, 47, 49, 50, 51, 53, 54, 65, 71, 73, 81, 85, 91, 92, 97, 98, 103, 104, 105, 106, 113, 121, 133, 135, 136, 138, 141, 143, 144, 146, 148, 160, 162, 163, 164, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "went": [73, 121, 133, 136, 137, 141, 142, 147, 176, 177, 180, 181], "were": [0, 10, 11, 15, 29, 42, 51, 70, 72, 73, 79, 97, 105, 108, 121, 122, 133, 135, 136, 140, 141, 143, 144, 146, 147, 148, 156, 174, 175, 178, 180, 181, 182, 183, 187, 189, 197, 202], "weren": [133, 146, 182], "west": [122, 133], "western": 122, "wget": 183, "what": [0, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 29, 37, 38, 39, 40, 41, 42, 45, 51, 53, 59, 66, 73, 77, 83, 86, 90, 97, 104, 106, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 172, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 212], "whatev": [21, 89, 104, 106, 121, 133, 137, 138, 174, 175, 177, 178, 179, 185, 193], "whatsoev": 205, "wheel": [133, 141, 160, 161, 171, 172, 182, 203], "when": [5, 6, 7, 11, 15, 16, 17, 18, 21, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 54, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 90, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 108, 110, 111, 121, 122, 130, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 154, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 210], "whenev": [40, 50, 72, 86, 104, 108, 122, 135, 164, 167, 169, 170, 174, 181, 200, 201], "where": [1, 2, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 30, 31, 36, 38, 40, 48, 50, 51, 53, 54, 55, 56, 59, 67, 70, 72, 73, 76, 77, 78, 82, 94, 96, 98, 100, 104, 105, 121, 122, 133, 135, 136, 139, 140, 143, 146, 147, 155, 156, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 174, 175, 176, 178, 181, 184, 185, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214], "wherea": [41, 49, 53, 56, 61, 62, 77, 100, 103, 108, 110, 133, 143, 161, 168, 169, 170, 178, 190, 194, 203, 204], "wherebi": 133, "whereupon": [133, 136], "wherev": [136, 146, 180, 183], "whether": [1, 6, 15, 16, 17, 18, 19, 20, 21, 22, 44, 45, 46, 51, 70, 73, 74, 78, 86, 97, 105, 110, 136, 140, 142, 155, 160, 164, 165, 166, 167, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 193, 194, 195, 202, 203], "whi": [198, 199], "which": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 25, 26, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 49, 51, 53, 54, 56, 57, 58, 59, 64, 66, 68, 70, 71, 73, 74, 76, 77, 81, 82, 87, 91, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 108, 111, 121, 122, 130, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 181, 182, 183, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 214], "whichev": [194, 200], "while": [0, 21, 24, 36, 37, 40, 42, 44, 52, 53, 54, 57, 58, 68, 70, 72, 74, 76, 79, 81, 82, 85, 90, 91, 95, 97, 98, 100, 103, 104, 105, 108, 122, 131, 133, 135, 136, 137, 141, 143, 144, 155, 161, 162, 166, 168, 169, 175, 177, 178, 180, 181, 182, 183, 189, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205], "whilst": [176, 177, 179, 182, 183, 204], "whimsicott": 171, "whirl": 133, "whirliped": 171, "whiscash": 171, "whisk": 121, "whisker": [8, 12, 14, 198, 199, 201, 203], "whiskerprop": 197, "whismur": 171, "whisper": 147, "white": [8, 44, 51, 54, 122, 133, 135, 141, 148, 189, 190, 200, 201], "whitegrid": [190, 192, 193, 194, 195, 198, 200, 201, 203, 205], "whitespac": [49, 54, 122], "whitish": 136, "whl": [180, 181, 182, 183], "who": [0, 46, 54, 122, 130, 133, 135, 139, 140, 141, 143, 146, 147, 148, 158, 183, 189, 199, 201, 203], "whoisthi": [103, 105], "whole": [26, 51, 54, 68, 82, 97, 133, 135, 136, 139, 147, 148, 160, 161, 163, 175, 177, 178, 179, 180, 181, 182, 183], "wholesal": 136, "wholist": 135, "wholli": 133, "whoop": [39, 140, 141, 147], "whose": [2, 9, 77, 81, 92, 104, 121, 133, 164, 167, 182], "why": [37, 39, 40, 46, 53, 54, 72, 73, 86, 91, 133, 136, 139, 140, 141, 143, 146, 147, 148, 156, 175, 176, 177, 178, 184, 185, 189, 197, 198, 199, 201], "wichita": 189, "wickham": 193, "wide": [26, 96, 121, 133, 157, 160, 167, 174, 177, 178, 180, 181, 182, 183, 197, 198, 201, 213, 214], "wide_to_long": 197, "widen": 205, "wider": [122, 146, 148, 176, 200, 203], "widespread": [161, 181], "width": [10, 11, 12, 15, 54, 103, 122, 146, 148, 151, 174, 177, 178, 180, 181, 182, 183, 184, 185, 189, 194, 195, 197, 199, 200, 201, 203, 205], "width_ratio": 205, "wife": 146, "wifi": 138, "wigglytuff": 171, "wightman": 177, "wiki": [135, 176, 196], "wikipedia": [2, 4, 5, 6, 8, 135, 174, 175, 176, 180, 196], "wikipediaapiwrapp": 135, "wild": [121, 122, 133, 143, 176, 183], "wildcard": 146, "wilder": 203, "wildli": 133, "william": [135, 146], "willing": [121, 133, 135], "wimpi": 133, "win": 205, "win32": [26, 82], "wind": [133, 174], "windi": 142, "window": [26, 70, 71, 104, 133, 141, 189, 192, 203], "windshield": 141, "wine": 148, "winerror": [70, 82], "wing": 143, "wingul": 171, "winograd": 133, "winter": [133, 195], "winter_r": [195, 204], "wirh": 171, "wisdom": [121, 135], "wise": [132, 151, 153, 160, 168, 171, 174, 182, 192, 195, 203], "wish": [40, 41, 51, 54, 76, 96, 136, 183, 192, 194, 199, 201, 203, 204, 205], "wistia": 195, "wistia_r": 195, "wit": [132, 133], "within": [0, 1, 4, 26, 36, 41, 50, 51, 56, 70, 71, 76, 78, 85, 94, 103, 105, 122, 133, 135, 136, 143, 157, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 195, 197, 198, 199, 200, 201, 203, 205, 207], "without": [0, 1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 36, 39, 45, 51, 54, 56, 58, 59, 62, 63, 70, 73, 78, 79, 81, 82, 85, 97, 98, 100, 103, 104, 105, 106, 121, 122, 133, 135, 136, 137, 138, 144, 148, 156, 157, 164, 166, 169, 171, 174, 175, 177, 181, 182, 183, 189, 190, 191, 192, 197, 199, 200, 201, 203, 204, 205, 212], "withpoli": 144, "witti": 132, "woah": [175, 180, 182, 183], "wobbuffet": 171, "wolfpaulu": 137, "wolfram_alpha_appid": 130, "wolframalpha": 130, "wolpert": 1, "woman": [41, 133, 199, 201], "women": 143, "won": [76, 105, 122, 133, 134, 135, 136, 137, 142, 146, 147, 148, 157, 160, 174, 175, 176, 177, 178, 180, 182, 183, 189, 190, 193, 197, 203, 205], "wonder": [61, 76, 121, 122, 130, 133, 137, 139, 143, 176, 177, 178, 180, 181, 182, 183, 203], "wonderfulli": 133, "wont": [104, 174], "woo": [103, 122], "woobat": 171, "wood": 133, "woof": 135, "woohoo": [175, 178, 179, 182, 183], "wooper": 171, "wor": 54, "word": [1, 6, 8, 21, 30, 31, 34, 49, 51, 54, 59, 70, 82, 90, 92, 97, 103, 104, 105, 121, 130, 133, 134, 135, 137, 143, 146, 148, 174, 176, 177, 178, 180, 181, 182, 183, 193, 194, 201, 204], "work": [0, 1, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 37, 38, 39, 41, 42, 49, 50, 51, 53, 55, 57, 59, 61, 70, 71, 73, 77, 80, 82, 87, 94, 96, 97, 100, 103, 104, 105, 106, 113, 122, 132, 133, 135, 136, 137, 138, 140, 143, 144, 146, 147, 148, 153, 155, 156, 160, 163, 167, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 192, 193, 194, 195, 198, 200, 203, 204, 205], "workaround": [122, 147], "workbook": 203, "worker": [178, 179, 185], "workflow": [122, 144, 176, 177, 178, 181, 183, 188, 205], "workforc": [140, 141], "workload": [87, 182], "workplac": 195, "works_for_al": 39, "world": [5, 11, 12, 14, 21, 24, 25, 26, 46, 49, 54, 72, 80, 82, 86, 92, 94, 97, 98, 102, 103, 104, 122, 131, 133, 136, 143, 146, 160, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 190, 193, 198, 199, 203, 212], "world66": 54, "worldli": 133, "worm": [133, 147], "wormadampl": 171, "wormadamsandi": 171, "wormadamtrash": 171, "worn": 133, "worri": [92, 122, 133, 146, 148, 181, 182, 196, 205], "wors": [133, 176, 177, 182], "worst": [2, 133, 176], "worth": [133, 139, 148, 181, 182, 183, 197, 198, 202], "would": [0, 1, 7, 8, 21, 25, 26, 36, 38, 39, 40, 42, 44, 49, 51, 59, 70, 71, 72, 73, 79, 80, 82, 85, 87, 90, 91, 96, 104, 105, 108, 111, 120, 121, 122, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210], "wouldn": [133, 135, 136, 146, 182, 183, 193, 201, 204], "wow": [133, 135, 143], "wozniak": 135, "wp": 137, "wqzg1bdotc": 143, "wrangl": [173, 195, 203], "wrap": [79, 103, 133, 134, 138, 141, 167, 182], "wrapped_f": 133, "wrappedfn": 133, "wrapper": [39, 130, 131, 167, 193, 198, 204], "wrapper___slow_conv2d_forward": 178, "wrapper_accepting_paramet": 39, "wrapper_addmm": 177, "wrapper_cuda_addmm": 177, "wreckag": 133, "wrestl": 133, "writabl": 70, "write": [0, 6, 7, 21, 22, 24, 26, 41, 47, 49, 50, 51, 54, 56, 59, 72, 76, 77, 78, 82, 86, 87, 89, 91, 93, 94, 96, 100, 103, 105, 108, 110, 111, 121, 122, 133, 135, 136, 143, 146, 148, 154, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 200, 209, 210], "writeabl": 158, "writefil": [179, 183, 185], "writelin": 70, "writer": [121, 133, 136, 143], "written": [7, 26, 45, 53, 54, 59, 70, 73, 76, 86, 87, 90, 92, 93, 94, 100, 110, 111, 133, 139, 143, 178, 179, 180, 181, 182, 183, 185, 210], "wrong": [46, 47, 73, 74, 121, 133, 174, 175, 176, 177, 178, 181, 183], "wrote": [70, 121, 122, 133, 139, 176, 179, 180, 181, 182], "wspace": [17, 18, 19, 20], "wt": 197, "wtxmut": 197, "wurmpl": 171, "www": [26, 121, 122, 140, 141, 144, 145, 147], "wxwidget": 26, "wynaut": 171, "wysiwyg": 133, "x": [2, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 26, 30, 31, 32, 33, 37, 38, 39, 42, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 62, 63, 70, 76, 77, 78, 79, 81, 82, 84, 86, 91, 92, 93, 94, 96, 97, 104, 105, 106, 108, 121, 122, 135, 143, 147, 150, 151, 153, 154, 155, 156, 157, 160, 161, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "x1": [12, 13, 14, 15, 16, 17, 18, 77, 97, 176, 194], "x11": 192, "x2": [12, 13, 14, 15, 16, 17, 18, 97, 150, 176, 194], "x3": 97, "x45": 54, "x48": 54, "x58": 54, "x61": 54, "x97": 139, "x_": [30, 31], "x_1": [30, 31], "x_2": [30, 31], "x_3": [30, 31], "x_4": [30, 31], "x_5": [30, 31], "x_axi": [11, 12, 15, 16, 196], "x_bin": 193, "x_blob": 176, "x_blob_test": 176, "x_blob_train": 176, "x_ci": 193, "x_data": 197, "x_estim": 193, "x_flatten": 182, "x_i": [30, 31, 32, 176], "x_index": [12, 15, 16], "x_input": 182, "x_jitter": 193, "x_m": [30, 31], "x_max": [12, 15, 16, 196], "x_med": 198, "x_min": [12, 15, 16, 196], "x_origin": 174, "x_output_mlp_block": 182, "x_output_msa_block": 182, "x_partial": 193, "x_patch": 182, "x_permut": 174, "x_predict": [12, 13, 14], "x_regress": 176, "x_reshap": 174, "x_sampl": 176, "x_squeez": 174, "x_stack": 174, "x_sum": 50, "x_test": [12, 14, 17, 18, 19, 20, 175, 176], "x_test_regress": 176, "x_train": [11, 12, 14, 15, 16, 17, 18, 19, 20, 175, 176], "x_train_regress": 176, "x_unsqueez": 174, "x_valu": 12, "x_var": [195, 204], "x_y_index": 12, "xatu": 171, "xavier": 200, "xaxi": [12, 201], "xeon": 183, "xernea": 171, "xerox": 133, "xgboost": 177, "xhh": 54, "xkcd": 192, "xkcd_palett": 192, "xkcd_rgb": [192, 198], "xl": 70, "xlabel": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 135, 150, 151, 175, 177, 178, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203], "xlim": [191, 205], "xlist": 200, "xlrd": 70, "xlsx": 171, "xmax": 197, "xmin": 197, "xml": 26, "xml_exampl": 70, "xmpmcoyqhi": 143, "xor": [97, 106], "xorg": 174, "xtick": [150, 151, 182, 201], "xticklabel": [182, 205], "xy": [183, 201, 204], "xycoord": [191, 204], "xytext": 201, "xyz": [49, 56, 71, 73, 96, 144, 174], "xyzvalu": 96, "xz": 41, "y": [5, 6, 9, 12, 13, 14, 15, 16, 30, 31, 32, 37, 41, 42, 47, 48, 49, 53, 54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 76, 77, 79, 81, 82, 84, 92, 93, 94, 96, 97, 104, 105, 106, 108, 121, 122, 133, 135, 139, 140, 141, 144, 150, 151, 153, 154, 156, 157, 160, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "y1": [97, 194], "y134sdnnjb2rllxjlbw90zq": 174, "y2": [97, 194], "y3": 97, "y312sdnnjb2rllxjlbw90zq": 174, "y_axi": [11, 12, 15, 16], "y_blob": 176, "y_blob_test": 176, "y_blob_train": 176, "y_combinator_url": 144, "y_data": 197, "y_i": [30, 31, 32], "y_index": [12, 15, 16], "y_jitter": 193, "y_logit": [176, 177], "y_max": [12, 15, 16], "y_med": 198, "y_min": [12, 15, 16], "y_partial": 193, "y_pred": [175, 176, 177, 178, 179, 184, 185], "y_pred_class": [178, 179, 184, 185], "y_pred_label": 176, "y_pred_prob": 176, "y_pred_tensor": 177, "y_predict": [12, 13, 14], "y_regress": 176, "y_sampl": 176, "y_test": [12, 14, 17, 18, 19, 20, 175, 176], "y_test_predict": [17, 18, 19, 20], "y_test_regress": 176, "y_train": [12, 14, 15, 16, 17, 18, 19, 20, 175, 176], "y_train_predict": [15, 16, 17, 18, 19, 20], "y_train_regress": 176, "y_true": [176, 177], "y_valu": 12, "y_var": [195, 204], "ya": 32, "yahoo": [133, 136], "yale": 133, "yamask": 171, "yanke": 122, "yanma": 171, "yanmega": 171, "yannic": 182, "yaxi": [12, 201], "yb": 32, "yc": [133, 144], "ycombin": [121, 122, 144], "ye": [37, 39, 51, 57, 72, 122, 133, 148, 161, 164, 167, 176, 177, 178, 180, 182, 185, 193, 199, 201, 204, 205], "yeah": [146, 148, 183], "year": [0, 46, 49, 54, 62, 63, 64, 65, 66, 67, 73, 86, 99, 103, 108, 121, 122, 133, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 150, 182, 201, 205, 206], "year2021": 92, "year_2021": 92, "year_born": 73, "yellow": [122, 133, 203], "yesmail": 42, "yet": [0, 21, 26, 51, 121, 133, 136, 140, 141, 175, 177, 178, 180, 181, 182, 183, 201], "yg1di2srj": 143, "yield": [36, 37, 90, 139, 155, 156, 190], "yield_kei": 136, "yj": [53, 94], "ylabel": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 135, 150, 151, 175, 177, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203], "ylgn": 195, "ylgn_r": 195, "ylgnbu": 195, "ylgnbu_r": 195, "ylim": [191, 196, 204, 205], "ylist": 200, "ylorbr": 195, "ylorbr_r": 195, "ylorrd": 195, "ylorrd_r": 195, "ymax": 197, "ymin": 197, "yo": 191, "yoga": 146, "york": [121, 122, 133], "yorker": 133, "yorkvil": [122, 133], "yosemit": 133, "you": [0, 1, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 108, 110, 111, 113, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 164, 167, 168, 169, 170, 172, 175, 176, 177, 178, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 213, 214], "young": [122, 135, 144], "younger": [133, 136], "your": [7, 22, 25, 27, 36, 38, 41, 44, 45, 46, 51, 54, 65, 70, 71, 73, 74, 76, 84, 85, 89, 90, 91, 96, 100, 103, 104, 110, 111, 113, 120, 122, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 145, 147, 148, 150, 153, 156, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 210, 213, 214], "your_ag": 46, "your_api_kei": 141, "your_space_nam": 183, "your_usernam": 183, "yourapikei": [121, 131, 135, 136, 137, 139, 140, 145], "yourapikeyifnotset": [122, 134, 142, 143, 146, 147], "yourkei": 132, "yourself": [0, 59, 61, 76, 96, 103, 133, 136, 141, 174, 176, 181, 203], "youtub": [143, 146, 175, 181, 182, 183], "youtubeload": 147, "youtubesearchtool": 142, "youtubeyoutub": 144, "yt": [32, 147], "ytho": 54, "ython": 41, "ytick": [150, 151, 182, 196, 204], "yticklabel": 182, "yummi": 143, "yurtsev": 141, "yveltal": 171, "yy": [61, 64], "yyyi": [61, 63, 181], "z": [8, 12, 15, 16, 42, 49, 54, 55, 56, 62, 63, 79, 90, 92, 97, 105, 154, 160, 171, 174, 176, 182, 204], "z2d5xgsemj": 143, "z_predict": 12, "z_score": 207, "z_setosa": 15, "z_versicolor": 15, "z_virginica": 15, "za": 54, "zalando": [10, 18, 20, 177], "zangoos": 171, "zapdo": 171, "zapier_nla_api_kei": 131, "zapiernlawrapp": 131, "zapiertoolkit": [125, 131, 149], "zaxi": 12, "zealand": [12, 14], "zebstrika": 171, "zekrom": 171, "zen": 108, "zero": [8, 12, 15, 16, 21, 29, 36, 39, 40, 45, 46, 47, 48, 50, 51, 53, 54, 62, 63, 72, 73, 93, 95, 97, 104, 108, 121, 122, 130, 131, 133, 135, 144, 153, 154, 156, 157, 164, 167, 171, 175, 176, 177, 178, 179, 182, 183, 184, 185, 201, 204], "zero_grad": [175, 176, 177, 178, 179, 184, 185], "zero_to_ten": 174, "zero_to_ten_deprec": 174, "zerodivisionerror": [39, 72, 73], "zeros_lik": 174, "zfill": 54, "zho": 122, "zigzagoon": 171, "zip": [32, 49, 82, 94, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 162, 168, 178, 179, 180, 181, 182, 183, 184, 185, 198, 201, 204, 207], "zip_ref": [121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 178, 179, 180, 181, 184, 185], "zipcod": 49, "zipfil": [121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 178, 179, 180, 181, 184, 185], "zone": [62, 63, 65, 144], "zoom": [133, 148], "zoroark": 171, "zorua": 171, "zp7xfripv9": 143, "zubat": 171, "zurich": 164, "zweilou": 171, "zygarde50": 171, "\u00b5": 174, "\u00bd": 121, "\u00e2": 133, "\u00f6": 93, "\u00fb": 34, "\u00fc": 93, "\u00fcnic\u00f6d": 93, "\u03b8": 34, "\u03c6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1": 135, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u044f": 122, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u0458\u0430": 122, "\u0440\u0435\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 122, "\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 122, "\u0444\u0440\u0430\u043d\u0446\u0438\u044f": 122, "\u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f": 122, "\u0444\u0440\u0430\u043d\u0446\u0443\u0441\u043a\u0430": 122, "\u0627\u0644\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 122, "\u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629": 122, "\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 122, "\u062c\u0645\u0647\u0648\u0631\u06cc": 122, "\u062c\u0645\u06c1\u0648\u0631\u06cc\u06c1": 122, "\u0641\u0631\u0627\u0646\u0633": 122, "\u0641\u0631\u0627\u0646\u0633\u0647": 122, "\u0641\u0631\u0646\u0633\u0627": 122, "\u0643\u0648\u0644\u0648\u0645\u0628\u064a\u0627": 122, "\u06a9\u0644\u0645\u0628\u06cc\u0627": 122, "\u06a9\u0648\u0644\u0645\u0628\u06cc\u0627": 122, "\u30b3\u30ed\u30f3\u30d3\u30a2": 122, "\u30b3\u30ed\u30f3\u30d3\u30a2\u5171\u548c\u56fd": 122, "\u30d5\u30e9\u30f3\u30b9": 122, "\u30d5\u30e9\u30f3\u30b9\u5171\u548c\u56fd": 122, "\u54e5\u4f26\u6bd4\u4e9a": 122, "\u54e5\u4f26\u6bd4\u4e9a\u5171\u548c\u56fd": 122, "\u6cd5\u5170\u897f\u5171\u548c\u56fd": 122, "\u6cd5\u56fd": 122, "\uacf5\ud654\uad6d": 122, "\ucf5c\ub86c\ube44\uc544": 122, "\ud504\ub791\uc2a4": 122}, "titles": ["My Journey", "Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Transformers from scratch", "Markdown Files", "Here\u2019s my sample title", "Python Introduction", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Calculus - Fourier Series", "Capital-pi notation", "Capital-sigma notation", "Dissimilarity Measure", "Linear Algebra - Matrices", "Linear Algebra - Vectors", "Mathematics essentials", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, demystified", "Work in progress", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Blogs", "E Books", "Courses", "Research papers", "Resources", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "Table of Contents", "Langchain modules", "Langchain", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Agents - Make OpenAI Do Things For you", "Zapier Natural Language Actions API", "Twitter Reply Bot", "Load Documents", "0. Simple Input/Output Still works", "5 Levels Of Summarization: Novice to Expert", "Advanced Retrieval With LangChain", "Top-K Similarity Search - Ask A Book A Question", "To Do", "Sources", "Extract Structured Data From Text: Expert Mode (Using Function Calling)", "Extract Structured Data From Text: Expert Mode (Using Kor)", "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial", "Instructing LLMs To Match Tone", "Personalized email generation", "&lt;no title&gt;", "Topic Modeling With Language Models", "Using LLMs To Summarize Personal Research", "Extract Data From Calls &amp; Video Transcripts/Interviews", "Langchain projects gallery", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "PyTorch Fundamentals", "PyTorch Workflow Fundamentals", "PyTorch Neural Network Classification", "PyTorch Computer Vision", "PyTorch Custom Datasets", "PyTorch Going Modular", "PyTorch Transfer Learning", "PyTorch Experiment Tracking", "PyTorch Paper Replicating", "PyTorch Model Deployment", "Going Modular: Part 1 (cell mode)", "Going Modular: Part 2 (script mode)", "05. PyTorch Going Modular", "Going Modular Scripts", "Pytorch", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Tools required to work with neural networks", "AI/ML Learning Path", "&lt;no title&gt;", "\ud83d\udcca <strong>Data Analysis</strong>", "Welcome", "Welcome"], "titleterms": {"": [23, 41, 55, 57, 61, 62, 64, 89, 112, 122, 142, 158, 172, 175, 178, 181, 182, 183, 184, 185, 196, 209], "0": [41, 134, 158, 170, 177, 178], "05": 186, "1": [1, 29, 37, 41, 48, 51, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 86, 91, 92, 97, 121, 134, 135, 137, 143, 146, 150, 151, 158, 164, 167, 170, 172, 174, 177, 178, 182, 183, 184, 185, 196, 198, 201, 204], "10": [41, 61, 151, 158, 172, 183], "100": 158, "100th": 158, "10x10": 158, "10x3": 158, "11": [41, 61, 158, 183], "12": [61, 158], "13": [61, 158], "14": [61, 158], "15": [61, 158], "16": [61, 158], "16x16": 158, "17": 158, "18": 158, "19": 158, "1d": [155, 158], "2": [1, 37, 41, 48, 51, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 68, 86, 91, 92, 97, 121, 122, 130, 135, 137, 143, 146, 150, 151, 158, 172, 174, 177, 178, 182, 183, 184, 185, 196, 201], "20": 158, "2016": 158, "2017": 10, "21": 158, "22": 158, "23": 158, "24": 158, "25": 158, "26": 158, "27": 158, "28": 158, "29": 158, "2d": [155, 158], "2x2x2": 158, "3": [1, 37, 41, 54, 55, 56, 61, 62, 64, 65, 68, 86, 91, 92, 130, 135, 143, 150, 151, 158, 172, 174, 177, 182, 183, 196, 201], "30": 158, "31": 158, "32": 158, "33": 158, "34": 158, "35": 158, "36": 158, "37": 158, "38": 158, "39": 158, "3x3": 158, "3x4": 158, "4": [1, 37, 41, 61, 65, 68, 86, 135, 143, 151, 158, 172, 174, 182, 183, 196], "40": 158, "41": 158, "42": 158, "43": 158, "44": 158, "45": 158, "46": 158, "47": 158, "48": 158, "49": 158, "4x4": 158, "5": [41, 61, 65, 86, 135, 151, 158, 172, 183, 196], "50": 158, "51": 158, "52": 158, "53": 158, "54": 158, "55": 158, "56": 158, "57": 158, "58": 158, "59": 158, "5x2": 158, "6": [41, 61, 65, 151, 158, 172, 183], "60": 158, "61": 158, "62": 158, "63": 158, "64": 158, "65": 158, "66": 158, "67": 158, "68": 158, "69": 158, "6x3": 158, "6x6": 158, "7": [41, 61, 151, 158, 172, 183], "70": 158, "71": 158, "72": 158, "73": 158, "74": 158, "75": 158, "76": 158, "77": 158, "78": 158, "79": 158, "8": [41, 61, 151, 158, 172, 183], "80": 158, "81": 158, "82": 158, "83": 158, "84": 158, "85": 158, "86": 158, "87": 158, "88": 158, "89": 158, "8x8": 158, "9": [41, 61, 151, 158, 172, 178], "90": 158, "91": 158, "92": 158, "93": 158, "94": 158, "95": 158, "96": 158, "97": 158, "98": 158, "99": 158, "9_": 41, "9x9": 158, "A": [41, 122, 133, 137, 140, 141, 158], "As": [122, 140, 141], "Be": [108, 155], "By": 41, "For": [59, 130, 142], "If": [55, 57], "In": [26, 55, 82, 104], "Into": [12, 14, 17, 18, 19, 20], "No": 73, "Of": [105, 122, 135, 143], "One": [6, 21, 41, 46, 174], "The": [4, 40, 45, 46, 54, 55, 56, 57, 70, 73, 82, 121, 146, 161, 164, 165, 166, 167, 168, 169, 170, 176, 178, 182], "These": 196, "To": [108, 138, 143, 147, 160], "With": [15, 16, 134, 136, 141, 146], "_": 41, "__doc__": 86, "__init__": 108, "__new__": 108, "about": 24, "accept": 96, "access": [49, 54, 55, 56, 57, 96, 104], "account": 143, "accumul": 158, "across": [78, 183], "action": 131, "activ": 176, "ad": [57, 142, 153, 167], "add": [7, 55, 57, 111, 158, 210], "addit": [33, 34, 195], "adjust": [176, 181], "advanc": [24, 43, 54, 136, 157, 212], "advantag": [56, 80, 82, 87], "aesthet": 190, "agent": [121, 122, 130, 131, 135], "aggreg": [171, 174], "agnost": [177, 178], "ai": [121, 143, 212], "algebra": [28, 33, 34], "algorithm": [2, 4, 8, 11, 99], "align": 96, "all": [6, 54, 55, 57, 82, 151, 158, 164, 165, 166, 167, 172, 174, 175, 182], "allow": 196, "alpha": 130, "alphabet": 41, "alphanumer": 41, "alreadi": 57, "also": [41, 154], "altern": 41, "amount": [135, 171], "an": [7, 36, 41, 55, 57, 58, 73, 104, 111, 131, 135, 142, 158, 175, 178, 182, 183, 210], "analysi": 214, "analyz": [12, 13, 14, 15, 16, 17, 18], "anatomi": [199, 200], "angl": 34, "ani": [41, 55, 57, 76, 158], "anomali": [2, 9], "anonym": 81, "anoth": 79, "answer": [122, 137], "anyth": 57, "api": [122, 130, 131], "app": 183, "appart": 54, "appear": 55, "append": 55, "appl": 174, "appli": 160, "applic": 26, "appropri": 62, "ar": [41, 55, 57, 58, 81, 82, 85, 87, 158, 161, 166, 181, 196], "arang": 157, "arbitrari": [79, 158], "architectur": 176, "area": [26, 158], "arg": 42, "argmax": 154, "argmin": 154, "argument": [55, 73, 76, 79, 96], "arithmat": 97, "arithmet": 97, "around": 158, "arrai": [153, 154, 155, 156, 157, 158], "artifici": 10, "asarrai": 157, "ascend": [55, 56, 57], "asctim": 67, "ask": [137, 143], "assign": [92, 97], "assist": 143, "attent": 182, "attribut": [70, 86, 104, 140, 141, 154, 158, 160], "attributeerror": 72, "augment": 178, "auto": 180, "automat": 181, "avail": 57, "averag": [158, 172], "avoid": 108, "awai": 158, "axi": [158, 164, 167, 196], "b": [41, 49, 50, 158], "back": [39, 137, 174], "background": 197, "backpropag": 8, "backslash": 41, "backward": 49, "balanc": 178, "bar": [150, 151, 201], "base": [158, 180, 181], "baselin": 177, "basic": [54, 79, 135, 150, 153, 154, 174], "batch": [5, 6, 134, 177], "bath": 151, "becom": [158, 178], "befor": 41, "begin": 41, "beginn": [3, 212], "below": 158, "best": [9, 135, 177, 181], "better": [58, 177], "between": [34, 37, 61, 65, 100, 158, 178, 184, 185], "big": 183, "binari": 158, "bincount": 158, "bit": [58, 158], "bitwis": 97, "blank": 89, "block": [27, 113, 158, 182], "blog": 114, "blue": 176, "bolt": 121, "bonu": 146, "book": [115, 135, 137], "boolean": [76, 93, 97, 155, 157, 158], "bootstrap": 158, "border": 158, "bot": 132, "both": [96, 100, 158], "bottom": 163, "boundari": [15, 16], "box": [150, 198, 199], "boxplot": 201, "brace": 41, "bracket": 41, "brain": 121, "break": [49, 50, 51, 54, 89], "breath": 26, "bring": 183, "broadcast": [156, 157], "build": [36, 158, 175, 176, 177, 178, 181, 183, 192], "built": [39, 54, 55, 56, 57, 58, 72, 82, 104], "busi": [140, 141], "byte": 158, "c": [49, 50, 158], "calcul": [15, 16, 17, 18, 19, 20, 26, 151, 182], "calculu": 29, "call": [76, 121, 140, 142, 148], "can": [59, 108, 121, 158, 174, 176, 179, 180, 182], "canberra": 32, "capit": [30, 31], "car": 172, "care": [155, 158], "caret": 41, "cart": 41, "cartesian": 158, "case": [122, 146], "cast": 95, "catch": [51, 73], "categor": [197, 198], "cauchi": 158, "cell": [7, 111, 179, 184, 185, 210], "center": 158, "chain": [39, 121], "chang": [54, 55, 56, 57, 70, 71, 92, 148, 158, 161, 162, 170, 171, 174, 180, 181], "chapter": 146, "charact": [41, 54, 93], "chart": [150, 151], "chat": [121, 134], "chatbot": 122, "chdir": 71, "chebyshev": 32, "check": [26, 153, 158, 175, 182, 183], "checkerboard": 158, "choic": 26, "chroma": [137, 146], "chunk": 137, "cij": 158, "circl": 176, "class": [6, 8, 24, 40, 46, 61, 66, 67, 74, 86, 103, 104, 105, 107, 158, 176, 178, 182, 183], "class_nam": 183, "classif": [6, 8, 176], "classifi": 181, "claus": 73, "clean": [160, 172], "clear": [55, 57], "clock": 68, "close": 70, "closest": 158, "closur": 38, "cloud": 137, "cluster": [11, 207], "cnn": 177, "code": [26, 27, 62, 63, 89, 100, 113, 122, 177, 178, 181, 182, 191], "collect": [93, 183], "color": [158, 192, 206], "column": [158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "combin": [59, 143, 153, 158, 160, 178, 179, 182, 184, 185], "comma": 92, "command": 158, "comment": [86, 91], "common": [54, 151, 158, 174], "compani": [144, 172], "compar": [158, 164, 177, 178, 183], "comparis": [82, 100], "comparison": [97, 106, 153], "compil": [55, 100], "complier": 56, "compon": [89, 121], "compos": 158, "comprehens": [55, 57, 59], "compress": 136, "comput": [8, 158, 174, 177], "con": 179, "concaten": [54, 172], "concept": [3, 26, 103], "condit": [44, 59, 160, 171, 172], "confid": 158, "configur": 158, "confus": 177, "consecut": 158, "consid": [41, 158], "constant": [82, 92], "construct": [158, 178], "constructor": [103, 104, 108, 160, 161, 162], "consum": 158, "contain": [41, 158], "content": [27, 113, 123, 175], "context": 122, "contextu": 136, "contigu": 158, "continu": [49, 50, 51], "control": [24, 44, 49, 50, 51, 52, 190], "conv2d": [177, 182], "convent": 92, "convers": [53, 93, 95, 160], "convert": [56, 158, 168], "convolut": 177, "cookbook": [121, 122], "coordin": 158, "copi": [55, 57, 153, 155, 158], "correspond": 158, "cosin": 32, "cost": [4, 5, 6, 8], "count": [55, 172, 201], "coupl": 135, "cours": 116, "cover": [158, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "cpu": 174, "cream": 151, "creat": [7, 37, 54, 55, 56, 57, 58, 59, 62, 68, 74, 82, 104, 111, 137, 146, 154, 158, 160, 161, 162, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 210], "creation": [160, 180], "credit": 143, "csv": [70, 160, 172], "ctime": 67, "cubehelix": 192, "current": [61, 64, 65, 71], "curriculum": 180, "curv": [178, 180, 182, 183], "custom": [36, 74, 144, 146, 148, 160, 162, 178, 180, 181, 182], "d": [41, 158], "dai": 61, "data": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 53, 60, 94, 99, 104, 122, 137, 140, 141, 146, 147, 148, 150, 151, 157, 160, 161, 162, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 196, 197, 206, 212, 214], "data_setup": 179, "datafram": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "dataload": [177, 178, 179, 180, 181, 182, 183, 184, 185], "dataset": [10, 17, 18, 19, 20, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 196, 201, 204], "datatyp": [26, 58, 154, 174], "date": [24, 61, 62, 64, 66, 69, 158], "datetim": [61, 62, 63, 65, 66], "deal": 178, "decim": [41, 53, 82], "decis": [15, 16, 44], "declar": 92, "decor": [39, 40], "deep": [1, 26, 174], "default": [46, 57, 66, 79, 103], "defin": [38, 74, 76, 87, 104, 108, 161, 165, 166, 167], "definit": [4, 5, 6, 8], "degre": 158, "del": 164, "delet": [54, 55, 56, 70, 104, 164], "demo": [2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 183], "demystifi": 108, "densiti": 2, "depend": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "deploi": 183, "deploy": 183, "descend": [55, 56, 57], "descent": [5, 6, 12, 13, 14, 15, 16, 17, 18], "describ": [143, 158, 171], "descript": [4, 143, 146], "desir": 171, "detail": 172, "detect": [2, 9], "determin": [33, 156], "devic": [177, 178], "diagon": 158, "dict": [55, 56, 57, 160, 161, 168], "dict2": 57, "dictionari": [49, 57, 70, 73, 94, 161, 168], "differ": [1, 37, 45, 46, 58, 61, 64, 65, 89, 100, 158, 181, 183, 184, 185], "digit": [10, 41, 68], "dimens": 158, "dimension": 158, "dir": 82, "direct": 110, "directori": [71, 183], "disadvantag": 80, "discuss": 196, "disk": 151, "displai": [96, 151, 160, 178], "dissimilar": 32, "distanc": [32, 158], "distort": 4, "distplot": 196, "distribut": [2, 9, 158, 196], "dive": 26, "do": [38, 130, 138, 185], "doc": 137, "docstr": [76, 86, 91], "document": [121, 122, 133, 136, 137, 157, 158], "doe": [57, 177], "dollar": 41, "dot": [21, 34, 158], "down": 89, "download": [181, 183], "draw": [15, 16, 158, 198, 204], "drop": [160, 164, 165, 166], "drop_dupl": 165, "dropna": 166, "dtype": 158, "duplic": [165, 166, 169], "durat": 61, "e": [115, 158], "each": [151, 158, 172, 204], "easi": 37, "edit": 142, "editor": 26, "effici": 37, "effnetb2": 183, "einsum": 158, "either": [55, 56, 57], "eleg": 55, "element": [55, 56, 57, 58, 153, 158], "elif": 47, "els": [46, 47, 49, 50, 51, 73], "email": 144, "embed": [121, 122, 137, 182], "empti": 58, "encapsul": 103, "encod": [21, 182], "end": [41, 55], "ensembl": 136, "entir": 135, "enumer": [73, 158], "environ": 26, "equal": [57, 158], "equat": [5, 182], "equidist": 158, "equival": [41, 158], "error": [55, 72, 164, 167, 174], "escap": [41, 54], "essenti": [35, 175], "estim": 2, "etc": [55, 174], "euclidian": 32, "evalu": [2, 122, 176, 177, 178, 179, 180, 184, 185], "even": 29, "everi": 158, "everytim": 108, "exampl": [7, 8, 29, 30, 31, 41, 48, 49, 50, 51, 61, 62, 63, 64, 65, 66, 68, 74, 78, 82, 89, 92, 97, 105, 111, 121, 122, 140, 141, 142, 143, 150, 168, 182, 183, 210], "except": [51, 72, 73, 74, 163], "exclud": 158, "exercis": [46, 66, 151, 158, 172], "exist": 158, "expand": 146, "expens": 172, "experi": [177, 181, 183], "expert": [135, 140, 141, 212], "explicit": 95, "explicitli": 108, "explor": 182, "export": [160, 171], "express": [37, 129, 158, 167], "extend": 55, "extens": 70, "extra": [143, 175, 176, 177, 178, 179, 180, 181, 182, 183], "extract": [122, 140, 141, 146, 148, 158], "extractor": [181, 182, 183], "f": [41, 158], "face": [151, 183], "facetgrid": 205, "facewash": 151, "factor": 202, "fals": [55, 57], "faq": [50, 51], "fashion": 10, "faster": [158, 174, 183], "featur": [5, 181, 182, 183], "feedback": [140, 141], "feedforward": 8, "field": 141, "fifa": 150, "figur": 182, "file": [22, 24, 70, 71, 75, 110, 157, 158, 172, 182, 183], "fill": 158, "filter": [39, 81, 160, 171], "final": 73, "financi": 142, "find": [9, 158, 172, 174, 180, 182], "findal": 41, "fing": 9, "first": [23, 55, 112, 146, 158, 163, 164, 165, 172, 209], "fit": [9, 146, 176], "five": 172, "fix": 158, "flatten": [157, 182], "float": [53, 96, 158], "flow": [24, 44, 52], "flower": 10, "folder": [183, 185], "follow": [151, 158, 172], "food101": 183, "foodvis": 183, "forecast": 142, "form": [29, 178], "format": [54, 61, 62, 63, 64, 86, 96, 171, 206], "forward": [8, 178], "found": 146, "four": [158, 182], "fourier": 29, "fraction": 53, "frame": 172, "freez": [180, 181], "frequent": 158, "from": [21, 55, 56, 57, 58, 61, 62, 82, 85, 96, 140, 141, 144, 147, 148, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 172, 174, 176, 180, 182], "from_dict": 161, "fromkei": 57, "frozenset": 58, "fuction": 121, "function": [4, 5, 6, 8, 24, 29, 37, 38, 39, 49, 54, 55, 56, 57, 58, 59, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 96, 105, 106, 121, 140, 142, 154, 156, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185], "fundament": [174, 175], "further": 177, "fusion": 143, "g": 158, "galleri": [125, 149], "game": 158, "gaussian": [2, 9, 158], "gener": [29, 37, 59, 121, 144, 157, 158, 192], "get": [26, 39, 55, 57, 61, 64, 65, 71, 96, 120, 137, 143, 146, 151, 158, 160, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "getcwd": 71, "getter": 40, "give": 57, "given": [55, 56, 57, 158, 172], "glanc": 3, "global": [77, 78], "gmtime": 67, "go": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "got": 185, "gpt": 142, "gpu": [174, 177], "gradient": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18], "gradio": 183, "graph": 150, "group": [41, 198], "groupbi": [160, 171], "h": 158, "ha": [158, 185], "ham": 32, "hand": [45, 46, 182], "handl": [61, 73], "handwritten": 10, "happen": 108, "happi": 10, "hard": 151, "have": 38, "head": [163, 181, 182], "header": 168, "heat": 206, "heatmap": 206, "hello": [73, 89, 140, 141], "help": [86, 91, 143, 179, 180], "helper": [178, 181], "here": [23, 54, 108, 112, 209], "hidden": [18, 19, 20], "hide": 104, "hierarch": [105, 162], "higesht": 172, "high": 100, "higher": [38, 39], "histogram": [150, 151], "histori": 121, "hoc": 142, "hold": 26, "hot": 21, "hour": 61, "how": [24, 54, 55, 58, 62, 63, 64, 76, 82, 153, 158, 163, 178, 183], "hstack": 157, "html": 144, "hug": 183, "huggingfac": [119, 183], "hybrid": 105, "hypothesi": [5, 6], "i": [1, 22, 33, 34, 41, 49, 50, 54, 55, 56, 57, 58, 70, 76, 78, 80, 84, 98, 100, 108, 110, 121, 122, 157, 158, 160, 166, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 196, 206, 207], "iat": 163, "idea": [140, 141, 178], "ideal": 178, "ident": [33, 97, 158], "identifi": 90, "ignor": [54, 158], "illustr": [18, 19, 20], "iloc": 164, "imag": [158, 178, 180, 181, 182, 183], "imagefold": 178, "immut": 158, "implement": [8, 37, 158, 196], "implicit": 95, "import": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 82, 85, 96, 123, 153, 158, 160, 174, 178], "improv": 176, "includ": 181, "indent": 91, "index": [49, 55, 56, 121, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174], "indexerror": 72, "indic": 158, "infer": 175, "inference_mod": 175, "infinit": [36, 37], "info": 160, "inform": [26, 174], "inherit": [103, 105], "init": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "initi": 8, "inlin": 91, "inner": 158, "inplac": 158, "input": [96, 134, 176, 177, 182, 183], "insert": [55, 160], "insid": [26, 49, 50, 61, 158], "inspect": [54, 160, 183], "instal": [26, 123, 153], "instanc": [59, 103, 104, 181], "instead": 53, "instruct": [121, 143], "int": 158, "integ": [96, 155, 158], "interact": [122, 142, 192], "interest": [140, 141], "interfac": [121, 183], "interleav": 158, "intermedi": [143, 212], "intern": 108, "interpret": [100, 158], "intersect": 58, "interv": 158, "interview": 148, "introduct": [1, 24, 26, 42, 102, 119, 123, 174], "invers": 33, "investor": [140, 141], "iri": [10, 204], "issubclass": 105, "item": [55, 56, 57, 158], "iter": [36, 44, 49, 50, 54, 55, 56, 57, 58, 158, 160], "itm": 57, "its": 96, "j": 158, "januari": 158, "java": 100, "job": [140, 141], "join": 160, "joint": 194, "jointplot": 196, "journei": [0, 26], "json": 70, "jupyt": [2, 4, 5, 6, 8, 26], "just": 158, "justif": 96, "k": [4, 11, 137], "kdeplot": 196, "keep": [165, 169], "kei": [57, 59, 76, 95, 100, 103, 161, 168], "keyerror": 72, "keyword": [78, 79, 90, 105], "kind": 181, "kor": 141, "kwarg": 42, "label": [46, 66, 163, 176], "lambda": [59, 81, 167], "langchain": [121, 122, 123, 124, 125, 129, 136, 142, 144, 149], "langgraph": 126, "langserv": 127, "langsmith": 128, "languag": [100, 121, 129, 131, 146], "larg": [121, 158, 171], "largest": 158, "last": [151, 158, 163, 164, 165, 172], "launch": 120, "layer": [18, 19, 20, 180, 181, 182], "layernorm": 182, "lead": 167, "learn": [1, 24, 25, 39, 174, 175, 180, 181, 182, 183, 212, 214], "least": 166, "len": [55, 56, 57], "length": [57, 79, 158, 161], "let": [89, 92, 196], "letter": 203, "level": [66, 100, 135, 143, 167, 170, 212], "librari": [150, 154, 177], "life": [158, 183], "like": [143, 158, 174, 178], "line": [45, 46, 49, 86, 89, 91, 92, 96, 150, 151, 158, 176], "linear": [5, 10, 12, 13, 14, 15, 16, 28, 33, 34, 175, 176, 177], "linspac": 157, "list": [26, 46, 49, 50, 54, 55, 56, 57, 59, 62, 63, 71, 73, 76, 82, 94, 130, 141, 158, 161, 162, 167, 168, 169, 183], "listdir": 71, "liter": 93, "llm": [121, 133, 143, 146, 147], "lm": 193, "lmplot": 193, "ln": 182, "load": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 133, 136, 137, 144, 150, 154, 157, 171, 175, 177, 178, 181, 183, 189], "loader": 121, "loc": 164, "local": [62, 77, 137, 183], "localtim": 67, "logic": [47, 72, 97], "logist": [6, 8, 11, 15, 16, 17, 18], "logit": 176, "logspac": 157, "longer": 122, "look": 178, "loop": [36, 37, 49, 50, 51, 59, 143, 144, 175, 176, 177, 178], "loss": [175, 176, 177, 178, 180, 182, 183], "lv": 203, "machin": [1, 25, 100, 181, 182, 183, 212, 214], "made": 182, "magic": 144, "main": [122, 178, 180, 181, 182, 183], "make": [44, 71, 130, 158, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "manag": [26, 71], "manhattan": 32, "mani": [143, 154], "manipul": [153, 174], "manual": [180, 181], "map": [39, 81, 133, 135, 183, 206, 207], "mark": 41, "markdown": [7, 22, 27, 110, 111, 113, 210], "mask": 157, "match": [41, 55, 143], "math": [82, 84, 156], "mathemat": [25, 35, 53, 84, 153, 156], "matplotlib": [24, 150, 151, 152, 191], "matric": [33, 155, 158, 174], "matrix": [21, 33, 156, 158, 174, 177], "max": [55, 56, 154, 174], "maximum": [55, 56, 158], "maxpool2d": 177, "mean": [4, 11, 158, 174], "measur": 32, "member": 105, "membership": [54, 55, 56, 57, 58, 97], "memori": [37, 121, 158], "merg": 172, "messag": [121, 134], "metacharact": 41, "metadata": [7, 111, 160, 210], "method": [41, 54, 55, 56, 57, 58, 70, 103, 105, 121, 143, 154, 158], "metric": [176, 177], "microchip": 10, "microsecond": 61, "mileag": 172, "mimic": 143, "min": [55, 56, 154, 174], "mini": 183, "minimum": [56, 158], "minkowski": 32, "minut": 61, "miscellan": 157, "miss": [166, 176, 182], "mkdir": 71, "mktime": 67, "ml": [1, 212], "mlp": [19, 20, 182], "mnist": 10, "mode": [140, 141, 179, 184, 185], "model": [6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 121, 140, 142, 146, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "model_1": 176, "model_2": 177, "model_build": 179, "modif": 160, "modifi": [58, 103, 104], "modul": [24, 65, 67, 69, 78, 82, 83, 84, 85, 86, 124, 159, 173, 174, 182], "modular": [179, 184, 185, 186, 187], "modulenotfounderror": 72, "month": [61, 151, 158], "more": [41, 54, 153, 176], "most": [151, 158, 172, 174], "move": [174, 183], "msa": 182, "mul": 158, "mulitpli": 158, "multi": [6, 8, 86, 91, 163, 164, 167, 169, 170, 176, 182], "multidimension": [30, 31], "multilay": [19, 20, 182], "multilevel": 105, "multilin": [96, 151], "multinomi": 158, "multip": 21, "multipl": [33, 34, 73, 76, 82, 92, 96, 105, 135, 140, 141, 143, 156, 162, 164, 167, 169, 174], "multipli": 158, "multiqueri": 136, "multithread": 68, "multivari": [12, 17, 18], "mutli": 176, "my": [0, 23, 112, 179, 182, 209], "myst": [7, 22, 27, 110, 111, 113, 210], "n": [41, 158, 163, 164], "na": 166, "name": [82, 92, 96, 98, 158, 162, 170, 172, 178, 183], "nameerror": 72, "namespac": 98, "natur": 131, "nearest": 158, "necessari": [150, 158], "need": [103, 174, 180], "neg": [55, 56, 61], "negat": 158, "nest": [38, 48, 49, 50, 51, 59, 78, 161], "network": [8, 19, 20, 176, 177, 211], "neural": [8, 19, 20, 176, 177, 211], "neuron": 8, "new": [55, 57, 71, 158, 170], "nn": [177, 182], "non": [10, 13, 16, 41, 158, 176, 177], "nonloc": [38, 77], "normal": [2, 5, 37, 158], "notat": [30, 31], "note": 179, "notebook": [7, 26, 27, 111, 113, 179, 184, 185, 210], "novic": 135, "np": 158, "nth": 158, "null": 158, "number": [50, 53, 55, 56, 57, 59, 93, 94, 96, 154, 157, 158, 166, 169, 170], "numer": [93, 158], "numpi": [24, 153, 154, 157, 158, 159, 174], "nut": 121, "o": [70, 82], "object": [24, 41, 61, 63, 65, 70, 100, 103, 104, 107, 160], "observ": 198, "old": [54, 169], "onc": 158, "one": [41, 45, 49, 92, 96, 158, 166, 168, 177, 178], "ones": 174, "onli": [96, 158, 161], "oop": 103, "open": [70, 140, 141], "openai": [121, 130, 142], "oper": [10, 33, 34, 47, 54, 55, 56, 57, 58, 82, 97, 106, 153, 156, 174], "opposit": 41, "optim": [175, 176, 177, 182], "option": [137, 146, 160, 178], "order": [21, 38, 39, 55, 56, 57, 105, 158], "orient": 103, "orthogon": 34, "other": [55, 56, 57, 58, 125, 170, 178], "otherwis": [55, 56], "our": [136, 171, 176, 177, 178, 180, 181, 182, 183], "outer": [51, 158], "outlier": 9, "outlin": 183, "output": [27, 96, 113, 121, 134, 146, 158, 176, 177, 180, 182, 183], "over": [56, 158], "overfit": [5, 6, 178], "overload": 106, "overrid": [103, 105], "overview": [182, 183], "p": 158, "p0": 158, "p1": 158, "pack": 73, "packag": [26, 85, 86, 123, 158], "pad": 158, "page": [135, 144], "pair": 57, "pairgrid": 204, "pairplot": 196, "pairwis": 204, "palett": 192, "panda": [24, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "paper": [117, 182], "paragraph": 135, "parallel": 34, "paramet": [2, 5, 10, 38, 39, 76, 79, 104, 160, 168, 181], "parent": [103, 105, 136], "pars": 121, "parser": 121, "part": [122, 158, 179, 184, 185, 201, 204], "pass": [49, 50, 51, 55, 57, 76, 143, 146, 178], "patch": 182, "path": [82, 158, 212], "pattern": [41, 49, 50, 158], "per": [146, 172], "percentil": 158, "perceptron": [18, 19, 20, 182], "perform": [177, 183], "period": 41, "person": [144, 147], "persona": [140, 141], "perspect": 176, "pi": 30, "pie": [150, 151], "piec": 176, "pinecon": [137, 146], "pipelin": 37, "place": [158, 164, 165, 166, 167, 169, 170], "placehold": 153, "plot": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 150, 151, 178, 180, 182, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "plu": 41, "point": [59, 65, 95, 96, 103, 158, 201], "polar": 158, "polymorph": 103, "polynomi": 5, "pop": [55, 164], "posit": [70, 79, 96, 158, 163, 164, 167, 174, 182], "power": 158, "practic": 96, "precis": [9, 15, 16, 17, 18, 19, 20], "predict": [12, 13, 14, 17, 18, 19, 20, 175, 176, 177, 178, 180, 181, 182, 183], "prefix": [41, 167], "prepar": [16, 175, 176, 177, 178, 182], "prepara": [11, 15], "prerequisit": 39, "pretrain": [180, 181, 182], "price": 172, "print": [17, 18, 49, 50, 61, 89, 96, 158, 160, 172], "printabl": 57, "privat": 105, "pro": 179, "probabl": 176, "problem": [5, 6, 96, 176], "process": [54, 143], "produc": [57, 158], "product": [21, 30, 34, 151, 158], "profit": 151, "program": [24, 68, 73, 89, 100, 103, 158], "progress": [9, 12, 13, 14, 15, 16, 17, 18, 109], "project": [125, 149], "prompt": [121, 134, 135, 144, 146, 148], "promptless": 148, "propag": 8, "properti": [30, 31, 33, 40, 104, 151], "provid": 154, "pull": 147, "put": [174, 175, 176, 178, 182], "py": [179, 183], "pydant": 140, "python": [24, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 151, 152, 153, 154, 158, 159, 160, 161, 162, 168, 169, 171, 172, 173, 179, 183, 185, 208], "python3": 55, "pytorch": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188], "q": [122, 133], "quantifi": 41, "queri": [122, 136, 137], "question": [41, 122, 137, 151], "quickli": [7, 111, 210], "quiz": 155, "r": [41, 158], "rais": [73, 167], "rand": 154, "randint": 154, "randn": 154, "random": [8, 82, 83, 154, 157, 158, 174, 177, 178], "randomli": 158, "rang": [49, 151, 158, 164, 169, 170, 174], "rank": [133, 158], "raw": [54, 176], "re": [41, 133, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "read": [70, 151, 158, 171], "readi": [137, 176], "real": [140, 141, 150, 158], "recal": 9, "recommend": 158, "record": 158, "recreat": 176, "recurs": 80, "red": 176, "reduc": [81, 133, 135], "refer": [2, 4, 5, 6, 8], "refin": 133, "reg": 193, "regardless": 158, "regex": 41, "regplot": 193, "regress": [5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 195], "regular": [5, 6, 158], "reinforc": 1, "relat": [54, 97], "relationship": 204, "reload": 82, "rememb": [42, 59, 95, 103], "remov": [55, 57, 58, 71, 153, 167], "renam": [71, 82, 160, 167], "reorgan": 157, "repeat": [144, 158], "replac": 158, "repli": 132, "replic": [54, 176, 178, 182], "report": 10, "repres": [37, 61, 65, 158], "represent": [57, 135, 158], "requir": [161, 183, 211], "resampl": 158, "research": [117, 147, 182], "reset": [165, 166, 170], "reset_index": 170, "reshap": [157, 174], "residplot": 195, "resolut": 105, "resourc": [24, 118, 152, 159, 173, 176, 177, 178, 179, 181, 183, 188, 208], "respons": 122, "result": [11, 17, 18, 140, 158, 177, 178, 181, 183], "retriev": [121, 136], "return": [38, 55, 56, 57, 76], "revers": [49, 50, 55, 158], "rins": 144, "rmdir": 71, "role": 110, "round": 158, "row": [158, 161, 162, 163, 166, 168, 172], "rsourc": 182, "rugplot": 196, "rule": [78, 90, 92], "run": [89, 146, 174, 181, 183, 184], "salari": 141, "sale": 151, "same": [55, 56, 158, 182], "sampl": [23, 110, 112, 158, 209], "save": [70, 151, 171, 175, 177, 179, 182, 183, 184, 185], "scalar": [33, 34, 158, 174], "scale": 5, "scatter": [151, 194], "scatterplot": 204, "schema": [121, 122], "scienc": 212, "scope": 98, "scratch": 21, "script": [86, 158, 179, 183, 184, 185, 187], "seaborn": [189, 190, 191, 192, 193, 197, 198, 199, 200, 208], "search": [41, 82, 137], "second": [21, 61, 158], "section": [23, 112, 209], "see": [92, 151, 176], "seed": [174, 181], "segment": 158, "select": [9, 158, 160, 163, 174], "selector": 121, "self": [104, 108, 136, 182], "semant": 137, "semicolon": 92, "sentenc": 135, "separ": 99, "seq": [56, 57], "sequenc": [21, 41, 54, 99], "sequenti": [121, 192], "seri": [29, 160, 168, 169, 181, 203], "serp": 130, "server": 10, "servic": [140, 141], "set": [6, 8, 12, 17, 18, 19, 20, 49, 57, 58, 94, 146, 158, 163, 169, 175, 178, 180, 181, 182], "set_axi": 167, "set_index": 169, "setdefault": 57, "setter": 40, "setup": [176, 177, 180, 181, 182, 183], "shallow": [55, 57], "shape": [158, 174, 176, 177, 178, 182], "share": [78, 158], "shift": 158, "short": [45, 46, 122, 146], "shortcut": [45, 46], "should": [55, 56, 158, 177, 178, 180, 181], "show": 151, "sigma": 31, "sign": [96, 158], "signific": 174, "silicon": 174, "similar": [57, 100, 137], "simpl": [121, 122, 134, 143], "singl": [76, 86, 91, 105, 161, 164, 167, 178, 182], "sixth": 158, "size": [158, 182, 183], "skip": 21, "sleep": [67, 68], "slice": [54, 55, 56, 153], "slide": 158, "small": 158, "smaller": 137, "soap": 151, "solut": [5, 6], "some": 196, "sort": [55, 56, 57, 153, 158, 160, 171, 172], "sourc": 139, "space": [167, 183], "span": [41, 46, 66], "special": [41, 93, 97, 106], "specif": [26, 55, 56, 57, 73, 163, 182], "specifi": [41, 55, 96, 143], "speed": [177, 183], "split": [12, 14, 17, 18, 19, 20, 41, 175, 176, 182], "splitter": 121, "spread": 73, "squar": 41, "squeez": 174, "stack": [151, 174], "stai": 108, "star": 41, "start": [26, 41, 170], "stat": 183, "state_dict": 175, "statement": [44, 45, 46, 47, 48, 49, 50, 51, 59, 73, 76, 82, 91], "statist": [82, 153, 157, 160, 171], "step": [100, 146, 177], "still": 134, "store": [183, 185], "str": 57, "straight": 176, "stream": [37, 134], "strftime": [61, 62, 67], "string": [26, 41, 49, 50, 54, 55, 57, 59, 61, 62, 63, 82, 86, 93, 94, 96, 121], "strip": 198, "strptime": [61, 63, 67], "struct_tim": 67, "structur": [99, 121, 140, 141, 146, 158, 183], "stuff": 133, "style": [54, 151], "sub": 41, "subclass": 158, "subn": 41, "subpart": 158, "subplot": 151, "subsequ": 158, "subset": [14, 153, 158, 183], "subtract": [33, 34, 158], "suffix": 167, "suit": 180, "sum": [158, 174], "summar": [121, 122, 133, 135, 147], "summari": [41, 54, 55, 56, 57, 58, 122, 155, 160, 180, 182], "summarywrit": 181, "summat": 31, "super": 105, "supervis": 1, "support": [54, 142], "suppress": 164, "swap": 158, "swarm": [197, 198], "sy": 82, "symmetr": 58, "syntax": [45, 46, 47, 48, 49, 50, 59, 72], "system": 1, "t": 41, "tabl": [123, 182], "tabular": 122, "tail": 163, "takeawai": [178, 180, 181, 182, 183], "techniqu": 143, "tell": 158, "templat": [121, 134, 135, 144], "tensor": [174, 176], "tensorboard": 181, "terminologi": 182, "test": [10, 12, 14, 17, 18, 19, 20, 55, 56, 57, 58, 160, 175, 176, 177, 178, 180, 183], "test_step": [178, 179, 184, 185], "text": [96, 121, 122, 135, 136, 140, 141, 146], "than": [58, 158], "thei": 158, "them": [121, 158, 179, 183, 184, 185], "thi": [0, 55, 57, 143, 151, 174, 184, 185], "thing": [42, 130, 176, 179], "those": 137, "threshold": 9, "through": [36, 54, 55, 56, 57, 58, 143, 144, 146, 177, 178], "throw": [55, 56], "tile": 158, "time": [24, 41, 55, 61, 62, 64, 65, 66, 67, 68, 69, 155, 158, 177, 183, 203], "timedelata": 65, "timedelta": 61, "timestamp": [61, 62, 66, 146], "timezon": [61, 65], "tinyvgg": [178, 184, 185], "tip": [201, 204], "titan": 201, "titl": [23, 112, 146, 209], "to_dict": 168, "todai": [61, 64, 158], "togeth": [175, 176, 178, 182], "token": 182, "tomorrow": 158, "tone": 143, "tool": [120, 121, 130, 211], "toolkit": 121, "toothpast": 151, "top": [137, 163, 198], "topic": [24, 43, 91, 125, 146, 212], "torch": [175, 182], "torchinfo": [178, 180], "torchvis": [178, 180, 182], "total": [57, 151, 158, 172], "toward": 179, "toyota": 172, "track": 181, "tradeoff": [177, 183], "trail": 167, "train": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "train_step": [178, 179, 184, 185], "transcript": 148, "transfer": [44, 180], "transform": [21, 178, 180, 181, 182, 183], "transpos": 33, "triangl": 158, "tricki": 58, "triplet": 158, "true": [55, 57, 158], "try": [73, 178], "tupl": [49, 55, 56, 57, 73, 94], "turn": [146, 176, 178, 182, 183], "tutori": [26, 142], "tweet": 143, "twitter": [132, 143, 147], "two": [54, 61, 65, 76, 158, 169, 172, 179], "txt": [70, 183], "type": [1, 24, 53, 55, 56, 57, 60, 70, 76, 93, 94, 95, 96, 104, 105, 154, 158, 161, 162, 183], "typeerror": [56, 72], "typic": 1, "u": [92, 196], "ubyt": 158, "under": 158, "underfit": 178, "underscor": 41, "understand": 122, "unequ": 158, "unicod": 93, "union": 58, "uniqu": 158, "unit": [8, 34], "univari": 14, "univers": 156, "unknown": 135, "unpack": [73, 99], "unsqueez": 174, "unsupervis": 1, "untidi": 206, "up": [82, 136, 137, 144, 146, 178, 180, 181, 182], "upcom": 26, "updat": [57, 172, 181], "upload": 183, "us": [2, 9, 26, 37, 38, 40, 41, 49, 50, 53, 55, 56, 61, 62, 65, 73, 78, 81, 82, 86, 92, 96, 103, 108, 121, 122, 123, 131, 140, 141, 146, 147, 151, 153, 158, 161, 162, 163, 164, 167, 168, 169, 172, 174, 175, 177, 178, 180, 181, 182, 183], "user": [74, 87, 96, 140, 141, 143, 161], "util": 179, "v": [6, 41, 59, 86, 100, 161, 164, 179, 183, 191], "valid": 92, "valu": [38, 55, 56, 57, 76, 92, 96, 103, 158, 161, 163, 166, 168, 203], "valueerror": [63, 72], "vanilla": [122, 142], "variabl": [5, 38, 57, 77, 78, 79, 92, 98, 99, 103, 161, 198], "variou": 96, "vector": [8, 34, 135, 158, 174], "vectorstor": 121, "versa": 66, "version": [153, 158], "vertic": [158, 196], "vice": 66, "video": 148, "view": [160, 181], "violin": [198, 200], "violinplot": 201, "virtual": 26, "vision": 177, "visual": [9, 177, 178, 182, 183, 196], "vit": [182, 183], "vstack": 157, "w": [41, 158], "wai": [41, 55, 181, 183], "want": [59, 179], "warn": 158, "we": [26, 38, 56, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "websit": [0, 147], "welcom": [215, 216], "what": [1, 22, 33, 34, 49, 50, 54, 55, 56, 57, 58, 61, 76, 78, 80, 81, 82, 84, 85, 87, 98, 100, 108, 110, 121, 122, 157, 158, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 196, 206, 207], "when": [38, 50, 53, 55, 57, 155, 158], "where": [41, 161, 166, 177, 179, 180, 182, 183], "which": [55, 158, 180], "while": [49, 50, 51, 96, 160, 167], "whisker": 150, "whitespac": 41, "who": 174, "whose": 158, "why": [0, 1, 24, 49, 50, 56, 105, 108, 121, 122, 153, 174, 179, 180, 181, 182, 183], "wich": 158, "wide": 206, "widget": 192, "width": 96, "wild": [179, 185], "window": 158, "without": [40, 76, 158, 168, 170, 178], "wolfram": 130, "word": 41, "work": [36, 54, 62, 63, 109, 121, 134, 141, 171, 179, 211], "workflow": [1, 175, 179, 182], "world": [10, 73, 89, 140, 141, 150], "would": [57, 143, 179], "wrap": 82, "write": [70, 73, 90, 144, 158], "writer": 181, "x": [10, 158], "xi": 158, "xlsx": 70, "xml": 70, "y": [10, 158], "yaml": [7, 111, 210], "year": [61, 151], "yesterdai": 158, "yj": 158, "you": [59, 130, 143, 146, 174, 179, 180, 181, 182], "your": [26, 121, 133, 137, 143, 144, 146, 151], "youtub": 147, "z": [41, 158], "z0": 41, "za": 41, "zapier": 131, "zero": [41, 158, 174], "zip": 73}})